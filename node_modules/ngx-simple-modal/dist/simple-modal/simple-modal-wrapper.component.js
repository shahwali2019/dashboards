"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var SimpleModalWrapperComponent = (function () {
    function SimpleModalWrapperComponent(resolver) {
        this.resolver = resolver;
        this.modalClasses = 'modal fade-anim';
    }
    SimpleModalWrapperComponent.prototype.addComponent = function (component) {
        var factory = this.resolver.resolveComponentFactory(component);
        var injector = core_1.ReflectiveInjector.fromResolvedProviders([], this.viewContainer.injector);
        var componentRef = factory.create(injector);
        this.viewContainer.insert(componentRef.hostView);
        this.content = componentRef.instance;
        this.content.wrapper = this.wrapper;
        return this.content;
    };
    SimpleModalWrapperComponent.prototype.onClickOutsideModalContent = function (contentClass, callback) {
        this.clickOutsideCallback = callback;
        var containerEl = this.wrapper.nativeElement;
        var contentEl = containerEl.querySelector(':first-child');
        contentEl.addEventListener('click', this.stopEventPropagation);
        containerEl.addEventListener('click', this.clickOutsideCallback, false);
    };
    SimpleModalWrapperComponent.prototype.ngOnDestroy = function () {
        if (this.clickOutsideCallback) {
            var containerEl = this.wrapper.nativeElement;
            containerEl
                .querySelector(':first-child')
                .removeEventListener('click', this.stopEventPropagation);
            containerEl.removeEventListener('click', this.clickOutsideCallback, false);
            this.clickOutsideCallback = null;
        }
    };
    SimpleModalWrapperComponent.prototype.stopEventPropagation = function (event) {
        event.stopPropagation();
    };
    __decorate([
        core_1.ViewChild('viewContainer', { read: core_1.ViewContainerRef, static: true }),
        __metadata("design:type", Object)
    ], SimpleModalWrapperComponent.prototype, "viewContainer", void 0);
    __decorate([
        core_1.ViewChild('wrapper', { read: core_1.ElementRef, static: true }),
        __metadata("design:type", core_1.ElementRef)
    ], SimpleModalWrapperComponent.prototype, "wrapper", void 0);
    SimpleModalWrapperComponent = __decorate([
        core_1.Component({
            selector: 'simple-modal-wrapper',
            template: "\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\n      <ng-template #viewContainer></ng-template>\n    </div>\n  ",
        }),
        __metadata("design:paramtypes", [core_1.ComponentFactoryResolver])
    ], SimpleModalWrapperComponent);
    return SimpleModalWrapperComponent;
}());
exports.SimpleModalWrapperComponent = SimpleModalWrapperComponent;
//# sourceMappingURL=simple-modal-wrapper.component.js.map