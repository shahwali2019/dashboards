import { ElementRef, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { SimpleModalOptions } from './simple-modal-options';
export interface OnDestroyLike {
    ngOnDestroy(): void;
    [key: string]: any;
}
export declare abstract class SimpleModalComponent<T, T1> implements OnDestroy {
    private observer;
    result: T1;
    wrapper: ElementRef;
    options: SimpleModalOptions;
    private closerCallback;
    constructor();
    mapDataObject(data: T): void;
    setupObserver(): Observable<T1>;
    onClosing(callback: ((component: SimpleModalComponent<any, any>) => Promise<any>)): void;
    close(): Promise<any>;
    onKeydownHandler(evt: KeyboardEvent): void;
    private completeOnDestroy;
    ngOnDestroy(): void;
}
