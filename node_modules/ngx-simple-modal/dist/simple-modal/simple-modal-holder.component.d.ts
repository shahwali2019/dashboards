import { ComponentFactoryResolver, Type } from '@angular/core';
import { Observable } from 'rxjs';
import { SimpleModalOptions, SimpleModalOptionsOverrides } from './simple-modal-options';
import { SimpleModalComponent } from './simple-modal.component';
export declare class SimpleModalHolderComponent {
    private resolver;
    private defaultSimpleModalOptions;
    viewContainer: any;
    modals: Array<SimpleModalComponent<any, any>>;
    previousActiveElement: any;
    constructor(resolver: ComponentFactoryResolver, defaultSimpleModalOptions: SimpleModalOptions);
    addModal<T, T1>(component: Type<SimpleModalComponent<T, T1>>, data?: T, options?: SimpleModalOptionsOverrides): Observable<T1>;
    removeModal(closingModal: SimpleModalComponent<any, any>): Promise<any>;
    removeAllModals(): Promise<any>;
    private toggleBodyClass;
    private configureCloseOnClickOutside;
    private autoFocusFirstElement;
    private restorePreviousFocus;
    private toggleWrapperClass;
    private wait;
    private removeModalFromArray;
}
