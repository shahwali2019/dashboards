{"version":3,"file":"ngx-avatar.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-avatar/lib/sources/async-source.ts","ng://ngx-avatar/lib/sources/avatar-source.enum.ts","ng://ngx-avatar/lib/sources/facebook.ts","ng://ngx-avatar/lib/sources/twitter.ts","ng://ngx-avatar/lib/sources/google.ts","ng://ngx-avatar/lib/sources/custom.ts","ng://ngx-avatar/lib/sources/initials.ts","ng://ngx-avatar/lib/sources/gravatar.ts","ng://ngx-avatar/lib/sources/skype.ts","ng://ngx-avatar/lib/sources/value.ts","ng://ngx-avatar/lib/sources/vkontakte.ts","ng://ngx-avatar/lib/sources/github.ts","ng://ngx-avatar/lib/sources/source.factory.ts","ng://ngx-avatar/lib/avatar-config.token.ts","ng://ngx-avatar/lib/avatar-config.service.ts","ng://ngx-avatar/lib/avatar.service.ts","ng://ngx-avatar/lib/avatar.component.ts","ng://ngx-avatar/lib/avatar.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n * Contract of all async sources.\n * Every async source must implement the processResponse method that extracts the avatar url from the data\n */\nexport abstract class AsyncSource implements Source {\n  readonly sourceType: AvatarSource;\n\n  constructor(public sourceId: string) {}\n\n  abstract getAvatar(size?: number): string;\n  abstract processResponse(data: any, size?: number): string;\n}\n","export enum AvatarSource {\n  FACEBOOK = 'facebook',\n  GOOGLE = 'google',\n  TWITTER = 'twitter',\n  VKONTAKTE = 'vkontakte',\n  SKYPE = 'skype',\n  GRAVATAR = 'gravatar',\n  GITHUB = 'github',\n  CUSTOM = 'custom',\n  INITIALS = 'initials',\n  VALUE = 'value'\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Facebook source impelementation.\n *  Fetch avatar source based on facebook identifier\n *  and image size\n */\nexport class Facebook implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.FACEBOOK;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(size: number): string {\n    return (\n      'https://graph.facebook.com/' +\n      `${this.sourceId}/picture?width=${size}&height=${size}`\n    );\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Twitter source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nexport class Twitter implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.TWITTER;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(size: number): string {\n    const twitterImgSize = this.getImageSize(size);\n    return `https://twitter.com/${\n      this.sourceId\n    }/profile_image?size=${twitterImgSize}`;\n  }\n\n  private getImageSize(size: number) {\n    if (size <= 24) {\n      return 'mini';\n    }\n\n    if (size <= 48) {\n      return 'normal';\n    }\n\n    if (size <= 73) {\n      return 'bigger';\n    }\n\n    return 'original';\n  }\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Google source impelementation.\n *  Fetch avatar source based on google identifier\n *  and image size\n */\nexport class Google extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.GOOGLE;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(): string {\n    return `https://picasaweb.google.com/data/entry/api/user/${\n      this.sourceId\n    }?alt=json`;\n  }\n\n  /**\n   * Extract google avatar from json data\n   */\n  public processResponse(data: any, size?: number): string {\n    const avatarSrc = data.entry.gphoto$thumbnail.$t;\n    if (avatarSrc) {\n      return avatarSrc.replace('s64', 's' + size);\n    }\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Custom source impelementation.\n *  return custom image as an avatar\n *\n */\nexport class Custom implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.CUSTOM;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(): string {\n    return this.sourceId;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n * Initials source impelementation.\n * return the initals of the given value\n */\nexport class Initials implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.INITIALS;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(initialsSize: number): string {\n    return this.getInitials(this.sourceId, initialsSize);\n  }\n\n  /**\n   * Returns the initial letters of a name in a string.\n   */\n  private getInitials(name: string, size: number): string {\n    name = name ? name.trim() : null;\n\n    if (!name) {\n      return '';\n    }\n\n    const initials = name.split(' ');\n\n    if (size && size < initials.length) {\n      return this.constructInitials(initials.slice(0, size));\n    } else {\n      return this.constructInitials(initials);\n    }\n  }\n\n  /**\n   * Iterates a person's name string to get the initials of each word in uppercase.\n   */\n  private constructInitials(elements: string[]): string {\n    if (!elements || !elements.length) {\n      return '';\n    }\n\n    return elements\n      .filter(element => element && element.length > 0)\n      .map(element => element[0].toUpperCase())\n      .join('');\n  }\n}\n","import isRetina from 'is-retina';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Gravatar source impelementation.\n *  Fetch avatar source based on gravatar email\n */\nexport class Gravatar implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.GRAVATAR;\n  public sourceId: string;\n\n  constructor(public value: string) {\n    this.sourceId = value.match('^[a-f0-9]{32}$')\n      ? value\n      : Md5.hashStr(value).toString();\n  }\n\n  public getAvatar(size: number): string {\n    const avatarSize = isRetina() ? size * 2 : size;\n    return `https://secure.gravatar.com/avatar/${\n      this.sourceId\n    }?s=${avatarSize}&d=404`;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n/**\n *  Skype source impelementation.\n *  Fetch avatar source based on skype identifier\n */\nexport class Skype implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.SKYPE;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(): string {\n    return `https://api.skype.com/users/${this.sourceId}/profile/avatar`;\n  }\n}\n","import { Source } from './source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Value source impelementation.\n *  return the value as avatar\n */\nexport class Value implements Source {\n  readonly sourceType: AvatarSource = AvatarSource.VALUE;\n\n  constructor(public sourceId: string) {}\n\n  public getAvatar(): string {\n    return this.sourceId;\n  }\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Vkontakte source impelementation.\n *  Fetch avatar source based on vkontakte identifier\n *  and image size\n */\nconst apiVersion = 5.8;\nexport class Vkontakte extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.VKONTAKTE;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(size: number): string {\n    const imgSize = this.getImageSize(size);\n    return `https://api.vk.com/method/users.get?user_id=${\n      this.sourceId\n    }&v=${apiVersion}&fields=${imgSize}`;\n  }\n\n  /**\n   * extract vkontakte avatar from json data\n   */\n  public processResponse(data: any): string {\n    // avatar key property is the size used to generate avatar url\n    // size property is always the last key in the response object\n    const sizeProperty = Object.keys(data['response'][0]).pop();\n    // return avatar src\n    return data['response'][0][sizeProperty];\n  }\n\n  /**\n   * Returns image size related to vkontakte API\n   */\n  private getImageSize(size: number): string {\n    if (size <= 50) {\n      return 'photo_50';\n    }\n\n    if (size <= 100) {\n      return 'photo_100';\n    }\n\n    if (size <= 200) {\n      return 'photo_200';\n    }\n\n    return 'photo_max';\n  }\n}\n","import { AsyncSource } from './async-source';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n *  Github source impelementation.\n *  Fetch avatar source based on github identifier\n */\nexport class Github extends AsyncSource {\n  readonly sourceType: AvatarSource = AvatarSource.GITHUB;\n\n  constructor(sourceId: string) {\n    super(sourceId);\n  }\n\n  public getAvatar(): string {\n    return `https://api.github.com/users/${this.sourceId}`;\n  }\n\n  /**\n   * extract github avatar from json data\n   */\n  public processResponse(data: any, size?: number): string {\n    if (size) {\n      return `${data.avatar_url}&s=${size}`;\n    }\n    return data.avatar_url;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { Facebook } from './facebook';\nimport { Twitter } from './twitter';\nimport { Google } from './google';\nimport { Custom } from './custom';\nimport { Initials } from './initials';\nimport { Gravatar } from './gravatar';\nimport { Skype } from './skype';\nimport { Value } from './value';\nimport { Vkontakte } from './vkontakte';\nimport { Github } from './github';\nimport { SourceCreator } from './source.creator';\nimport { AvatarSource } from './avatar-source.enum';\n\n/**\n * Factory class that implements factory method pattern.\n * Used to create Source implementation class based\n * on the source Type\n */\n@Injectable()\nexport class SourceFactory {\n  private sources: { [key: string]: SourceCreator } = {};\n\n  constructor() {\n    this.sources[AvatarSource.FACEBOOK] = Facebook;\n    this.sources[AvatarSource.TWITTER] = Twitter;\n    this.sources[AvatarSource.GOOGLE] = Google;\n    this.sources[AvatarSource.SKYPE] = Skype;\n    this.sources[AvatarSource.GRAVATAR] = Gravatar;\n    this.sources[AvatarSource.CUSTOM] = Custom;\n    this.sources[AvatarSource.INITIALS] = Initials;\n    this.sources[AvatarSource.VALUE] = Value;\n    this.sources[AvatarSource.VKONTAKTE] = Vkontakte;\n    this.sources[AvatarSource.GITHUB] = Github;\n  }\n\n  public newInstance(sourceType: AvatarSource, sourceValue: string): Source {\n    return new this.sources[sourceType](sourceValue);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { AvatarConfig } from './avatar-config';\n/**\n * Token used to inject the AvatarConfig object\n */\nexport const AVATAR_CONFIG = new InjectionToken<AvatarConfig>('avatar.config');\n","import { Injectable, Inject, Optional } from '@angular/core';\n\nimport { AvatarSource } from './sources/avatar-source.enum';\nimport { AVATAR_CONFIG } from './avatar-config.token';\nimport { AvatarConfig } from './avatar-config';\n\n@Injectable()\nexport class AvatarConfigService {\n  constructor(\n    @Optional()\n    @Inject(AVATAR_CONFIG)\n    public userConfig: AvatarConfig\n  ) {}\n\n  public getAvatarSources(defaultSources: AvatarSource[]): AvatarSource[] {\n    if (\n      this.userConfig &&\n      this.userConfig.sourcePriorityOrder &&\n      this.userConfig.sourcePriorityOrder.length\n    ) {\n      const uniqueSources = [...new Set(this.userConfig.sourcePriorityOrder)];\n      const validSources = uniqueSources.filter(source =>\n        defaultSources.includes(source)\n      );\n      return [\n        ...validSources,\n        ...defaultSources.filter(source => !validSources.includes(source))\n      ];\n    }\n    return defaultSources;\n  }\n\n  public getAvatarColors(defaultColors: string[]): string[] {\n    return (\n      (this.userConfig &&\n        this.userConfig.colors &&\n        this.userConfig.colors.length &&\n        this.userConfig.colors) ||\n      defaultColors\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { AvatarConfigService } from './avatar-config.service';\nimport { AvatarSource } from './sources/avatar-source.enum';\n\n/**\n * list of Supported avatar sources\n */\nexport const defaultSources = [\n  AvatarSource.FACEBOOK,\n  AvatarSource.GOOGLE,\n  AvatarSource.TWITTER,\n  AvatarSource.VKONTAKTE,\n  AvatarSource.SKYPE,\n  AvatarSource.GRAVATAR,\n  AvatarSource.GITHUB,\n  AvatarSource.CUSTOM,\n  AvatarSource.INITIALS,\n  AvatarSource.VALUE\n];\n\n/**\n * list of default colors\n */\nexport const defaultColors = [\n  '#1abc9c',\n  '#3498db',\n  '#f1c40f',\n  '#8e44ad',\n  '#e74c3c',\n  '#d35400',\n  '#2c3e50',\n  '#7f8c8d'\n];\n\n/**\n * Provides utilities methods related to Avatar component\n */\n@Injectable()\nexport class AvatarService {\n  public avatarSources: AvatarSource[] = defaultSources;\n  public avatarColors: string[] = defaultColors;\n\n  constructor(\n    private http: HttpClient,\n    private avatarConfigService: AvatarConfigService\n  ) {\n    this.overrideAvatarSources();\n    this.overrideAvatarColors();\n  }\n\n  public fetchAvatar(avatarUrl: string): Observable<any> {\n    return this.http.get(avatarUrl);\n  }\n\n  public getRandomColor(avatarText: string): string {\n    if (!avatarText) {\n      return 'transparent';\n    }\n    const asciiCodeSum = this.calculateAsciiCode(avatarText);\n    return this.avatarColors[asciiCodeSum % this.avatarColors.length];\n  }\n\n  public copmareSources(\n    sourceType1: AvatarSource,\n    sourceType2: AvatarSource\n  ): number {\n    return (\n      this.getSourcePriority(sourceType1) - this.getSourcePriority(sourceType2)\n    );\n  }\n\n  public isSource(source: string): boolean {\n    return this.avatarSources.includes(source as AvatarSource);\n  }\n\n  public isTextAvatar(sourceType: AvatarSource): boolean {\n    return [AvatarSource.INITIALS, AvatarSource.VALUE].includes(sourceType);\n  }\n\n  private overrideAvatarSources(): void {\n    this.avatarSources = this.avatarConfigService.getAvatarSources(\n      defaultSources\n    );\n  }\n\n  private overrideAvatarColors(): void {\n    this.avatarColors = this.avatarConfigService.getAvatarColors(defaultColors);\n  }\n\n  private calculateAsciiCode(value: string): number {\n    return value\n      .split('')\n      .map(letter => letter.charCodeAt(0))\n      .reduce((previous, current) => previous + current);\n  }\n\n  private getSourcePriority(sourceType: AvatarSource) {\n    return this.avatarSources.indexOf(sourceType);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChange,\n  OnDestroy\n} from '@angular/core';\n\nimport { Source } from './sources/source';\nimport { AsyncSource } from './sources/async-source';\nimport { SourceFactory } from './sources/source.factory';\nimport { AvatarService } from './avatar.service';\nimport { AvatarSource } from './sources/avatar-source.enum';\nimport { takeWhile, map } from 'rxjs/operators';\n\n/**\n * Universal avatar component that\n * generates avatar from different sources\n *\n * export\n * class AvatarComponent\n * implements {OnChanges}\n */\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-avatar',\n  styles: [\n    `\n      :host {\n        border-radius: '50%';\n      }\n    `\n  ],\n  template: `\n    <div\n      (click)=\"onAvatarClicked()\"\n      class=\"avatar-container\"\n      [ngStyle]=\"hostStyle\"\n    >\n      <img\n        *ngIf=\"avatarSrc; else textAvatar\"\n        [src]=\"avatarSrc\"\n        [width]=\"size\"\n        [height]=\"size\"\n        [ngStyle]=\"avatarStyle\"\n        (error)=\"fetchAvatarSource($event)\"\n        class=\"avatar-content\"\n      />\n      <ng-template #textAvatar>\n        <div *ngIf=\"avatarText\" class=\"avatar-content\" [ngStyle]=\"avatarStyle\">\n          {{ avatarText }}\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class AvatarComponent implements OnChanges, OnDestroy {\n  @Input()\n  public round = true;\n  @Input()\n  public size = 50;\n  @Input()\n  public textSizeRatio = 3;\n  @Input()\n  public bgColor: string;\n  @Input()\n  public fgColor = '#FFF';\n  @Input()\n  public borderColor: string;\n  @Input()\n  public style: any = {};\n  @Input()\n  public cornerRadius = 0;\n  @Input('facebookId')\n  public facebook: string;\n  @Input('twitterId')\n  public twitter: string;\n  @Input('googleId')\n  public google: string;\n  @Input('vkontakteId')\n  public vkontakte: string;\n  @Input('skypeId')\n  public skype: string;\n  @Input('gravatarId')\n  public gravatar: string;\n  @Input('githubId')\n  public github: string;\n  @Input('src')\n  public custom: string;\n  @Input('name')\n  public initials: string;\n  @Input('value')\n  public value: string;\n  @Input('placeholder')\n  public placeholder: string;\n  @Input('initialsSize')\n  public initialsSize: number;\n\n  @Output()\n  public clickOnAvatar: EventEmitter<any> = new EventEmitter<any>();\n\n  public isAlive = true;\n  public avatarSrc: string;\n  public avatarText: string;\n  public avatarStyle: any = {};\n  public hostStyle: any = {};\n\n  private currentSource = 0;\n  private sources: Source[] = Array();\n\n  constructor(\n    public elementRef: ElementRef,\n    public sourceFactory: SourceFactory,\n    private avatarService: AvatarService\n  ) {}\n\n  public onAvatarClicked(): void {\n    this.clickOnAvatar.emit(this.sources[this.currentSource - 1]);\n  }\n\n  /**\n   * Detect inputs change\n   *\n   * param {{ [propKey: string]: SimpleChange }} changes\n   *\n   * memberof AvatarComponent\n   */\n  public ngOnChanges(changes: { [propKey: string]: SimpleChange }): void {\n    for (const propName in changes) {\n      if (\n        this.avatarService.isSource(propName) &&\n        changes[propName].currentValue\n      ) {\n        const currentValue = changes[propName].currentValue;\n        this.addSource(AvatarSource[propName.toUpperCase()], currentValue);\n      }\n    }\n    // reintialize the avatar component when a source property value has changed\n    // the fallback system must be re-invoked with the new values.\n    this.initializeAvatar();\n  }\n\n  /**\n   * Fetch avatar source\n   *\n   * param {any} event\n   *\n   * memberOf AvatarComponent\n   */\n  public fetchAvatarSource(event?: any): void {\n    const avatarSource = this.sources[this.currentSource];\n    if (!avatarSource) {\n      return;\n    }\n    if (this.avatarService.isTextAvatar(avatarSource.sourceType)) {\n      this.buildTextAvatar(avatarSource);\n      // TODO: check if this is needed\n      this.avatarSrc = undefined;\n    } else {\n      this.buildImageAvatar(avatarSource);\n    }\n    this.currentSource++;\n  }\n\n  public ngOnDestroy(): void {\n    this.isAlive = false;\n  }\n\n  /**\n   * Initialize the avatar component and its fallback system\n   */\n  private initializeAvatar(): void {\n    this.currentSource = 0;\n    if (this.sources.length > 0 && this.sources[this.currentSource]) {\n      this.sortAvatarSources();\n      this.fetchAvatarSource();\n      this.hostStyle = {\n        width: this.size + 'px',\n        height: this.size + 'px'\n      };\n    }\n  }\n\n  private sortAvatarSources(): void {\n    this.sources.sort((source1, source2) =>\n      this.avatarService.copmareSources(source1.sourceType, source2.sourceType)\n    );\n  }\n\n  private buildTextAvatar(avatarSource: Source): void {\n    this.avatarText = avatarSource.getAvatar(this.initialsSize);\n    this.avatarStyle = this.getInitialsStyle(avatarSource.sourceId);\n  }\n\n  private buildImageAvatar(avatarSource: Source): void {\n    this.avatarStyle = this.getImageStyle();\n    if (avatarSource instanceof AsyncSource) {\n      this.fetchAndProcessAsyncAvatar(avatarSource);\n    } else {\n      this.avatarSrc = avatarSource.getAvatar(this.size);\n    }\n  }\n\n  /**\n   *\n   * returns initials style\n   *\n   * memberOf AvatarComponent\n   */\n  private getInitialsStyle(avatarValue: string): void {\n    return {\n      textAlign: 'center',\n      borderRadius: this.round ? '100%' : this.cornerRadius + 'px',\n      border: this.borderColor ? '1px solid ' + this.borderColor : '',\n      textTransform: 'uppercase',\n      color: this.fgColor,\n      backgroundColor: this.bgColor\n        ? this.bgColor\n        : this.avatarService.getRandomColor(avatarValue),\n      font:\n        Math.floor(this.size / this.textSizeRatio) +\n        'px Helvetica, Arial, sans-serif',\n      lineHeight: this.size + 'px',\n      ...this.style\n    };\n  }\n\n  /**\n   *\n   * returns image style\n   *\n   * memberOf AvatarComponent\n   */\n  private getImageStyle(): void {\n    return {\n      maxWidth: '100%',\n      borderRadius: this.round ? '50%' : this.cornerRadius + 'px',\n      border: this.borderColor ? '1px solid ' + this.borderColor : '',\n      width: this.size,\n      height: this.size,\n      ...this.style\n    };\n  }\n  /**\n   * Fetch avatar image asynchrounsly.\n   *\n   * param {Source} source represents avatar source\n   * memberof AvatarComponent\n   */\n  private fetchAndProcessAsyncAvatar(source: AsyncSource): void {\n    this.avatarService\n      .fetchAvatar(source.getAvatar())\n      .pipe(\n        takeWhile(() => this.isAlive),\n        map(response => source.processResponse(response, this.size))\n      )\n      .subscribe(\n        avatarSrc => (this.avatarSrc = avatarSrc),\n        err => {\n          console.error(\n            `ngx-avatar: error while fetching ${source.sourceType} avatar `\n          );\n        }\n      );\n  }\n\n  /**\n   * Add avatar source\n   *\n   * param sourceType avatar source type e.g facebook,twitter, etc.\n   * param sourceValue  source value e.g facebookId value, etc.\n   */\n  private addSource(sourceType: AvatarSource, sourceValue: string): void {\n    if (!this.isSourceExist(sourceType)) {\n      this.sources.push(\n        this.sourceFactory.newInstance(sourceType, sourceValue)\n      );\n    } else {\n      const index = this.sources.findIndex(\n        source => source.sourceType === sourceType\n      );\n      this.sources[index].sourceId = sourceValue;\n    }\n  }\n\n  private isSourceExist(avatarSource: AvatarSource): boolean {\n    return this.sources.map(source => source.sourceType).includes(avatarSource);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AvatarComponent } from './avatar.component';\nimport { SourceFactory } from './sources/source.factory';\nimport { AvatarService } from './avatar.service';\nimport { AvatarConfig } from './avatar-config';\nimport { AVATAR_CONFIG } from './avatar-config.token';\nimport { AvatarConfigService } from './avatar-config.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AvatarComponent],\n  providers: [SourceFactory, AvatarService, AvatarConfigService],\n  exports: [AvatarComponent]\n})\nexport class AvatarModule {\n  static forRoot(avatarConfig?: AvatarConfig): ModuleWithProviders {\n    return {\n      ngModule: AvatarModule,\n      providers: [\n        { provide: AVATAR_CONFIG, useValue: avatarConfig ? avatarConfig : {} }\n      ]\n    };\n  }\n}\n"],"names":["tslib_1.__extends","Md5","Injectable","InjectionToken","Optional","Inject","HttpClient","EventEmitter","takeWhile","map","Component","ElementRef","Input","Output","NgModule","CommonModule"],"mappings":"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"}