import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';
// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255
import * as momentImported from 'moment';
var moment = momentImported;
var CalendarSchedulerEventComponent = /** @class */ (function () {
    function CalendarSchedulerEventComponent() {
        this.showContent = true;
        this.showActions = true;
        this.showStatus = true;
        this.eventClicked = new EventEmitter();
    }
    CalendarSchedulerEventComponent.prototype.ngOnInit = function () {
        this.title = this.title || this.event.event.title + ", " + moment(this.event.event.start).format('dddd L, LT');
    };
    CalendarSchedulerEventComponent.prototype.onMouseEnter = function () {
        // Maybe do something
    };
    CalendarSchedulerEventComponent.prototype.onMouseLeave = function () {
        // Maybe do something
    };
    /**
     * @hidden
     */
    CalendarSchedulerEventComponent.prototype.onEventClick = function (mouseEvent, event) {
        if (mouseEvent.stopPropagation) {
            mouseEvent.stopPropagation();
        }
        if (event.isClickable) {
            this.eventClicked.emit({ event: event });
        }
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], CalendarSchedulerEventComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CalendarSchedulerEventComponent.prototype, "day", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CalendarSchedulerEventComponent.prototype, "event", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], CalendarSchedulerEventComponent.prototype, "showContent", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], CalendarSchedulerEventComponent.prototype, "showActions", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], CalendarSchedulerEventComponent.prototype, "showStatus", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", TemplateRef)
    ], CalendarSchedulerEventComponent.prototype, "customTemplate", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", TemplateRef)
    ], CalendarSchedulerEventComponent.prototype, "eventTitleTemplate", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], CalendarSchedulerEventComponent.prototype, "eventClicked", void 0);
    CalendarSchedulerEventComponent = tslib_1.__decorate([
        Component({
            selector: 'calendar-scheduler-event',
            template: "\n        <ng-template #defaultTemplate>\n            <div class=\"cal-scheduler-event\"\n                [title]=\"title\"\n                [class.cal-disabled]=\"event.event.isDisabled\"\n                [class.cal-not-clickable]=\"!event.event.isClickable\"\n                [class.cal-draggable]=\"event.event.draggable\"\n                [class.cal-starts-before-day]=\"event.startsBeforeDay\"\n                [class.cal-ends-after-day]=\"event.endsAfterDay\"\n                [style.backgroundColor]=\"event.event.color?.secondary\"\n                [style.borderColor]=\"event.event.color?.primary\"\n                (mwlClick)=\"onEventClick($event, event.event)\"\n                (mouseenter)=\"onMouseEnter()\"\n                (mouseleave)=\"onMouseLeave()\">\n                <calendar-scheduler-event-title\n                    view=\"week\"\n                    [event]=\"event.event\"\n                    [showStatus]=\"showStatus\"\n                    [showContent]=\"showContent\"\n                    [showActions]=\"showActions\"\n                    [customTemplate]=\"eventTitleTemplate\">\n                </calendar-scheduler-event-title>\n                <calendar-scheduler-event-content\n                    *ngIf=\"showContent\"\n                    [event]=\"event.event\">\n                </calendar-scheduler-event-content>\n                <calendar-scheduler-event-actions\n                    *ngIf=\"showActions && showContent && (event.event.isClickable || event.event.isDisabled)\"\n                    [event]=\"event.event\">\n                </calendar-scheduler-event-actions>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n                title: title,\n                day: day,\n                event: event,\n                showContent: showContent,\n                showActions: showActions,\n                showStatus: showStatus,\n                eventTitleTemplate: eventTitleTemplate,\n                eventClicked: eventClicked\n            }\">\n        </ng-template>\n    ",
            host: {
                '[style.height.%]': '100'
            }
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], CalendarSchedulerEventComponent);
    return CalendarSchedulerEventComponent;
}());
export { CalendarSchedulerEventComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY2FsZW5kYXItc2NoZWR1bGVyLyIsInNvdXJjZXMiOlsibW9kdWxlcy9zY2hlZHVsZXIvY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFPNUYsc0ZBQXNGO0FBQ3RGLE9BQU8sS0FBSyxjQUFjLE1BQU0sUUFBUSxDQUFDO0FBQ3pDLElBQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQztBQXNEOUI7SUFtQkk7UUFaUyxnQkFBVyxHQUFZLElBQUksQ0FBQztRQUU1QixnQkFBVyxHQUFZLElBQUksQ0FBQztRQUU1QixlQUFVLEdBQVksSUFBSSxDQUFDO1FBTTFCLGlCQUFZLEdBQW9ELElBQUksWUFBWSxFQUFxQyxDQUFDO0lBRTlHLENBQUM7SUFFWixrREFBUSxHQUFmO1FBQ0ksSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxJQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssVUFBSyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBRyxDQUFDO0lBQ25ILENBQUM7SUFFRCxzREFBWSxHQUFaO1FBQ0kscUJBQXFCO0lBQ3pCLENBQUM7SUFFRCxzREFBWSxHQUFaO1FBQ0kscUJBQXFCO0lBQ3pCLENBQUM7SUFFRDs7T0FFRztJQUNILHNEQUFZLEdBQVosVUFBYSxVQUFzQixFQUFFLEtBQTZCO1FBQzlELElBQUksVUFBVSxDQUFDLGVBQWUsRUFBRTtZQUM1QixVQUFVLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDaEM7UUFDRCxJQUFJLEtBQUssQ0FBQyxXQUFXLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7SUExQ1E7UUFBUixLQUFLLEVBQUU7O2tFQUFlO0lBRWQ7UUFBUixLQUFLLEVBQUU7O2dFQUF1QjtJQUV0QjtRQUFSLEtBQUssRUFBRTs7a0VBQTJCO0lBRTFCO1FBQVIsS0FBSyxFQUFFOzt3RUFBNkI7SUFFNUI7UUFBUixLQUFLLEVBQUU7O3dFQUE2QjtJQUU1QjtRQUFSLEtBQUssRUFBRTs7dUVBQTRCO0lBRTNCO1FBQVIsS0FBSyxFQUFFOzBDQUFpQixXQUFXOzJFQUFNO0lBRWpDO1FBQVIsS0FBSyxFQUFFOzBDQUFxQixXQUFXOytFQUFNO0lBRXBDO1FBQVQsTUFBTSxFQUFFOzBDQUFlLFlBQVk7eUVBQTRGO0lBakJ2SCwrQkFBK0I7UUFwRDNDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSwwQkFBMEI7WUFDcEMsUUFBUSxFQUFFLHVuRUE2Q1Q7WUFDRCxJQUFJLEVBQUU7Z0JBQ0Ysa0JBQWtCLEVBQUUsS0FBSzthQUM1QjtTQUNKLENBQUM7O09BQ1csK0JBQStCLENBNEMzQztJQUFELHNDQUFDO0NBQUEsQUE1Q0QsSUE0Q0M7U0E1Q1ksK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICAgIFNjaGVkdWxlclZpZXdEYXksXHJcbiAgICBDYWxlbmRhclNjaGVkdWxlckV2ZW50LFxyXG4gICAgU2NoZWR1bGVyVmlld0V2ZW50XHJcbn0gZnJvbSAnLi9tb2RlbHMnO1xyXG5cclxuLy8gV09SS0FST1VORDogaHR0cHM6Ly9naXRodWIuY29tL2RoZXJnZXMvbmctcGFja2Fnci9pc3N1ZXMvMjE3I2lzc3VlY29tbWVudC0zMzk0NjAyNTVcclxuaW1wb3J0ICogYXMgbW9tZW50SW1wb3J0ZWQgZnJvbSAnbW9tZW50JztcclxuY29uc3QgbW9tZW50ID0gbW9tZW50SW1wb3J0ZWQ7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0VGVtcGxhdGU+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYWwtc2NoZWR1bGVyLWV2ZW50XCJcclxuICAgICAgICAgICAgICAgIFt0aXRsZV09XCJ0aXRsZVwiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3MuY2FsLWRpc2FibGVkXT1cImV2ZW50LmV2ZW50LmlzRGlzYWJsZWRcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLmNhbC1ub3QtY2xpY2thYmxlXT1cIiFldmVudC5ldmVudC5pc0NsaWNrYWJsZVwiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3MuY2FsLWRyYWdnYWJsZV09XCJldmVudC5ldmVudC5kcmFnZ2FibGVcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLmNhbC1zdGFydHMtYmVmb3JlLWRheV09XCJldmVudC5zdGFydHNCZWZvcmVEYXlcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLmNhbC1lbmRzLWFmdGVyLWRheV09XCJldmVudC5lbmRzQWZ0ZXJEYXlcIlxyXG4gICAgICAgICAgICAgICAgW3N0eWxlLmJhY2tncm91bmRDb2xvcl09XCJldmVudC5ldmVudC5jb2xvcj8uc2Vjb25kYXJ5XCJcclxuICAgICAgICAgICAgICAgIFtzdHlsZS5ib3JkZXJDb2xvcl09XCJldmVudC5ldmVudC5jb2xvcj8ucHJpbWFyeVwiXHJcbiAgICAgICAgICAgICAgICAobXdsQ2xpY2spPVwib25FdmVudENsaWNrKCRldmVudCwgZXZlbnQuZXZlbnQpXCJcclxuICAgICAgICAgICAgICAgIChtb3VzZWVudGVyKT1cIm9uTW91c2VFbnRlcigpXCJcclxuICAgICAgICAgICAgICAgIChtb3VzZWxlYXZlKT1cIm9uTW91c2VMZWF2ZSgpXCI+XHJcbiAgICAgICAgICAgICAgICA8Y2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlXHJcbiAgICAgICAgICAgICAgICAgICAgdmlldz1cIndlZWtcIlxyXG4gICAgICAgICAgICAgICAgICAgIFtldmVudF09XCJldmVudC5ldmVudFwiXHJcbiAgICAgICAgICAgICAgICAgICAgW3Nob3dTdGF0dXNdPVwic2hvd1N0YXR1c1wiXHJcbiAgICAgICAgICAgICAgICAgICAgW3Nob3dDb250ZW50XT1cInNob3dDb250ZW50XCJcclxuICAgICAgICAgICAgICAgICAgICBbc2hvd0FjdGlvbnNdPVwic2hvd0FjdGlvbnNcIlxyXG4gICAgICAgICAgICAgICAgICAgIFtjdXN0b21UZW1wbGF0ZV09XCJldmVudFRpdGxlVGVtcGxhdGVcIj5cclxuICAgICAgICAgICAgICAgIDwvY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlPlxyXG4gICAgICAgICAgICAgICAgPGNhbGVuZGFyLXNjaGVkdWxlci1ldmVudC1jb250ZW50XHJcbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJzaG93Q29udGVudFwiXHJcbiAgICAgICAgICAgICAgICAgICAgW2V2ZW50XT1cImV2ZW50LmV2ZW50XCI+XHJcbiAgICAgICAgICAgICAgICA8L2NhbGVuZGFyLXNjaGVkdWxlci1ldmVudC1jb250ZW50PlxyXG4gICAgICAgICAgICAgICAgPGNhbGVuZGFyLXNjaGVkdWxlci1ldmVudC1hY3Rpb25zXHJcbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJzaG93QWN0aW9ucyAmJiBzaG93Q29udGVudCAmJiAoZXZlbnQuZXZlbnQuaXNDbGlja2FibGUgfHwgZXZlbnQuZXZlbnQuaXNEaXNhYmxlZClcIlxyXG4gICAgICAgICAgICAgICAgICAgIFtldmVudF09XCJldmVudC5ldmVudFwiPlxyXG4gICAgICAgICAgICAgICAgPC9jYWxlbmRhci1zY2hlZHVsZXItZXZlbnQtYWN0aW9ucz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgICAgICA8bmctdGVtcGxhdGVcclxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwiY3VzdG9tVGVtcGxhdGUgfHwgZGVmYXVsdFRlbXBsYXRlXCJcclxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcclxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcclxuICAgICAgICAgICAgICAgIGRheTogZGF5LFxyXG4gICAgICAgICAgICAgICAgZXZlbnQ6IGV2ZW50LFxyXG4gICAgICAgICAgICAgICAgc2hvd0NvbnRlbnQ6IHNob3dDb250ZW50LFxyXG4gICAgICAgICAgICAgICAgc2hvd0FjdGlvbnM6IHNob3dBY3Rpb25zLFxyXG4gICAgICAgICAgICAgICAgc2hvd1N0YXR1czogc2hvd1N0YXR1cyxcclxuICAgICAgICAgICAgICAgIGV2ZW50VGl0bGVUZW1wbGF0ZTogZXZlbnRUaXRsZVRlbXBsYXRlLFxyXG4gICAgICAgICAgICAgICAgZXZlbnRDbGlja2VkOiBldmVudENsaWNrZWRcclxuICAgICAgICAgICAgfVwiPlxyXG4gICAgICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgICBgLFxyXG4gICAgaG9zdDoge1xyXG4gICAgICAgICdbc3R5bGUuaGVpZ2h0LiVdJzogJzEwMCdcclxuICAgIH1cclxufSlcclxuZXhwb3J0IGNsYXNzIENhbGVuZGFyU2NoZWR1bGVyRXZlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcclxuXHJcbiAgICBASW5wdXQoKSBkYXk6IFNjaGVkdWxlclZpZXdEYXk7XHJcblxyXG4gICAgQElucHV0KCkgZXZlbnQ6IFNjaGVkdWxlclZpZXdFdmVudDtcclxuXHJcbiAgICBASW5wdXQoKSBzaG93Q29udGVudDogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd0FjdGlvbnM6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIHNob3dTdGF0dXM6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIGN1c3RvbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICAgIEBJbnB1dCgpIGV2ZW50VGl0bGVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgICBAT3V0cHV0KCkgZXZlbnRDbGlja2VkOiBFdmVudEVtaXR0ZXI8eyBldmVudDogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudCB9PiA9IG5ldyBFdmVudEVtaXR0ZXI8eyBldmVudDogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudCB9PigpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkgeyAgIH1cclxuXHJcbiAgICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRoaXMudGl0bGUgfHwgYCR7dGhpcy5ldmVudC5ldmVudC50aXRsZX0sICR7bW9tZW50KHRoaXMuZXZlbnQuZXZlbnQuc3RhcnQpLmZvcm1hdCgnZGRkZCBMLCBMVCcpfWA7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZUVudGVyKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIE1heWJlIGRvIHNvbWV0aGluZ1xyXG4gICAgfVxyXG5cclxuICAgIG9uTW91c2VMZWF2ZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyBNYXliZSBkbyBzb21ldGhpbmdcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBoaWRkZW5cclxuICAgICAqL1xyXG4gICAgb25FdmVudENsaWNrKG1vdXNlRXZlbnQ6IE1vdXNlRXZlbnQsIGV2ZW50OiBDYWxlbmRhclNjaGVkdWxlckV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKG1vdXNlRXZlbnQuc3RvcFByb3BhZ2F0aW9uKSB7XHJcbiAgICAgICAgICAgIG1vdXNlRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChldmVudC5pc0NsaWNrYWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2xpY2tlZC5lbWl0KHsgZXZlbnQ6IGV2ZW50IH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=