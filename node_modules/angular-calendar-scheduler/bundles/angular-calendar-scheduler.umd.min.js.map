{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://angular-calendar-scheduler/modules/scheduler/scheduler-config.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.ts","ng://angular-calendar-scheduler/modules/common/utils.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-view.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-hour-segment.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-header.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-title.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-content.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-actions.component.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-event-title-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/pipes/scheduler-event-title.pipe.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-date-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/scheduler.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","DAYS_OF_WEEK","SchedulerConfig","config","use","source","defaultValue","undefined","locale","headerDateFormat","Injectable","DEFAULT_WEEKEND_DAYS","SUNDAY","SATURDAY","DAYS_IN_WEEK","MINUTES_IN_HOUR","DEFAULT_HOUR_SEGMENT_HEIGHT_PX","DEFAULT_EVENT_WIDTH_PERCENT","DEFAULT_HOUR_SEGMENTS","getSchedulerViewHourGrid","dateAdapter","args","start","end","viewDate","hourSegments","dayStart","dayEnd","hours","startOfView","setMinutes","setHours","startOfDay","hour","minute","endOfView","startOfMinute","endOfDay","segmentDuration","startOfViewDay","from","v","k","forEach","segments","j","date","addMinutes","addHours","isStart","getSchedulerViewDays","weekStartsOn","startsWithToday","excluded","weekendDays","Date","startOfWeek","days","loop","addDays","some","getDay","today","isPast","isToday","isSameDay","isFuture","isWeekend","indexOf","inMonth","isSameMonth","getSchedulerDay","getEventsInPeriod","events","periodStart","periodEnd","filter","event","isSameSecond","eventStart","eventEnd","isEventInPeriod","trackByDayOrEvent","index","id","trackByHourColumn","day","toISOString","trackByHour","trackByHourSegment","segment","getMinimumEventHeightInMinutes","hourSegmentHeight","getDefaultEventEnd","minimumMinutes","roundToNearest","amount","precision","Math","round","getMinutesMoved","movedY","eventSnapSize","isDraggedWithinPeriod","newStart","newEnd","period","shouldFireDroppedEvent","dropEvent","calendarId","dropData","CalendarSchedulerUtils","getSchedulerView","eventWidth","startOfViewWeek","endOfViewWeek","endOfWeek","eventsInWeek","previousDayEvents","eventsInDay","sort","eventA","eventB","valueOf","map","ev","startsBeforeDay","endsAfterDay","hourHeightModifier","top","differenceInMinutes","startDate","endDate","height","overlappingPreviousEvents","bottom","previousEvent","previousEventTop","previousEventBottom","getOverLappingDayViewEvents","left","width","isProcessed","getFullYear","getMonth","getDate","getHours","startOfHour","endOfHour","eventsInHour","setDate","setMonth","setYear","startOfSegment","endOfSegment","eventsInSegment","DateAdapter","CalendarSchedulerViewComponent","cdr","utils","excludeDays","showEventContent","showEventActions","showEventStatus","showSegmentHour","snapDraggedEvents","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","eventWidthPercent","dayHeaderClicked","EventEmitter","hourClicked","segmentClicked","eventClicked","eventTimesChanged","resizes","Map","eventDragEnter","dragActive","paramIndex","decorator","ngOnInit","_this","refresh","refreshSubscription","subscribe","refreshAll","markForCheck","ngOnChanges","changes","refreshHeader","refreshHourGrid","refreshBody","ngOnDestroy","unsubscribe","getPositioningClasses","getDayClass","getTimeClass","getLengthClass","join","getMinutes","isBefore","durationInMinutes","leftToEndOfDay","leftDurationInMinutes","view","scaleOverlappingEvents","dayModifier","hourModifier","segmentModifier","eventModifier","startTime","endTime","newStartTime","newEndTime","overlappingEvents","maxLeft","divisorFactor_1","floor","resizeStarted","eventsContainer","resizeEvent","set","dayColumnWidth","offsetWidth","resizeHelper","CalendarResizeHelper","validateResize","_a","rectangle","resizing","adjustedEvents","tempEvents","concat","__spread","lastResizeEvent","newEventDates","getResizedEventDates","adjustedEvent","eventIndex","restoreOriginalEvents","resizeEnded","get","delete","emit","type","CalendarEventTimesChangedEventType","Resize","minimumEventHeight","eventWithoutEnd","getOwnPropertySymbols","__rest","smallestResizes","edges","daysDiff","right","minutesMoved","eventDropped","Drop","dragStarted","eventContainer","dragHelper","CalendarDragHelper","validateDrag","x","y","size","linkedEvent","find","dragMove","dragEvent","newEventTimes","getDragMovedEventTimes","originalEvent_1","adjustedEvent_1","dragEnded","dragEndEvent","dayWidth","useY","Drag","daysDragged","adjustedEventsArray","has","originalEvent","existingColumnEvent","clear","tslib_1.__decorate","Input","Function","Subject","TemplateRef","Output","Component","selector","template","encapsulation","ViewEncapsulation","None","tslib_1.__param","Inject","LOCALE_ID","ChangeDetectorRef","String","moment","momentImported","CalendarSchedulerHourSegmentComponent","showHour","title","format","onMouseEnter","mouseEvent","isDisabled","onMouseLeave","onSegmentClick","stopPropagation","CalendarSchedulerHeaderComponent","onDayHeaderClick","CalendarSchedulerEventComponent","showContent","showActions","showStatus","onEventClick","isClickable","host","[style.height.%]","CalendarSchedulerEventTitleComponent","class","CalendarSchedulerEventContentComponent","CalendarSchedulerEventActionsComponent","actions","a","when","onActionClick","action","onClick","SchedulerEventTitleFormatter","tslib_1.__extends","CalendarEventTitleFormatter","SchedulerEventTitlePipe","schedulerEventTitle","transform","titleType","Pipe","name","SchedulerDateFormatter","dayViewHour","Intl","DateTimeFormat","weekViewTitle","year","month","firstDay","lastDay","firstDayMonth","lastDayMonth","firstDayYear","lastDayYear","prevMonthDate","prevMonthDay","daysInMonth","abs","prevMonthYear","Number","nextMonthDate","nextMonthDay","nextMonthYear","anyDateInMonth","CalendarDateFormatter","SCHEDULER_CONFIG","InjectionToken","provideSchedulerConfig","adapterFactory","SchedulerModule","forRoot","ngModule","SchedulerModule_1","providers","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","CalendarModule","Éµ0","declarations","exports","week","addWeeks","addMonths","endOfMonth","startOfMonth","subDays","subWeeks","subMonths"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Auth configuration.\r\n */\r\n@Injectable()\r\nexport class SchedulerConfig {\r\n    locale?: string = 'en';\r\n    headerDateFormat?: 'weekNumber' | 'daysRange' = 'daysRange';\r\n\r\n    constructor(config: SchedulerConfig = {}) {\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return config && source !== undefined ? source : defaultValue;\r\n        }\r\n\r\n        this.locale = use(config.locale, this.locale);\r\n        this.headerDateFormat = use(config.headerDateFormat, this.headerDateFormat);\r\n    }\r\n}\r\n","import {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewDay,\r\n    SchedulerViewEvent,\r\n    SchedulerViewHourSegment,\r\n    SchedulerView,\r\n    SchedulerViewPeriod\r\n} from '../models';\r\nimport {\r\n    DayViewHour,\r\n    DayViewHourSegment\r\n} from 'calendar-utils';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n\r\nexport enum DAYS_OF_WEEK {\r\n    SUNDAY = 0,\r\n    MONDAY = 1,\r\n    TUESDAY = 2,\r\n    WEDNESDAY = 3,\r\n    THURSDAY = 4,\r\n    FRIDAY = 5,\r\n    SATURDAY = 6\r\n}\r\n\r\nconst DEFAULT_WEEKEND_DAYS: number[] = [\r\n    DAYS_OF_WEEK.SUNDAY,\r\n    DAYS_OF_WEEK.SATURDAY\r\n];\r\n\r\nexport const DAYS_IN_WEEK: number = 7;\r\nexport const HOURS_IN_DAY: number = 24;\r\nexport const MINUTES_IN_HOUR: number = 60;\r\nexport const SECONDS_IN_DAY: number = 60 * 60 * 24;\r\n\r\nexport const DEFAULT_HOUR_SEGMENT_HEIGHT_PX = 40;\r\nexport const DEFAULT_EVENT_WIDTH_PERCENT = 100;\r\nexport const DEFAULT_HOUR_SEGMENTS = 2;\r\n\r\nexport interface GetSchedulerViewHourGridArgs {\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    dayStart: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    dayEnd: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n}\r\n\r\nexport function getSchedulerViewHourGrid(dateAdapter: DateAdapter, args: GetSchedulerViewHourGridArgs): DayViewHour[] {\r\n    const viewDate: Date = args.viewDate, hourSegments: number = args.hourSegments, dayStart: any = args.dayStart, dayEnd: any = args.dayEnd;\r\n    const hours: DayViewHour[] = [];\r\n\r\n    const startOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(viewDate), dayStart.hour), dayStart.minute);\r\n    const endOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\r\n    const segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\r\n    const startOfViewDay: Date = dateAdapter.startOfDay(viewDate);\r\n\r\n    const range = (start: number, end: number): number[] => Array.from({ length: ((end + 1) - start) }, (v, k) => k + start);\r\n    const hoursInView: number[] = range(dayStart.hour, dayEnd.hour);\r\n\r\n    hoursInView.forEach((hour: number, i: number) => {\r\n        const segments = [];\r\n        for (let j = 0; j < hourSegments; j++) {\r\n            const date = dateAdapter.addMinutes(dateAdapter.addHours(startOfViewDay, hour), j * segmentDuration);\r\n            if (date >= startOfView && date < endOfView) {\r\n                segments.push({\r\n                    date: date,\r\n                    isStart: j === 0\r\n                });\r\n            }\r\n        }\r\n        if (segments.length > 0) {\r\n            hours.push(<DayViewHour>{ segments: segments });\r\n        }\r\n    });\r\n    return hours;\r\n}\r\n\r\nexport interface GetSchedulerViewArgs {\r\n    events?: CalendarSchedulerEvent[];\r\n    viewDate: Date;\r\n    hourSegments: 1 | 2 | 4 | 6;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    dayStart: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    dayEnd: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    excluded?: number[];\r\n    eventWidth: number;\r\n    hourSegmentHeight: number;\r\n}\r\n\r\nexport function getSchedulerView(dateAdapter: DateAdapter, args: GetSchedulerViewArgs): SchedulerView {\r\n    let events: CalendarSchedulerEvent[] = args.events || [];\r\n    if (!events) { events = []; }\r\n\r\n    const viewDate: Date = args.viewDate;\r\n    const weekStartsOn: number = args.weekStartsOn;\r\n    const startsWithToday: boolean = args.startsWithToday;\r\n    const excluded: number[] = args.excluded || [];\r\n    const hourSegments: number = args.hourSegments || DEFAULT_HOUR_SEGMENTS;\r\n    const hourSegmentHeight: number = args.hourSegmentHeight || DEFAULT_HOUR_SEGMENT_HEIGHT_PX;\r\n    const eventWidth: number = args.eventWidth || DEFAULT_EVENT_WIDTH_PERCENT;\r\n    const dayStart: any = args.dayStart, dayEnd: any = args.dayEnd;\r\n\r\n    const startOfViewWeek: Date = startsWithToday ? dateAdapter.startOfDay(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const endOfViewWeek: Date = startsWithToday ? dateAdapter.addDays(dateAdapter.endOfDay(viewDate), 6) : dateAdapter.endOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n\r\n    const eventsInWeek: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n        events: events,\r\n        periodStart: startOfViewWeek,\r\n        periodEnd: endOfViewWeek\r\n    });\r\n\r\n    const days: SchedulerViewDay[] = getSchedulerViewDays(dateAdapter, {\r\n        viewDate: viewDate,\r\n        weekStartsOn: weekStartsOn,\r\n        startsWithToday: startsWithToday,\r\n        excluded: excluded\r\n    });\r\n    days.forEach((day: SchedulerViewDay) => {\r\n        const startOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(day.date), dayStart.hour), dayStart.minute);\r\n        const endOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(day.date)), dayEnd.hour), dayEnd.minute);\r\n        const previousDayEvents: SchedulerViewEvent[] = [];\r\n\r\n        const eventsInDay: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n            events: eventsInWeek,\r\n            periodStart: startOfView,\r\n            periodEnd: endOfView\r\n        });\r\n\r\n        day.events = eventsInDay\r\n            .sort((eventA: CalendarSchedulerEvent, eventB: CalendarSchedulerEvent) => eventA.start.valueOf() - eventB.start.valueOf())\r\n            .map((ev: CalendarSchedulerEvent) => {\r\n                const eventStart: Date = ev.start;\r\n                const eventEnd: Date = ev.end || eventStart;\r\n                const startsBeforeDay: boolean = eventStart < startOfView;\r\n                const endsAfterDay: boolean = dateAdapter.addMinutes(eventEnd, -1) > endOfView;\r\n                const hourHeightModifier: number = ((hourSegments * hourSegmentHeight) + 1) / MINUTES_IN_HOUR; // +1 for the 1px segment bottom border\r\n\r\n                let top: number = 0;\r\n                if (eventStart > startOfView) {\r\n                    top += dateAdapter.differenceInMinutes(eventStart, startOfView);\r\n                }\r\n                top *= hourHeightModifier;\r\n\r\n                const startDate: Date = startsBeforeDay ? startOfView : eventStart;\r\n                const endDate: Date = endsAfterDay ? endOfView : eventEnd;\r\n                let height: number = dateAdapter.differenceInMinutes(endDate, startDate);\r\n                if (!ev.end) {\r\n                    height = hourSegmentHeight;\r\n                } else {\r\n                    height *= hourHeightModifier;\r\n                }\r\n\r\n                const bottom: number = top + height;\r\n                const overlappingPreviousEvents = getOverLappingDayViewEvents(\r\n                    previousDayEvents,\r\n                    top,\r\n                    bottom\r\n                );\r\n\r\n                let left: number = 0;\r\n                while (overlappingPreviousEvents.some(previousEvent => previousEvent.left === left)) {\r\n                    left += eventWidth;\r\n                }\r\n\r\n                const event: SchedulerViewEvent =\r\n                <SchedulerViewEvent>{\r\n                    event: ev,\r\n                    top: top,\r\n                    height: height,\r\n                    width: eventWidth,\r\n                    left: left,\r\n                    startsBeforeDay: startsBeforeDay,\r\n                    endsAfterDay: endsAfterDay,\r\n                    isProcessed: false\r\n                };\r\n\r\n                previousDayEvents.push(event);\r\n\r\n                return event;\r\n            });\r\n\r\n        day.hours = getSchedulerViewHourGrid(dateAdapter, {\r\n            viewDate: viewDate,\r\n            hourSegments: hourSegments,\r\n            dayStart: {\r\n                hour: dayStart.hour,\r\n                minute: dayStart.minute\r\n            },\r\n            dayEnd: {\r\n                hour: dayEnd.hour,\r\n                minute: dayEnd.minute\r\n            }\r\n        }).map((hour: DayViewHour) => {\r\n            const date: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n\r\n            const startOfHour: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n            const endOfHour: Date = dateAdapter.addMinutes(dateAdapter.addHours(startOfHour, 1), -1);\r\n\r\n            const eventsInHour: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n                events: eventsInDay,\r\n                periodStart: startOfHour,\r\n                periodEnd: endOfHour\r\n            });\r\n\r\n            const segments: SchedulerViewHourSegment[] =\r\n                hour.segments.map((segment: DayViewHourSegment) => {\r\n                    segment.date = dateAdapter.setDate(dateAdapter.setMonth(dateAdapter.setYear(segment.date, day.date.getFullYear()), day.date.getMonth()), day.date.getDate());\r\n\r\n                    const startOfSegment: Date = segment.date;\r\n                    const endOfSegment: Date = dateAdapter.addMinutes(segment.date, MINUTES_IN_HOUR / hourSegments);\r\n\r\n                    const eventsInSegment: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n                        events: eventsInHour,\r\n                        periodStart: startOfSegment,\r\n                        periodEnd: endOfSegment\r\n                    });\r\n\r\n                    return <SchedulerViewHourSegment>{\r\n                        segment: segment,\r\n                        date: new Date(segment.date),\r\n                        events: eventsInSegment\r\n                    };\r\n                });\r\n\r\n            return <SchedulerViewHour>{\r\n                hour: hour,\r\n                date: date,\r\n                events: eventsInHour,\r\n                segments: segments\r\n            };\r\n        });\r\n    });\r\n\r\n    return <SchedulerView>{\r\n        days: days,\r\n        period: <SchedulerViewPeriod>{\r\n            events: eventsInWeek,\r\n            start: startOfViewWeek,\r\n            end: endOfViewWeek\r\n        }\r\n    };\r\n}\r\n\r\nexport interface GetSchedulerViewDaysArgs {\r\n    viewDate: Date;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    excluded?: number[];\r\n    weekendDays?: number[];\r\n}\r\n\r\nexport function getSchedulerViewDays(dateAdapter: DateAdapter, args: GetSchedulerViewDaysArgs): SchedulerViewDay[] {\r\n    const viewDate: Date = args.viewDate;\r\n    const weekStartsOn: number = args.weekStartsOn;\r\n    const startsWithToday: boolean = args.startsWithToday;\r\n    const excluded: number[] = args.excluded || [];\r\n    const weekendDays: number[] = args.weekendDays || DEFAULT_WEEKEND_DAYS;\r\n\r\n    const start = startsWithToday ? new Date(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const days: SchedulerViewDay[] = [];\r\n    const loop = (i: number) => {\r\n        const date = dateAdapter.addDays(start, i);\r\n        if (!excluded.some((e: number) => date.getDay() === e)) {\r\n            days.push(getSchedulerDay(dateAdapter, { date, weekendDays }));\r\n        }\r\n    };\r\n    for (let i = 0; i < DAYS_IN_WEEK; i++) {\r\n        loop(i);\r\n    }\r\n    return days;\r\n}\r\n\r\nfunction getSchedulerDay(dateAdapter: DateAdapter, args: { date: Date, weekendDays: number[] }): SchedulerViewDay {\r\n    const date: Date = args.date;\r\n    const today: Date = dateAdapter.startOfDay(new Date());\r\n\r\n    return <SchedulerViewDay>{\r\n        date: date,\r\n        isPast: date < today,\r\n        isToday: dateAdapter.isSameDay(date, today),\r\n        isFuture: date >= dateAdapter.addDays(today, 1),\r\n        isWeekend: args.weekendDays.indexOf(dateAdapter.getDay(date)) > -1,\r\n        inMonth: dateAdapter.isSameMonth(date, today),\r\n        hours: []\r\n    };\r\n}\r\n\r\nexport interface GetEventsInPeriodArgs {\r\n    events: CalendarSchedulerEvent[];\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\nfunction getEventsInPeriod(dateAdapter: DateAdapter, args: GetEventsInPeriodArgs): CalendarSchedulerEvent[] {\r\n    const events: CalendarSchedulerEvent[] = args.events, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n    return events.filter((event) => isEventInPeriod(dateAdapter, { event: event, periodStart: periodStart, periodEnd: periodEnd }));\r\n}\r\n\r\ninterface IsEventInPeriodArgs {\r\n    event: CalendarSchedulerEvent;\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\n\r\nfunction isEventInPeriod(dateAdapter: DateAdapter, args: IsEventInPeriodArgs): boolean {\r\n    const { isSameSecond } = dateAdapter;\r\n    const event: CalendarSchedulerEvent = args.event, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n    const eventStart: Date = event.start;\r\n    const eventEnd: Date = event.end || event.start;\r\n\r\n    if (eventStart > periodStart && eventStart < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventStart < periodStart && eventEnd > periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nfunction getOverLappingDayViewEvents(events: SchedulerViewEvent[], top: number, bottom: number): SchedulerViewEvent[] {\r\n    return events.filter((previousEvent: SchedulerViewEvent) => {\r\n        const previousEventTop: number = previousEvent.top;\r\n        const previousEventBottom: number = previousEvent.top + previousEvent.height;\r\n\r\n        if (top < previousEventBottom && previousEventBottom < bottom) {\r\n            return true;\r\n        } else if (previousEventTop <= top && bottom <= previousEventBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n}\r\n","import {\r\n    SchedulerViewPeriod,\r\n    SchedulerViewEvent,\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment\r\n} from '../scheduler/models';\r\nimport {\r\n    DayViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    CalendarView,\r\n    DateAdapter\r\n} from 'angular-calendar';\r\nimport { MINUTES_IN_HOUR } from '../scheduler/utils/calendar-scheduler-utils';\r\n\r\nexport function addPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.addDays,\r\n        week: dateAdapter.addWeeks,\r\n        month: dateAdapter.addMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function subPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.subDays,\r\n        week: dateAdapter.subWeeks,\r\n        month: dateAdapter.subMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function startOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.startOfDay,\r\n        week: dateAdapter.startOfWeek,\r\n        month: dateAdapter.startOfMonth\r\n    }[period](date);\r\n}\r\n\r\nexport function endOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.endOfDay,\r\n        week: dateAdapter.endOfWeek,\r\n        month: dateAdapter.endOfMonth\r\n    }[period](date);\r\n}\r\n\r\n\r\nexport const trackByDayOrEvent = (index: number, event: SchedulerViewEvent ) =>\r\n    (event.event.id ? event.event.id : event.event);\r\n\r\nexport const trackByHourColumn = (index: number, day: SchedulerViewDay) =>\r\n    day.hours[0] ? day.hours[0].segments[0].date.toISOString() : day;\r\n\r\nexport const trackByHour = (index: number, hour: DayViewHour | SchedulerViewHour) =>\r\n    hour.segments[0].date.toISOString();\r\n\r\nexport const trackByHourSegment = (index: number, segment: SchedulerViewHourSegment) =>\r\n    segment.date.toISOString();\r\n\r\n\r\nexport function getMinimumEventHeightInMinutes(hourSegments: number, hourSegmentHeight: number) {\r\n    return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * hourSegmentHeight;\r\n}\r\n\r\nexport function getDefaultEventEnd(dateAdapter: DateAdapter, event: CalendarSchedulerEvent, minimumMinutes: number): Date {\r\n    return event.end ? event.end : dateAdapter.addMinutes(event.start, minimumMinutes);\r\n}\r\n\r\nexport function roundToNearest(amount: number, precision: number): number {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\n\r\nexport function getMinutesMoved(movedY: number, hourSegments: number, hourSegmentHeight: number, eventSnapSize: number): number {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\n\r\nexport function isDraggedWithinPeriod(newStart: Date, newEnd: Date, period: SchedulerViewPeriod): boolean {\r\n    const end = newEnd || newStart;\r\n    return (\r\n        (period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end)\r\n    );\r\n}\r\n\r\nexport function shouldFireDroppedEvent(dropEvent: { dropData?: { event?: CalendarSchedulerEvent; calendarId?: symbol } }, date: Date, calendarId: symbol): boolean {\r\n    return (\r\n        dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        dropEvent.dropData.calendarId !== calendarId\r\n    );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    getSchedulerViewHourGrid,\r\n    GetSchedulerViewHourGridArgs,\r\n    getSchedulerViewDays,\r\n    GetSchedulerViewDaysArgs,\r\n    getSchedulerView,\r\n    GetSchedulerViewArgs\r\n} from './calendar-scheduler-utils';\r\nimport { DayViewHour } from 'calendar-utils';\r\nimport { SchedulerView, SchedulerViewDay } from '../models';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n@Injectable()\r\nexport class CalendarSchedulerUtils {\r\n    constructor(private dateAdapter: DateAdapter) { }\r\n\r\n    getSchedulerViewHourGrid(args: GetSchedulerViewHourGridArgs): DayViewHour[] {\r\n        return getSchedulerViewHourGrid(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerViewDays(args: GetSchedulerViewDaysArgs): SchedulerViewDay[] {\r\n        return getSchedulerViewDays(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerView(args: GetSchedulerViewArgs): SchedulerView {\r\n        return getSchedulerView(this.dateAdapter, args);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ChangeDetectorRef,\r\n    OnChanges,\r\n    OnInit,\r\n    OnDestroy,\r\n    LOCALE_ID,\r\n    Inject,\r\n    TemplateRef,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    DayViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    isBefore\r\n} from 'date-fns';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport { CalendarDragHelper } from 'angular-calendar/esm2015/modules/common/calendar-drag-helper.provider';\r\nimport { CalendarResizeHelper } from 'angular-calendar/esm2015/modules/common/calendar-resize-helper.provider';\r\nimport { SchedulerConfig } from './scheduler-config';\r\nimport { CalendarEventTimesChangedEventType, DateAdapter } from 'angular-calendar';\r\nimport { DragMoveEvent, DragEndEvent, DropEvent } from 'angular-draggable-droppable';\r\n\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewDay,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment,\r\n    SchedulerEventTimesChangedEvent,\r\n    SchedulerViewEvent,\r\n    SchedulerView\r\n} from './models';\r\nimport {\r\n    shouldFireDroppedEvent,\r\n    isDraggedWithinPeriod,\r\n    roundToNearest,\r\n    getMinutesMoved,\r\n    trackByHourColumn,\r\n    trackByDayOrEvent,\r\n    trackByHour,\r\n    trackByHourSegment,\r\n    getMinimumEventHeightInMinutes,\r\n    getDefaultEventEnd\r\n} from '../common/utils';\r\nimport {\r\n    DEFAULT_HOUR_SEGMENTS,\r\n    DEFAULT_HOUR_SEGMENT_HEIGHT_PX,\r\n    DEFAULT_EVENT_WIDTH_PERCENT,\r\n    MINUTES_IN_HOUR\r\n} from './utils/calendar-scheduler-utils';\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\n/**\r\n *  [ngClass]=\"getPositioningClasses(event)\"\r\n *\r\n *  [style.top.px]=\"event.top\"\r\n *  [style.height.px]=\"event.height\"\r\n *  [style.left.%]=\"event.left\"\r\n *  [style.width.%]=\"event.width\"\r\n *\r\n *  DRAG & DROP & RESIZE -> https://github.com/mattlewis92/angular-calendar/blob/master/projects/angular-calendar/src/modules/week/calendar-week-view.component.ts\r\n *  FLEXBOX -> https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\n */\r\n@Component({\r\n    selector: 'calendar-scheduler-view',\r\n    template: `\r\n        <div class=\"cal-scheduler-view\">\r\n            <calendar-scheduler-header\r\n                [days]=\"days\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"headerTemplate\"\r\n                (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\">\r\n            </calendar-scheduler-header>\r\n\r\n            <div class=\"cal-scheduler\" #calendarContainer>\r\n                <div class=\"cal-scheduler-hour-rows aside\">\r\n                    <div class=\"cal-scheduler-hour align-center horizontal\" *ngFor=\"let hour of hours; trackBy:trackByHour\">\r\n                      <div class=\"cal-scheduler-time\">\r\n                        <div class=\"cal-scheduler-time-segment\" *ngFor=\"let segment of hour.segments\"\r\n                            [style.height.px]=\"hourSegmentHeight\">\r\n                            {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"cal-scheduler-cols aside\" #dayColumns\r\n                    [class.cal-resize-active]=\"resizes.size > 0\"\r\n                    mwlDroppable\r\n                    (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\r\n                    (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\r\n                    <div class=\"cal-scheduler-col\"\r\n                        *ngFor=\"let day of view.days; trackBy:trackByHourColumn\"\r\n                        [ngClass]=\"day?.cssClass\"\r\n                        [style.backgroundColor]=\"day.backgroundColor\">\r\n                        <div #eventContainer\r\n                            class=\"cal-scheduler-event-container\"\r\n                            *ngFor=\"let event of day.events; trackBy:trackByDayOrEvent\"\r\n                            [ngClass]=\"event.event?.cssClass\"\r\n                            [hidden]=\"event.height === 0 && event.width === 0\"\r\n                            [style.top.px]=\"event.top\"\r\n                            [style.height.px]=\"event.height\"\r\n                            [style.left.%]=\"event.left\"\r\n                            [style.width.%]=\"event.width\"\r\n\r\n                            mwlResizable\r\n                            [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth, top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\r\n                            [validateResize]=\"validateResize\"\r\n                            [allowNegativeResizes]=\"true\"\r\n                            (resizeStart)=\"resizeStarted(dayColumns, event, $event)\"\r\n                            (resizing)=\"resizing(event, $event)\"\r\n                            (resizeEnd)=\"resizeEnded(event)\"\r\n\r\n                            mwlDraggable\r\n                            dragActiveClass=\"cal-drag-active\"\r\n                            [dropData]=\"{event: event.event, calendarId: calendarId}\"\r\n                            [dragAxis]=\"{\r\n                                x: event.event.draggable && resizes.size === 0,\r\n                                y: event.event.draggable && resizes.size === 0\r\n                            }\"\r\n                            [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight} : {}\"\r\n                            [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                            [validateDrag]=\"validateDrag\"\r\n                            (dragPointerDown)=\"dragStarted(dayColumns, eventContainer, event)\"\r\n                            (dragging)=\"dragMove(event, $event)\"\r\n                            (dragEnd)=\"dragEnded(event, $event, dayColumnWidth, true)\">\r\n\r\n                            <div *ngIf=\"event.event?.resizable?.beforeStart && !event.startsBeforeDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    left: true,\r\n                                    top: true\r\n                                }\">\r\n                            </div>\r\n                            <calendar-scheduler-event\r\n                                [day]=\"day\"\r\n                                [event]=\"event\"\r\n                                [showContent]=\"showEventContent && event.height >= 75\"\r\n                                [showActions]=\"showEventActions\"\r\n                                [showStatus]=\"showEventStatus\"\r\n                                [customTemplate]=\"eventTemplate\"\r\n                                [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                                (eventClicked)=\"eventClicked.emit($event)\">\r\n                            </calendar-scheduler-event>\r\n                            <div *ngIf=\"event.event?.resizable?.afterEnd && !event.endsAfterDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    right: true,\r\n                                    bottom: true\r\n                                }\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"cal-scheduler-hour\"\r\n                            *ngFor=\"let hour of day.hours; let i = index; trackBy:trackByHour\"\r\n                            [class.cal-even]=\"i % 2 === 0\"\r\n                            [class.cal-odd]=\"i % 2 === 1\"\r\n                            [ngClass]=\"hour.cssClass\"\r\n                            [style.backgroundColor]=\"hour.backgroundColor\"\r\n                            (mwlClick)=\"hourClicked.emit({hour: hour})\"\r\n                            [class.cal-past]=\"day.isPast\"\r\n                            [class.cal-today]=\"day.isToday\"\r\n                            [class.cal-future]=\"day.isFuture\"\r\n                            [class.cal-weekend]=\"day.isWeekend\"\r\n                            [class.cal-in-month]=\"day.inMonth\"\r\n                            [class.cal-out-month]=\"!day.inMonth\">\r\n                            <div class=\"cal-scheduler-hour-segments\">\r\n                                <calendar-scheduler-hour-segment\r\n                                    *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\r\n                                    [day]=\"day\"\r\n                                    [segment]=\"segment\"\r\n                                    [locale]=\"locale\"\r\n                                    [customTemplate]=\"cellTemplate\"\r\n                                    [hourSegmentHeight]=\"hourSegmentHeight\"\r\n                                    [showHour]=\"showSegmentHour\"\r\n                                    (segmentClicked)=\"segmentClicked.emit($event)\"\r\n                                    mwlDroppable\r\n                                    [dragOverClass]=\"!dragActive || !snapDraggedEvents ? 'cal-drag-over' : 'null'\"\r\n                                    dragActiveClass=\"cal-drag-active\"\r\n                                    (drop)=\"eventDropped($event, segment.date)\">\r\n                                </calendar-scheduler-hour-segment>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./calendar-scheduler-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarSchedulerViewComponent implements OnChanges, OnInit, OnDestroy {\r\n    /**\r\n     * The current view date\r\n     */\r\n    @Input() viewDate: Date;\r\n\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    @Input() events: CalendarSchedulerEvent[] = [];\r\n\r\n    /**\r\n     * The number of segments in an hour. Must be one of 1, 2, 4, 6\r\n     */\r\n    @Input() hourSegments: 1 | 2 | 4 | 6 = DEFAULT_HOUR_SEGMENTS;\r\n\r\n    /**\r\n    * The height in pixels of each hour segment\r\n    */\r\n    @Input() hourSegmentHeight: number = DEFAULT_HOUR_SEGMENT_HEIGHT_PX;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    @Input() excludeDays: number[] = [];\r\n\r\n    /**\r\n     * Specify if the first day of current scheduler view has to be today or the first day of the week\r\n     */\r\n    @Input() startsWithToday: boolean = false;\r\n\r\n    /**\r\n     * Specify if content must be shown or not\r\n     */\r\n    @Input() showEventContent: boolean = true;\r\n\r\n    /**\r\n     * Specify if actions must be shown or not\r\n     */\r\n    @Input() showEventActions: boolean = true;\r\n\r\n    /**\r\n     * Specify if status must be shown or not\r\n     */\r\n    @Input() showEventStatus: boolean = true;\r\n\r\n    /**\r\n     * Specify if hour must be shown on segment or not\r\n     */\r\n    @Input() showSegmentHour: boolean = false;\r\n\r\n    /**\r\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar (day, hour or segment) cell.\r\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n     */\r\n    @Input() dayModifier: Function;\r\n    @Input() hourModifier: Function;\r\n    @Input() segmentModifier: Function;\r\n    @Input() eventModifier: Function;\r\n\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    @Input() refresh: Subject<any>;\r\n\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    @Input() locale: string;\r\n\r\n    /**\r\n     * The grid size to snap resizing and dragging of events to\r\n     */\r\n    @Input() eventSnapSize: number = this.hourSegmentHeight;\r\n\r\n    /**\r\n    * Whether to snap events to a grid when dragging\r\n    */\r\n    @Input() snapDraggedEvents: boolean = true;\r\n\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    @Input() weekStartsOn: number;\r\n\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    @Input() headerTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use to replace the day cell\r\n     */\r\n    @Input() cellTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for week view events\r\n     */\r\n    @Input() eventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for event titles\r\n     */\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for all day events\r\n     */\r\n    @Input() allDayEventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\r\n     */\r\n    @Input() weekendDays: number[];\r\n\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayStartHour: number = 0;\r\n\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    @Input() dayStartMinute: number = 0;\r\n\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayEndHour: number = 23;\r\n\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    @Input() dayEndMinute: number = 59;\r\n\r\n    /**\r\n     * The width in pixels of each event on the view\r\n     */\r\n    @Input() eventWidthPercent: number = DEFAULT_EVENT_WIDTH_PERCENT;\r\n\r\n    /**\r\n     * Called when a header week day is clicked\r\n     */\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * Called when the hour is clicked\r\n     */\r\n    @Output() hourClicked: EventEmitter<{ hour: SchedulerViewHour }> = new EventEmitter<{ hour: SchedulerViewHour }>();\r\n\r\n    /**\r\n     * Called when the segment is clicked\r\n     */\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    /**\r\n     * Called when the event is clicked\r\n     */\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    /**\r\n     * Called when an event is resized or dragged and dropped\r\n     */\r\n    @Output() eventTimesChanged: EventEmitter<SchedulerEventTimesChangedEvent> = new EventEmitter<SchedulerEventTimesChangedEvent>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    view: SchedulerView;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    days: SchedulerViewDay[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    hours: DayViewHour[] = [];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    // resizes: Map<CalendarSchedulerEvent, SchedulerResizeEvent> = new Map();\r\n    resizes: Map<CalendarSchedulerEvent, ResizeEvent> = new Map();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDragEnter: number = 0;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragActive: boolean = false;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateResize: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateDrag: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dayColumnWidth: number;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    calendarId: symbol = Symbol('angular calendar scheduler view id');\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourColumn = trackByHourColumn;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByDayOrEvent = trackByDayOrEvent;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHour = trackByHour;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourSegment = trackByHourSegment;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string, private config: SchedulerConfig,\r\n        private utils: CalendarSchedulerUtils, private dateAdapter: DateAdapter) {\r\n        this.locale = this.config.locale || locale;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\r\n            this.refreshHeader();\r\n        }\r\n\r\n        if (changes.viewDate ||\r\n            changes.events ||\r\n            changes.dayStartHour ||\r\n            changes.dayEndHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndMinute ||\r\n            changes.excludeDays ||\r\n            changes.eventWidth\r\n        ) {\r\n            this.refreshHourGrid();\r\n            this.refreshBody();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getPositioningClasses(day: SchedulerViewDay, event: CalendarSchedulerEvent): string {\r\n        const classes: string[] = [\r\n            this.getDayClass(event.start),\r\n            this.getTimeClass(day.date, event),\r\n            this.getLengthClass(day.date, event)\r\n        ];\r\n        return classes.join(' ');\r\n    }\r\n\r\n    private getDayClass(date: Date): string {\r\n        return '';\r\n    }\r\n\r\n    private getTimeClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            let hours: number = event.start.getHours();\r\n            if (this.dayStartHour > 0) { hours = event.start.getHours() - this.dayStartHour; }\r\n            const hoursString: string = hours < 10 ? `0${hours}` : `${hours}`;\r\n            const minutesString: string = event.start.getMinutes() < 10 ? `0${event.start.getMinutes()}` : `${event.start.getMinutes()}`;\r\n            return `time${hoursString}${minutesString}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            return `time0000`;\r\n        }\r\n    }\r\n\r\n    private getLengthClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            const durationInMinutes: number = this.dateAdapter.differenceInMinutes(event.end, event.start);\r\n            const leftToEndOfDay: number = this.dateAdapter.differenceInMinutes(this.dateAdapter.setMinutes(this.dateAdapter.setHours(event.start, this.dayEndHour + 1), 0), event.start);\r\n            return leftToEndOfDay > durationInMinutes ? `length${durationInMinutes}` : `length${leftToEndOfDay}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            let leftDurationInMinutes: number = 0;\r\n            if (this.dateAdapter.isSameDay(date, event.end)) {\r\n                leftDurationInMinutes = this.dateAdapter.differenceInMinutes(event.end, this.dateAdapter.startOfDay(date));\r\n                if (this.dayStartHour > 0) { leftDurationInMinutes = (event.end.getHours() - this.dayStartHour) * MINUTES_IN_HOUR; }\r\n            } else {\r\n                leftDurationInMinutes = ((this.dayEndHour + 1) - this.dayStartHour) * MINUTES_IN_HOUR;\r\n            }\r\n            return `length${leftDurationInMinutes}`;\r\n        }\r\n    }\r\n\r\n\r\n    private refreshHourGrid(): void {\r\n        this.hours = this.utils.getSchedulerViewHourGrid({\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            }\r\n        });\r\n    }\r\n\r\n    private refreshHeader(): void {\r\n        this.days = this.utils.getSchedulerViewDays({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays\r\n        });\r\n    }\r\n\r\n    private refreshBody(events?: CalendarSchedulerEvent[]): void {\r\n        this.view = this.getSchedulerView(events || this.events);\r\n\r\n        this.view.days.forEach((day: SchedulerViewDay) => {\r\n            day.events.forEach((event: SchedulerViewEvent) => {\r\n                this.scaleOverlappingEvents(event.event.start, event.event.end, day.events);\r\n            });\r\n        });\r\n\r\n        if (this.dayModifier) {\r\n            this.days.forEach(day => this.dayModifier(day));\r\n        }\r\n\r\n        if (this.dayModifier || this.hourModifier || this.segmentModifier) {\r\n            this.view.days.forEach(day => {\r\n                if (this.dayModifier) {\r\n                    this.dayModifier(day);\r\n                }\r\n                day.hours.forEach((hour: SchedulerViewHour) => {\r\n                    if (this.hourModifier) {\r\n                        this.hourModifier(hour);\r\n                    }\r\n                    hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                        if (this.segmentModifier) {\r\n                            this.segmentModifier(segment);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.eventModifier) {\r\n            this.events.forEach(event => this.eventModifier(event));\r\n        }\r\n    }\r\n\r\n    private refreshAll(): void {\r\n        this.refreshHeader();\r\n        this.refreshHourGrid();\r\n        this.refreshBody();\r\n    }\r\n\r\n\r\n    private getSchedulerView(events: CalendarSchedulerEvent[]): SchedulerView {\r\n        return this.utils.getSchedulerView({\r\n            events: events,\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            },\r\n            excluded: this.excludeDays,\r\n            eventWidth: this.eventWidthPercent,\r\n            hourSegmentHeight: this.hourSegmentHeight\r\n        });\r\n    }\r\n\r\n    private scaleOverlappingEvents(startTime: Date, endTime: Date, events: SchedulerViewEvent[]): void {\r\n        let newStartTime: Date = startTime;\r\n        let newEndTime: Date = endTime;\r\n        const overlappingEvents: SchedulerViewEvent[] = [];\r\n        let maxLeft = 0;\r\n        events.forEach((event: SchedulerViewEvent) => {\r\n            if (event.isProcessed) {\r\n                return;\r\n            }\r\n            if (event.event.start < startTime && event.event.end > startTime) {\r\n                newStartTime = event.event.start;\r\n            } else if (event.event.end > endTime && event.event.start < endTime) {\r\n                newEndTime = event.event.end;\r\n            } else if (event.event.end <= endTime && event.event.start >= startTime) {\r\n                // Nothing, but remove condition and add equals to above two for overlapping effect\r\n            } else {\r\n                return;\r\n            }\r\n            if (event.left > maxLeft) {\r\n                maxLeft = event.left;\r\n            }\r\n            overlappingEvents.push(event);\r\n        });\r\n        if (startTime === newStartTime && endTime === newEndTime) {\r\n            const divisorFactor = Math.floor(maxLeft / this.eventWidthPercent) + 1;\r\n            overlappingEvents.forEach((event: SchedulerViewEvent) => {\r\n                event.isProcessed = true;\r\n                event.left /= divisorFactor;\r\n                event.width /= divisorFactor;\r\n            });\r\n        } else {\r\n            this.scaleOverlappingEvents(newStartTime, newEndTime, events);\r\n        }\r\n    }\r\n\r\n\r\n    //#region RESIZE\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeStarted(eventsContainer: HTMLElement, event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n\r\n        const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(eventsContainer);\r\n        this.validateResize = ({ rectangle }) => resizeHelper.validateResize({ rectangle });\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizing(event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        const adjustedEvents = new Map<CalendarSchedulerEvent, CalendarSchedulerEvent>();\r\n\r\n        const tempEvents = [...this.events];\r\n\r\n        this.resizes.forEach((lastResizeEvent, ev) => {\r\n            const newEventDates = this.getResizedEventDates(\r\n                ev,\r\n                lastResizeEvent\r\n            );\r\n            const adjustedEvent = { ...ev, ...newEventDates };\r\n            adjustedEvents.set(adjustedEvent, ev);\r\n            const eventIndex = tempEvents.indexOf(ev);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents);\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeEnded(event: SchedulerViewEvent): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        const lastResizeEvent = this.resizes.get(event.event);\r\n        this.resizes.delete(event.event);\r\n        const newEventDates = this.getResizedEventDates(\r\n            event.event,\r\n            lastResizeEvent\r\n        );\r\n        this.eventTimesChanged.emit(\r\n            <SchedulerEventTimesChangedEvent>{\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: event.event,\r\n                type: CalendarEventTimesChangedEventType.Resize\r\n            });\r\n    }\r\n\r\n    private getResizedEventDates(event: CalendarSchedulerEvent, resizeEvent: ResizeEvent): { start: Date, end: Date} {\r\n        const minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);\r\n        const newEventDates = {\r\n            start: event.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, event, minimumEventHeight)\r\n        };\r\n        const { end, ...eventWithoutEnd } = event;\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)\r\n        };\r\n\r\n        if (resizeEvent.edges.left) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.left / this.dayColumnWidth\r\n            );\r\n            const newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.right) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.right / this.dayColumnWidth\r\n            );\r\n            const newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n\r\n        if (resizeEvent.edges.top) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.top as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.bottom) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.bottom as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region DRAG & DROP\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent: DropEvent<{ event?: CalendarSchedulerEvent; calendarId?: symbol }>, date: Date): void {\r\n        if (shouldFireDroppedEvent(dropEvent, date, this.calendarId)) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    type: CalendarEventTimesChangedEventType.Drop,\r\n                    event: dropEvent.dropData.event,\r\n                    newStart: date,\r\n                    newEnd: null\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainer: HTMLElement, eventContainer: HTMLElement, event?: SchedulerViewEvent): void {\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n        const dragHelper: CalendarDragHelper = new CalendarDragHelper(\r\n            eventsContainer,\r\n            eventContainer\r\n        );\r\n        this.validateDrag = ({ x, y }) =>\r\n            this.resizes.size === 0 && dragHelper.validateDrag({ x, y, snapDraggedEvents: this.snapDraggedEvents });\r\n            this.dragActive = true;\r\n            this.eventDragEnter = 0;\r\n            if (!this.snapDraggedEvents && event) {\r\n                this.view.days.forEach((day: SchedulerViewDay) => {\r\n                const linkedEvent = day.events.find(ev => ev.event === event.event && ev !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n          }\r\n          this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(event: SchedulerViewEvent, dragEvent: DragMoveEvent) {\r\n        if (this.snapDraggedEvents) {\r\n            const newEventTimes = this.getDragMovedEventTimes(\r\n                event,\r\n                dragEvent,\r\n                this.dayColumnWidth,\r\n                true\r\n            );\r\n            const originalEvent = event.event;\r\n            const adjustedEvent = { ...originalEvent, ...newEventTimes };\r\n            const tempEvents = this.events.map(ev => {\r\n                if (ev === originalEvent) {\r\n                    return adjustedEvent;\r\n                }\r\n                return ev;\r\n            });\r\n\r\n            this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]));\r\n        }\r\n    }\r\n\r\n    dragEnded(event: SchedulerViewEvent, dragEndEvent: DragEndEvent, dayWidth: number, useY = false): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        this.dragActive = false;\r\n        const { start, end } = this.getDragMovedEventTimes(event, dragEndEvent, dayWidth, useY);\r\n        if (this.eventDragEnter > 0 && isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    newStart: start,\r\n                    newEnd: end,\r\n                    event: event.event,\r\n                    type: CalendarEventTimesChangedEventType.Drag\r\n                });\r\n        }\r\n    }\r\n\r\n    private getDragMovedEventTimes(event: SchedulerViewEvent, dragEndEvent: DragEndEvent | DragMoveEvent, dayWidth: number, useY: boolean): { start: Date, end: Date} {\r\n        const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\r\n        const minutesMoved = useY ?\r\n            getMinutesMoved(\r\n                dragEndEvent.y,\r\n                this.hourSegments,\r\n                this.hourSegmentHeight,\r\n                this.eventSnapSize)\r\n            : 0;\r\n\r\n        const start = this.dateAdapter.addMinutes(\r\n            this.dateAdapter.addDays(event.event.start, daysDragged),\r\n            minutesMoved\r\n        );\r\n        let end: Date;\r\n        if (event.event.end) {\r\n            end = this.dateAdapter.addMinutes(\r\n                this.dateAdapter.addDays(event.event.end, daysDragged),\r\n                minutesMoved\r\n            );\r\n        }\r\n\r\n        return { start, end };\r\n    }\r\n\r\n    private restoreOriginalEvents(tempEvents: CalendarSchedulerEvent[], adjustedEvents: Map<CalendarSchedulerEvent, CalendarSchedulerEvent>) {\r\n        this.refreshBody(tempEvents);\r\n        const adjustedEventsArray = tempEvents.filter(event => adjustedEvents.has(event));\r\n        this.view.days.forEach(day => {\r\n            adjustedEventsArray.forEach(adjustedEvent => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = day.events.find(ev => ev.event === adjustedEvent);\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                } else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    day.events.push({\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n      }\r\n\r\n    //#endregion\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    SchedulerViewHourSegment,\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-hour-segment',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-hour-segment\"\r\n                [title]=\"title\"\r\n                [ngClass]=\"segment?.cssClass\"\r\n                [class.has-events]=\"segment.events.length > 0\"\r\n                [class.cal-disabled]=\"segment.isDisabled\"\r\n                [style.backgroundColor]=\"segment.backgroundColor\"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                (mwlClick)=\"onSegmentClick($event, segment)\">\r\n                <div class=\"cal-scheduler-time\" *ngIf=\"showHour\">\r\n                    {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                segment: segment,\r\n                locale: locale,\r\n                hourSegmentHeight: hourSegmentHeight,\r\n                showHour: showHour,\r\n                segmentClicked: segmentClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHourSegmentComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() segment: SchedulerViewHourSegment;\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() hourSegmentHeight: number = 58;\r\n\r\n    @Input() showHour: boolean = false;\r\n\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    ngOnInit(): void {\r\n        this.title = this.title || moment(this.segment.date).format('dddd L, LT');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseEnter(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseLeave(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onSegmentClick(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        if (segment.events.length === 0) {\r\n            this.segmentClicked.emit({ segment: segment });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SchedulerViewDay } from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-header',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-headers\">\r\n                <div class=\"cal-header aside cal-header-clock align-center\">\r\n                    <i class=\"material-icons md-32\" style=\"margin:auto;\">schedule</i>\r\n                </div>\r\n\r\n                <div class=\"cal-header-cols aside\">\r\n                    <div\r\n                        class=\"cal-header\"\r\n                        *ngFor=\"let day of days\"\r\n                        [class.cal-past]=\"day.isPast\"\r\n                        [class.cal-today]=\"day.isToday\"\r\n                        [class.cal-future]=\"day.isFuture\"\r\n                        [class.cal-weekend]=\"day.isWeekend\"\r\n                        (mwlClick)=\"onDayHeaderClick($event, day)\">\r\n                        <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\r\n                        <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                days: days,\r\n                locale: locale,\r\n                dayHeaderClicked: dayHeaderClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHeaderComponent {\r\n\r\n    @Input() days: SchedulerViewDay[];\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onDayHeaderClick(mouseEvent: MouseEvent, day: SchedulerViewDay): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        this.dayHeaderClicked.emit({ day: day });\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef, OnInit } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-event\"\r\n                [title]=\"title\"\r\n                [class.cal-disabled]=\"event.event.isDisabled\"\r\n                [class.cal-not-clickable]=\"!event.event.isClickable\"\r\n                [class.cal-draggable]=\"event.event.draggable\"\r\n                [class.cal-starts-before-day]=\"event.startsBeforeDay\"\r\n                [class.cal-ends-after-day]=\"event.endsAfterDay\"\r\n                [style.backgroundColor]=\"event.event.color?.secondary\"\r\n                [style.borderColor]=\"event.event.color?.primary\"\r\n                (mwlClick)=\"onEventClick($event, event.event)\"\r\n                (mouseenter)=\"onMouseEnter()\"\r\n                (mouseleave)=\"onMouseLeave()\">\r\n                <calendar-scheduler-event-title\r\n                    view=\"week\"\r\n                    [event]=\"event.event\"\r\n                    [showStatus]=\"showStatus\"\r\n                    [showContent]=\"showContent\"\r\n                    [showActions]=\"showActions\"\r\n                    [customTemplate]=\"eventTitleTemplate\">\r\n                </calendar-scheduler-event-title>\r\n                <calendar-scheduler-event-content\r\n                    *ngIf=\"showContent\"\r\n                    [event]=\"event.event\">\r\n                </calendar-scheduler-event-content>\r\n                <calendar-scheduler-event-actions\r\n                    *ngIf=\"showActions && showContent && (event.event.isClickable || event.event.isDisabled)\"\r\n                    [event]=\"event.event\">\r\n                </calendar-scheduler-event-actions>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                event: event,\r\n                showContent: showContent,\r\n                showActions: showActions,\r\n                showStatus: showStatus,\r\n                eventTitleTemplate: eventTitleTemplate,\r\n                eventClicked: eventClicked\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        '[style.height.%]': '100'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() event: SchedulerViewEvent;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    constructor() {   }\r\n\r\n    public ngOnInit(): void {\r\n        this.title = this.title || `${this.event.event.title}, ${moment(this.event.event.start).format('dddd L, LT')}`;\r\n    }\r\n\r\n    onMouseEnter(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    onMouseLeave(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onEventClick(mouseEvent: MouseEvent, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n        if (event.isClickable) {\r\n            this.eventClicked.emit({ event: event });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-title',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div\r\n                class=\"cal-scheduler-event-title\"\r\n                [innerHTML]=\"event.title | schedulerEventTitle:view:event\">\r\n            </div>\r\n            <calendar-scheduler-event-actions\r\n                *ngIf=\"showActions && !showContent && (event.isClickable || event.isDisabled)\"\r\n                class=\"no-content-actions\"\r\n                [event]=\"event\">\r\n            </calendar-scheduler-event-actions>\r\n            <div *ngIf=\"event.status && showStatus\"\r\n                class=\"cal-scheduler-event-status\"\r\n                [class.ok]=\"event.status === 'ok'\"\r\n                [class.warning]=\"event.status === 'warning'\"\r\n                [class.danger]=\"event.status === 'danger'\">\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                view: view,\r\n                event: event,\r\n                showStatus: showStatus,\r\n                showContent: showContent,\r\n                showActions: showActions\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-title-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventTitleComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() view: string;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-content',\r\n    template: `\r\n        <div *ngIf=\"event.content\"\r\n            class=\"cal-scheduler-event-content\"\r\n            [innerHTML]=\"event.content\">\r\n        </div>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-content-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventContentComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    CalendarSchedulerEventAction\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-actions',\r\n    template: `\r\n        <span *ngIf=\"event.actions\"\r\n            class=\"cal-scheduler-event-actions\">\r\n            <a\r\n                class=\"cal-scheduler-event-action\"\r\n                href=\"javascript:;\"\r\n                *ngFor=\"let action of actions\"\r\n                (mwlClick)=\"onActionClick($event, action, event)\"\r\n                [ngClass]=\"action.cssClass\"\r\n                [innerHtml]=\"action.label\"\r\n                [title]=\"action.title\">\r\n            </a>\r\n        </span>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-actions-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventActionsComponent implements OnInit {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    public actions: CalendarSchedulerEventAction[] = [];\r\n\r\n    public ngOnInit(): void {\r\n        this.actions = this.event.isDisabled ?\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'disabled') :\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'enabled');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onActionClick(mouseEvent: MouseEvent, action: CalendarSchedulerEventAction, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        action.onClick(event);\r\n    }\r\n}\r\n","import { CalendarEventTitleFormatter } from 'angular-calendar';\r\n\r\nexport class SchedulerEventTitleFormatter extends CalendarEventTitleFormatter {\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CalendarSchedulerEvent } from '../models';\r\nimport { SchedulerEventTitleFormatter } from '../formatters/scheduler-event-title-formatter.provider';\r\n\r\n@Pipe({\r\n  name: 'schedulerEventTitle'\r\n})\r\nexport class SchedulerEventTitlePipe implements PipeTransform {\r\n  constructor(private schedulerEventTitle: SchedulerEventTitleFormatter) {}\r\n\r\n  transform(title: string, titleType: string, event: CalendarSchedulerEvent): string {\r\n    return this.schedulerEventTitle[titleType](event);\r\n  }\r\n}\r\n","import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n\r\nexport class SchedulerDateFormatter extends CalendarDateFormatter {\r\n\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    public dayViewHour({ date, locale }: DateFormatterParams): string {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);\r\n    }\r\n\r\n    public weekViewTitle({ date, locale }: DateFormatterParams): string {\r\n        // http://generatedcontent.org/post/59403168016/esintlapi\r\n        const year: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);\r\n        const month: string = new Intl.DateTimeFormat(locale, { month: 'short' }).format(date);\r\n\r\n        // var firstDay: number = date.getDate() - date.getDay() + 1; // First day is the day of the month - the day of the week\r\n        let firstDay: number = date.getDate();\r\n        if (date.getDay() === 0) {\r\n            firstDay += 1;\r\n        }\r\n\r\n        let lastDay: number = firstDay + 6; // last day is the first day + 6\r\n\r\n        let firstDayMonth: string = month;\r\n        let lastDayMonth: string = month;\r\n\r\n        let firstDayYear: string = year;\r\n        let lastDayYear: string = year;\r\n\r\n        if (firstDay < 1) {\r\n            const prevMonthDate: Date = new Date(date.getFullYear(), date.getMonth() - 1);\r\n            firstDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(prevMonthDate);\r\n            const daysInPrevMonth: number = this.daysInMonth(prevMonthDate);\r\n\r\n            let i: number = 0;\r\n            let prevMonthDay: number = daysInPrevMonth;\r\n            for (i = 0; i < Math.abs(firstDay); i++) {\r\n                prevMonthDay--;\r\n            }\r\n            firstDay = prevMonthDay;\r\n\r\n            const prevMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(prevMonthDate);\r\n            if (Number(prevMonthYear) < Number(year)) {\r\n                firstDayYear = prevMonthYear;\r\n            }\r\n        }\r\n\r\n        const daysInMonth: number = this.daysInMonth(date);\r\n        if (lastDay > daysInMonth) {\r\n            const nextMonthDate: Date = new Date(date.getFullYear(), date.getMonth() + 1);\r\n            lastDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(nextMonthDate);\r\n\r\n            let i: number = 0;\r\n            let nextMonthDay: number = 0;\r\n            for (i = 0; i < (lastDay - daysInMonth); i++) {\r\n                nextMonthDay++;\r\n            }\r\n            lastDay = nextMonthDay;\r\n\r\n            const nextMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(nextMonthDate);\r\n            if (Number(nextMonthYear) > Number(year)) {\r\n                lastDayYear = nextMonthYear;\r\n            }\r\n        }\r\n\r\n        return `${firstDay}` + (firstDayMonth !== lastDayMonth ? ' ' + firstDayMonth : '') +\r\n            (firstDayYear !== lastDayYear ? ' ' + firstDayYear : '') +\r\n            ` - ${lastDay} ${lastDayMonth} ${lastDayYear}`;\r\n    }\r\n\r\n    private daysInMonth(anyDateInMonth: Date): number {\r\n        return new Date(anyDateInMonth.getFullYear(), anyDateInMonth.getMonth() + 1, 0).getDate();\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { CalendarSchedulerViewComponent } from './calendar-scheduler-view.component';\r\nimport { CalendarSchedulerHourSegmentComponent } from './calendar-scheduler-hour-segment.component';\r\nimport { CalendarSchedulerHeaderComponent } from './calendar-scheduler-header.component';\r\nimport { CalendarSchedulerEventComponent } from './calendar-scheduler-event.component';\r\nimport { CalendarSchedulerEventTitleComponent } from './calendar-scheduler-event-title.component';\r\nimport { CalendarSchedulerEventContentComponent } from './calendar-scheduler-event-content.component';\r\nimport { CalendarSchedulerEventActionsComponent } from './calendar-scheduler-event-actions.component';\r\n\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\nimport { SchedulerEventTitlePipe } from './pipes/scheduler-event-title.pipe';\r\n\r\nimport { SchedulerDateFormatter } from './formatters/scheduler-date-formatter.provider';\r\nimport { SchedulerEventTitleFormatter } from './formatters/scheduler-event-title-formatter.provider';\r\n\r\nexport * from './calendar-scheduler-view.component';\r\nexport * from './formatters/scheduler-date-formatter.provider';\r\nexport * from './formatters/scheduler-event-title-formatter.provider';\r\nexport * from './pipes/scheduler-event-title.pipe';\r\nexport * from './utils/calendar-scheduler-utils.provider';\r\nexport * from '../common/utils';\r\nexport * from './models';\r\n\r\nimport { SchedulerConfig } from './scheduler-config';\r\n\r\nexport const SCHEDULER_CONFIG = new InjectionToken('SchedulerConfig');\r\n\r\nexport function provideSchedulerConfig(config: SchedulerConfig) {\r\n    return new SchedulerConfig(config);\r\n}\r\n\r\n/**\r\n * The main module of this library. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalenderModule } from 'angular-calendar';\r\n * import { SchedulerModule } from 'angular-calendar-scheduler';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalenderModule.forRoot(),\r\n *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    })\r\n  ],\r\n  declarations: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent,\r\n    SchedulerEventTitlePipe\r\n  ],\r\n  providers: [\r\n    CalendarSchedulerUtils,\r\n    SchedulerEventTitlePipe,\r\n    SchedulerEventTitleFormatter,\r\n    SchedulerDateFormatter\r\n  ],\r\n  exports: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent\r\n  ]\r\n})\r\nexport class SchedulerModule {\r\n  static forRoot(config?: SchedulerConfig): ModuleWithProviders {\r\n    return {\r\n        ngModule: SchedulerModule,\r\n        providers: [\r\n            { provide: SCHEDULER_CONFIG, useValue: config },\r\n            { provide: SchedulerConfig, useFactory: provideSchedulerConfig, deps: [SCHEDULER_CONFIG] }\r\n        ]\r\n    };\r\n}\r\n}\r\n"]}