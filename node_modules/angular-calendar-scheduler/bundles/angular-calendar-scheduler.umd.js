(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('angular-calendar/date-adapters/date-fns'), require('angular-calendar'), require('rxjs'), require('date-fns'), require('angular-calendar/esm2015/modules/common/calendar-drag-helper.provider'), require('angular-calendar/esm2015/modules/common/calendar-resize-helper.provider'), require('moment')) :
    typeof define === 'function' && define.amd ? define('angular-calendar-scheduler', ['exports', '@angular/core', '@angular/common', 'angular-calendar/date-adapters/date-fns', 'angular-calendar', 'rxjs', 'date-fns', 'angular-calendar/esm2015/modules/common/calendar-drag-helper.provider', 'angular-calendar/esm2015/modules/common/calendar-resize-helper.provider', 'moment'], factory) :
    (global = global || self, factory(global['angular-calendar-scheduler'] = {}, global.ng.core, global.ng.common, global.dateFns, global.angularCalendar, global.rxjs, global.dateFns$1, global.calendarDragHelper_provider, global.calendarResizeHelper_provider, global.momentImported));
}(this, function (exports, core, common, dateFns, angularCalendar, rxjs, dateFns$1, calendarDragHelper_provider, calendarResizeHelper_provider, momentImported) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
                t[p[i]] = s[p[i]];
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * Auth configuration.
     */
    var SchedulerConfig = /** @class */ (function () {
        function SchedulerConfig(config) {
            if (config === void 0) { config = {}; }
            this.locale = 'en';
            this.headerDateFormat = 'daysRange';
            function use(source, defaultValue) {
                return config && source !== undefined ? source : defaultValue;
            }
            this.locale = use(config.locale, this.locale);
            this.headerDateFormat = use(config.headerDateFormat, this.headerDateFormat);
        }
        SchedulerConfig = __decorate([
            core.Injectable(),
            __metadata("design:paramtypes", [SchedulerConfig])
        ], SchedulerConfig);
        return SchedulerConfig;
    }());

    var DAYS_OF_WEEK;
    (function (DAYS_OF_WEEK) {
        DAYS_OF_WEEK[DAYS_OF_WEEK["SUNDAY"] = 0] = "SUNDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["MONDAY"] = 1] = "MONDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["TUESDAY"] = 2] = "TUESDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["WEDNESDAY"] = 3] = "WEDNESDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["THURSDAY"] = 4] = "THURSDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["FRIDAY"] = 5] = "FRIDAY";
        DAYS_OF_WEEK[DAYS_OF_WEEK["SATURDAY"] = 6] = "SATURDAY";
    })(DAYS_OF_WEEK || (DAYS_OF_WEEK = {}));
    var DEFAULT_WEEKEND_DAYS = [
        DAYS_OF_WEEK.SUNDAY,
        DAYS_OF_WEEK.SATURDAY
    ];
    var DAYS_IN_WEEK = 7;
    var MINUTES_IN_HOUR = 60;
    var DEFAULT_HOUR_SEGMENT_HEIGHT_PX = 40;
    var DEFAULT_EVENT_WIDTH_PERCENT = 100;
    var DEFAULT_HOUR_SEGMENTS = 2;
    function getSchedulerViewHourGrid(dateAdapter, args) {
        var viewDate = args.viewDate, hourSegments = args.hourSegments, dayStart = args.dayStart, dayEnd = args.dayEnd;
        var hours = [];
        var startOfView = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(viewDate), dayStart.hour), dayStart.minute);
        var endOfView = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);
        var segmentDuration = MINUTES_IN_HOUR / hourSegments;
        var startOfViewDay = dateAdapter.startOfDay(viewDate);
        var range = function (start, end) { return Array.from({ length: ((end + 1) - start) }, function (v, k) { return k + start; }); };
        var hoursInView = range(dayStart.hour, dayEnd.hour);
        hoursInView.forEach(function (hour, i) {
            var segments = [];
            for (var j = 0; j < hourSegments; j++) {
                var date = dateAdapter.addMinutes(dateAdapter.addHours(startOfViewDay, hour), j * segmentDuration);
                if (date >= startOfView && date < endOfView) {
                    segments.push({
                        date: date,
                        isStart: j === 0
                    });
                }
            }
            if (segments.length > 0) {
                hours.push({ segments: segments });
            }
        });
        return hours;
    }
    function getSchedulerView(dateAdapter, args) {
        var events = args.events || [];
        if (!events) {
            events = [];
        }
        var viewDate = args.viewDate;
        var weekStartsOn = args.weekStartsOn;
        var startsWithToday = args.startsWithToday;
        var excluded = args.excluded || [];
        var hourSegments = args.hourSegments || DEFAULT_HOUR_SEGMENTS;
        var hourSegmentHeight = args.hourSegmentHeight || DEFAULT_HOUR_SEGMENT_HEIGHT_PX;
        var eventWidth = args.eventWidth || DEFAULT_EVENT_WIDTH_PERCENT;
        var dayStart = args.dayStart, dayEnd = args.dayEnd;
        var startOfViewWeek = startsWithToday ? dateAdapter.startOfDay(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });
        var endOfViewWeek = startsWithToday ? dateAdapter.addDays(dateAdapter.endOfDay(viewDate), 6) : dateAdapter.endOfWeek(viewDate, { weekStartsOn: weekStartsOn });
        var eventsInWeek = getEventsInPeriod(dateAdapter, {
            events: events,
            periodStart: startOfViewWeek,
            periodEnd: endOfViewWeek
        });
        var days = getSchedulerViewDays(dateAdapter, {
            viewDate: viewDate,
            weekStartsOn: weekStartsOn,
            startsWithToday: startsWithToday,
            excluded: excluded
        });
        days.forEach(function (day) {
            var startOfView = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(day.date), dayStart.hour), dayStart.minute);
            var endOfView = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(day.date)), dayEnd.hour), dayEnd.minute);
            var previousDayEvents = [];
            var eventsInDay = getEventsInPeriod(dateAdapter, {
                events: eventsInWeek,
                periodStart: startOfView,
                periodEnd: endOfView
            });
            day.events = eventsInDay
                .sort(function (eventA, eventB) { return eventA.start.valueOf() - eventB.start.valueOf(); })
                .map(function (ev) {
                var eventStart = ev.start;
                var eventEnd = ev.end || eventStart;
                var startsBeforeDay = eventStart < startOfView;
                var endsAfterDay = dateAdapter.addMinutes(eventEnd, -1) > endOfView;
                var hourHeightModifier = ((hourSegments * hourSegmentHeight) + 1) / MINUTES_IN_HOUR; // +1 for the 1px segment bottom border
                var top = 0;
                if (eventStart > startOfView) {
                    top += dateAdapter.differenceInMinutes(eventStart, startOfView);
                }
                top *= hourHeightModifier;
                var startDate = startsBeforeDay ? startOfView : eventStart;
                var endDate = endsAfterDay ? endOfView : eventEnd;
                var height = dateAdapter.differenceInMinutes(endDate, startDate);
                if (!ev.end) {
                    height = hourSegmentHeight;
                }
                else {
                    height *= hourHeightModifier;
                }
                var bottom = top + height;
                var overlappingPreviousEvents = getOverLappingDayViewEvents(previousDayEvents, top, bottom);
                var left = 0;
                while (overlappingPreviousEvents.some(function (previousEvent) { return previousEvent.left === left; })) {
                    left += eventWidth;
                }
                var event = {
                    event: ev,
                    top: top,
                    height: height,
                    width: eventWidth,
                    left: left,
                    startsBeforeDay: startsBeforeDay,
                    endsAfterDay: endsAfterDay,
                    isProcessed: false
                };
                previousDayEvents.push(event);
                return event;
            });
            day.hours = getSchedulerViewHourGrid(dateAdapter, {
                viewDate: viewDate,
                hourSegments: hourSegments,
                dayStart: {
                    hour: dayStart.hour,
                    minute: dayStart.minute
                },
                dayEnd: {
                    hour: dayEnd.hour,
                    minute: dayEnd.minute
                }
            }).map(function (hour) {
                var date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());
                var startOfHour = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());
                var endOfHour = dateAdapter.addMinutes(dateAdapter.addHours(startOfHour, 1), -1);
                var eventsInHour = getEventsInPeriod(dateAdapter, {
                    events: eventsInDay,
                    periodStart: startOfHour,
                    periodEnd: endOfHour
                });
                var segments = hour.segments.map(function (segment) {
                    segment.date = dateAdapter.setDate(dateAdapter.setMonth(dateAdapter.setYear(segment.date, day.date.getFullYear()), day.date.getMonth()), day.date.getDate());
                    var startOfSegment = segment.date;
                    var endOfSegment = dateAdapter.addMinutes(segment.date, MINUTES_IN_HOUR / hourSegments);
                    var eventsInSegment = getEventsInPeriod(dateAdapter, {
                        events: eventsInHour,
                        periodStart: startOfSegment,
                        periodEnd: endOfSegment
                    });
                    return {
                        segment: segment,
                        date: new Date(segment.date),
                        events: eventsInSegment
                    };
                });
                return {
                    hour: hour,
                    date: date,
                    events: eventsInHour,
                    segments: segments
                };
            });
        });
        return {
            days: days,
            period: {
                events: eventsInWeek,
                start: startOfViewWeek,
                end: endOfViewWeek
            }
        };
    }
    function getSchedulerViewDays(dateAdapter, args) {
        var viewDate = args.viewDate;
        var weekStartsOn = args.weekStartsOn;
        var startsWithToday = args.startsWithToday;
        var excluded = args.excluded || [];
        var weekendDays = args.weekendDays || DEFAULT_WEEKEND_DAYS;
        var start = startsWithToday ? new Date(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });
        var days = [];
        var loop = function (i) {
            var date = dateAdapter.addDays(start, i);
            if (!excluded.some(function (e) { return date.getDay() === e; })) {
                days.push(getSchedulerDay(dateAdapter, { date: date, weekendDays: weekendDays }));
            }
        };
        for (var i = 0; i < DAYS_IN_WEEK; i++) {
            loop(i);
        }
        return days;
    }
    function getSchedulerDay(dateAdapter, args) {
        var date = args.date;
        var today = dateAdapter.startOfDay(new Date());
        return {
            date: date,
            isPast: date < today,
            isToday: dateAdapter.isSameDay(date, today),
            isFuture: date >= dateAdapter.addDays(today, 1),
            isWeekend: args.weekendDays.indexOf(dateAdapter.getDay(date)) > -1,
            inMonth: dateAdapter.isSameMonth(date, today),
            hours: []
        };
    }
    function getEventsInPeriod(dateAdapter, args) {
        var events = args.events, periodStart = args.periodStart, periodEnd = args.periodEnd;
        return events.filter(function (event) { return isEventInPeriod(dateAdapter, { event: event, periodStart: periodStart, periodEnd: periodEnd }); });
    }
    function isEventInPeriod(dateAdapter, args) {
        var isSameSecond = dateAdapter.isSameSecond;
        var event = args.event, periodStart = args.periodStart, periodEnd = args.periodEnd;
        var eventStart = event.start;
        var eventEnd = event.end || event.start;
        if (eventStart > periodStart && eventStart < periodEnd) {
            return true;
        }
        if (eventEnd > periodStart && eventEnd < periodEnd) {
            return true;
        }
        if (eventStart < periodStart && eventEnd > periodEnd) {
            return true;
        }
        if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {
            return true;
        }
        if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {
            return true;
        }
        return false;
    }
    function getOverLappingDayViewEvents(events, top, bottom) {
        return events.filter(function (previousEvent) {
            var previousEventTop = previousEvent.top;
            var previousEventBottom = previousEvent.top + previousEvent.height;
            if (top < previousEventBottom && previousEventBottom < bottom) {
                return true;
            }
            else if (previousEventTop <= top && bottom <= previousEventBottom) {
                return true;
            }
            return false;
        });
    }

    function addPeriod(dateAdapter, period, date, amount) {
        return {
            day: dateAdapter.addDays,
            week: dateAdapter.addWeeks,
            month: dateAdapter.addMonths
        }[period](date, amount);
    }
    function subPeriod(dateAdapter, period, date, amount) {
        return {
            day: dateAdapter.subDays,
            week: dateAdapter.subWeeks,
            month: dateAdapter.subMonths
        }[period](date, amount);
    }
    function startOfPeriod(dateAdapter, period, date) {
        return {
            day: dateAdapter.startOfDay,
            week: dateAdapter.startOfWeek,
            month: dateAdapter.startOfMonth
        }[period](date);
    }
    function endOfPeriod(dateAdapter, period, date) {
        return {
            day: dateAdapter.endOfDay,
            week: dateAdapter.endOfWeek,
            month: dateAdapter.endOfMonth
        }[period](date);
    }
    var trackByDayOrEvent = function (index, event) {
        return (event.event.id ? event.event.id : event.event);
    };
    var trackByHourColumn = function (index, day) {
        return day.hours[0] ? day.hours[0].segments[0].date.toISOString() : day;
    };
    var trackByHour = function (index, hour) {
        return hour.segments[0].date.toISOString();
    };
    var trackByHourSegment = function (index, segment) {
        return segment.date.toISOString();
    };
    function getMinimumEventHeightInMinutes(hourSegments, hourSegmentHeight) {
        return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * hourSegmentHeight;
    }
    function getDefaultEventEnd(dateAdapter, event, minimumMinutes) {
        return event.end ? event.end : dateAdapter.addMinutes(event.start, minimumMinutes);
    }
    function roundToNearest(amount, precision) {
        return Math.round(amount / precision) * precision;
    }
    function getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize) {
        var draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);
        var pixelAmountInMinutes = MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);
        return draggedInPixelsSnapSize * pixelAmountInMinutes;
    }
    function isDraggedWithinPeriod(newStart, newEnd, period) {
        var end = newEnd || newStart;
        return ((period.start <= newStart && newStart <= period.end) ||
            (period.start <= end && end <= period.end));
    }
    function shouldFireDroppedEvent(dropEvent, date, calendarId) {
        return (dropEvent.dropData &&
            dropEvent.dropData.event &&
            dropEvent.dropData.calendarId !== calendarId);
    }

    var CalendarSchedulerUtils = /** @class */ (function () {
        function CalendarSchedulerUtils(dateAdapter) {
            this.dateAdapter = dateAdapter;
        }
        CalendarSchedulerUtils.prototype.getSchedulerViewHourGrid = function (args) {
            return getSchedulerViewHourGrid(this.dateAdapter, args);
        };
        CalendarSchedulerUtils.prototype.getSchedulerViewDays = function (args) {
            return getSchedulerViewDays(this.dateAdapter, args);
        };
        CalendarSchedulerUtils.prototype.getSchedulerView = function (args) {
            return getSchedulerView(this.dateAdapter, args);
        };
        CalendarSchedulerUtils = __decorate([
            core.Injectable(),
            __metadata("design:paramtypes", [angularCalendar.DateAdapter])
        ], CalendarSchedulerUtils);
        return CalendarSchedulerUtils;
    }());

    /**
     *  [ngClass]="getPositioningClasses(event)"
     *
     *  [style.top.px]="event.top"
     *  [style.height.px]="event.height"
     *  [style.left.%]="event.left"
     *  [style.width.%]="event.width"
     *
     *  DRAG & DROP & RESIZE -> https://github.com/mattlewis92/angular-calendar/blob/master/projects/angular-calendar/src/modules/week/calendar-week-view.component.ts
     *  FLEXBOX -> https://css-tricks.com/snippets/css/a-guide-to-flexbox/
     */
    var CalendarSchedulerViewComponent = /** @class */ (function () {
        /**
         * @hidden
         */
        function CalendarSchedulerViewComponent(cdr, locale, config, utils, dateAdapter) {
            this.cdr = cdr;
            this.config = config;
            this.utils = utils;
            this.dateAdapter = dateAdapter;
            /**
             * An array of events to display on view
             */
            this.events = [];
            /**
             * The number of segments in an hour. Must be one of 1, 2, 4, 6
             */
            this.hourSegments = DEFAULT_HOUR_SEGMENTS;
            /**
            * The height in pixels of each hour segment
            */
            this.hourSegmentHeight = DEFAULT_HOUR_SEGMENT_HEIGHT_PX;
            /**
             * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view
             */
            this.excludeDays = [];
            /**
             * Specify if the first day of current scheduler view has to be today or the first day of the week
             */
            this.startsWithToday = false;
            /**
             * Specify if content must be shown or not
             */
            this.showEventContent = true;
            /**
             * Specify if actions must be shown or not
             */
            this.showEventActions = true;
            /**
             * Specify if status must be shown or not
             */
            this.showEventStatus = true;
            /**
             * Specify if hour must be shown on segment or not
             */
            this.showSegmentHour = false;
            /**
             * The grid size to snap resizing and dragging of events to
             */
            this.eventSnapSize = this.hourSegmentHeight;
            /**
            * Whether to snap events to a grid when dragging
            */
            this.snapDraggedEvents = true;
            /**
             * The day start hours in 24 hour time. Must be 0-23
             */
            this.dayStartHour = 0;
            /**
             * The day start minutes. Must be 0-59
             */
            this.dayStartMinute = 0;
            /**
             * The day end hours in 24 hour time. Must be 0-23
             */
            this.dayEndHour = 23;
            /**
             * The day end minutes. Must be 0-59
             */
            this.dayEndMinute = 59;
            /**
             * The width in pixels of each event on the view
             */
            this.eventWidthPercent = DEFAULT_EVENT_WIDTH_PERCENT;
            /**
             * Called when a header week day is clicked
             */
            this.dayHeaderClicked = new core.EventEmitter();
            /**
             * Called when the hour is clicked
             */
            this.hourClicked = new core.EventEmitter();
            /**
             * Called when the segment is clicked
             */
            this.segmentClicked = new core.EventEmitter();
            /**
             * Called when the event is clicked
             */
            this.eventClicked = new core.EventEmitter();
            /**
             * Called when an event is resized or dragged and dropped
             */
            this.eventTimesChanged = new core.EventEmitter();
            /**
             * @hidden
             */
            this.hours = [];
            /**
             * @hidden
             */
            // resizes: Map<CalendarSchedulerEvent, SchedulerResizeEvent> = new Map();
            this.resizes = new Map();
            /**
             * @hidden
             */
            this.eventDragEnter = 0;
            /**
             * @hidden
             */
            this.dragActive = false;
            /**
             * @hidden
             */
            this.calendarId = Symbol('angular calendar scheduler view id');
            /**
             * @hidden
             */
            this.trackByHourColumn = trackByHourColumn;
            /**
             * @hidden
             */
            this.trackByDayOrEvent = trackByDayOrEvent;
            /**
             * @hidden
             */
            this.trackByHour = trackByHour;
            /**
             * @hidden
             */
            this.trackByHourSegment = trackByHourSegment;
            this.locale = this.config.locale || locale;
        }
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.refresh) {
                this.refreshSubscription = this.refresh.subscribe(function () {
                    _this.refreshAll();
                    _this.cdr.markForCheck();
                });
            }
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.ngOnChanges = function (changes) {
            if (changes.viewDate || changes.excludeDays || changes.weekendDays) {
                this.refreshHeader();
            }
            if (changes.viewDate ||
                changes.events ||
                changes.dayStartHour ||
                changes.dayEndHour ||
                changes.dayStartMinute ||
                changes.dayEndMinute ||
                changes.excludeDays ||
                changes.eventWidth) {
                this.refreshHourGrid();
                this.refreshBody();
            }
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.ngOnDestroy = function () {
            if (this.refreshSubscription) {
                this.refreshSubscription.unsubscribe();
            }
        };
        CalendarSchedulerViewComponent.prototype.getPositioningClasses = function (day, event) {
            var classes = [
                this.getDayClass(event.start),
                this.getTimeClass(day.date, event),
                this.getLengthClass(day.date, event)
            ];
            return classes.join(' ');
        };
        CalendarSchedulerViewComponent.prototype.getDayClass = function (date) {
            return '';
        };
        CalendarSchedulerViewComponent.prototype.getTimeClass = function (date, event) {
            if (this.dateAdapter.isSameDay(date, event.start)) {
                var hours = event.start.getHours();
                if (this.dayStartHour > 0) {
                    hours = event.start.getHours() - this.dayStartHour;
                }
                var hoursString = hours < 10 ? "0" + hours : "" + hours;
                var minutesString = event.start.getMinutes() < 10 ? "0" + event.start.getMinutes() : "" + event.start.getMinutes();
                return "time" + hoursString + minutesString;
            }
            else if (dateFns$1.isBefore(event.start, this.dateAdapter.startOfDay(date))) {
                return "time0000";
            }
        };
        CalendarSchedulerViewComponent.prototype.getLengthClass = function (date, event) {
            if (this.dateAdapter.isSameDay(date, event.start)) {
                var durationInMinutes = this.dateAdapter.differenceInMinutes(event.end, event.start);
                var leftToEndOfDay = this.dateAdapter.differenceInMinutes(this.dateAdapter.setMinutes(this.dateAdapter.setHours(event.start, this.dayEndHour + 1), 0), event.start);
                return leftToEndOfDay > durationInMinutes ? "length" + durationInMinutes : "length" + leftToEndOfDay;
            }
            else if (dateFns$1.isBefore(event.start, this.dateAdapter.startOfDay(date))) {
                var leftDurationInMinutes = 0;
                if (this.dateAdapter.isSameDay(date, event.end)) {
                    leftDurationInMinutes = this.dateAdapter.differenceInMinutes(event.end, this.dateAdapter.startOfDay(date));
                    if (this.dayStartHour > 0) {
                        leftDurationInMinutes = (event.end.getHours() - this.dayStartHour) * MINUTES_IN_HOUR;
                    }
                }
                else {
                    leftDurationInMinutes = ((this.dayEndHour + 1) - this.dayStartHour) * MINUTES_IN_HOUR;
                }
                return "length" + leftDurationInMinutes;
            }
        };
        CalendarSchedulerViewComponent.prototype.refreshHourGrid = function () {
            this.hours = this.utils.getSchedulerViewHourGrid({
                viewDate: this.viewDate,
                hourSegments: this.hourSegments,
                dayStart: {
                    hour: this.dayStartHour,
                    minute: this.dayStartMinute
                },
                dayEnd: {
                    hour: this.dayEndHour,
                    minute: this.dayEndMinute
                }
            });
        };
        CalendarSchedulerViewComponent.prototype.refreshHeader = function () {
            this.days = this.utils.getSchedulerViewDays({
                viewDate: this.viewDate,
                weekStartsOn: this.weekStartsOn,
                startsWithToday: this.startsWithToday,
                excluded: this.excludeDays,
                weekendDays: this.weekendDays
            });
        };
        CalendarSchedulerViewComponent.prototype.refreshBody = function (events) {
            var _this = this;
            this.view = this.getSchedulerView(events || this.events);
            this.view.days.forEach(function (day) {
                day.events.forEach(function (event) {
                    _this.scaleOverlappingEvents(event.event.start, event.event.end, day.events);
                });
            });
            if (this.dayModifier) {
                this.days.forEach(function (day) { return _this.dayModifier(day); });
            }
            if (this.dayModifier || this.hourModifier || this.segmentModifier) {
                this.view.days.forEach(function (day) {
                    if (_this.dayModifier) {
                        _this.dayModifier(day);
                    }
                    day.hours.forEach(function (hour) {
                        if (_this.hourModifier) {
                            _this.hourModifier(hour);
                        }
                        hour.segments.forEach(function (segment) {
                            if (_this.segmentModifier) {
                                _this.segmentModifier(segment);
                            }
                        });
                    });
                });
            }
            if (this.eventModifier) {
                this.events.forEach(function (event) { return _this.eventModifier(event); });
            }
        };
        CalendarSchedulerViewComponent.prototype.refreshAll = function () {
            this.refreshHeader();
            this.refreshHourGrid();
            this.refreshBody();
        };
        CalendarSchedulerViewComponent.prototype.getSchedulerView = function (events) {
            return this.utils.getSchedulerView({
                events: events,
                viewDate: this.viewDate,
                hourSegments: this.hourSegments,
                weekStartsOn: this.weekStartsOn,
                startsWithToday: this.startsWithToday,
                dayStart: {
                    hour: this.dayStartHour,
                    minute: this.dayStartMinute
                },
                dayEnd: {
                    hour: this.dayEndHour,
                    minute: this.dayEndMinute
                },
                excluded: this.excludeDays,
                eventWidth: this.eventWidthPercent,
                hourSegmentHeight: this.hourSegmentHeight
            });
        };
        CalendarSchedulerViewComponent.prototype.scaleOverlappingEvents = function (startTime, endTime, events) {
            var newStartTime = startTime;
            var newEndTime = endTime;
            var overlappingEvents = [];
            var maxLeft = 0;
            events.forEach(function (event) {
                if (event.isProcessed) {
                    return;
                }
                if (event.event.start < startTime && event.event.end > startTime) {
                    newStartTime = event.event.start;
                }
                else if (event.event.end > endTime && event.event.start < endTime) {
                    newEndTime = event.event.end;
                }
                else if (event.event.end <= endTime && event.event.start >= startTime) ;
                else {
                    return;
                }
                if (event.left > maxLeft) {
                    maxLeft = event.left;
                }
                overlappingEvents.push(event);
            });
            if (startTime === newStartTime && endTime === newEndTime) {
                var divisorFactor_1 = Math.floor(maxLeft / this.eventWidthPercent) + 1;
                overlappingEvents.forEach(function (event) {
                    event.isProcessed = true;
                    event.left /= divisorFactor_1;
                    event.width /= divisorFactor_1;
                });
            }
            else {
                this.scaleOverlappingEvents(newStartTime, newEndTime, events);
            }
        };
        //#region RESIZE
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.resizeStarted = function (eventsContainer, event, resizeEvent) {
            this.resizes.set(event.event, resizeEvent);
            this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);
            var resizeHelper = new calendarResizeHelper_provider.CalendarResizeHelper(eventsContainer);
            this.validateResize = function (_a) {
                var rectangle = _a.rectangle;
                return resizeHelper.validateResize({ rectangle: rectangle });
            };
            this.cdr.markForCheck();
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.resizing = function (event, resizeEvent) {
            var _this = this;
            this.resizes.set(event.event, resizeEvent);
            var adjustedEvents = new Map();
            var tempEvents = __spread(this.events);
            this.resizes.forEach(function (lastResizeEvent, ev) {
                var newEventDates = _this.getResizedEventDates(ev, lastResizeEvent);
                var adjustedEvent = __assign({}, ev, newEventDates);
                adjustedEvents.set(adjustedEvent, ev);
                var eventIndex = tempEvents.indexOf(ev);
                tempEvents[eventIndex] = adjustedEvent;
            });
            this.restoreOriginalEvents(tempEvents, adjustedEvents);
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.resizeEnded = function (event) {
            this.view = this.getSchedulerView(this.events);
            var lastResizeEvent = this.resizes.get(event.event);
            this.resizes.delete(event.event);
            var newEventDates = this.getResizedEventDates(event.event, lastResizeEvent);
            this.eventTimesChanged.emit({
                newStart: newEventDates.start,
                newEnd: newEventDates.end,
                event: event.event,
                type: angularCalendar.CalendarEventTimesChangedEventType.Resize
            });
        };
        CalendarSchedulerViewComponent.prototype.getResizedEventDates = function (event, resizeEvent) {
            var minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);
            var newEventDates = {
                start: event.start,
                end: getDefaultEventEnd(this.dateAdapter, event, minimumEventHeight)
            };
            var end = event.end, eventWithoutEnd = __rest(event, ["end"]);
            var smallestResizes = {
                start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),
                end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)
            };
            if (resizeEvent.edges.left) {
                var daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth);
                var newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);
                if (newStart < smallestResizes.start) {
                    newEventDates.start = newStart;
                }
                else {
                    newEventDates.start = smallestResizes.start;
                }
            }
            else if (resizeEvent.edges.right) {
                var daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth);
                var newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);
                if (newEnd > smallestResizes.end) {
                    newEventDates.end = newEnd;
                }
                else {
                    newEventDates.end = smallestResizes.end;
                }
            }
            if (resizeEvent.edges.top) {
                var precision = this.eventSnapSize || this.hourSegmentHeight;
                var draggedInPixelsSnapSize = Math.round(resizeEvent.edges.top / precision) * precision;
                var pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);
                var minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;
                var newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);
                if (newStart < smallestResizes.start) {
                    newEventDates.start = newStart;
                }
                else {
                    newEventDates.start = smallestResizes.start;
                }
            }
            else if (resizeEvent.edges.bottom) {
                var precision = this.eventSnapSize || this.hourSegmentHeight;
                var draggedInPixelsSnapSize = Math.round(resizeEvent.edges.bottom / precision) * precision;
                var pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);
                var minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;
                var newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);
                if (newEnd > smallestResizes.end) {
                    newEventDates.end = newEnd;
                }
                else {
                    newEventDates.end = smallestResizes.end;
                }
            }
            return newEventDates;
        };
        //#endregion
        //#region DRAG & DROP
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.eventDropped = function (dropEvent, date) {
            if (shouldFireDroppedEvent(dropEvent, date, this.calendarId)) {
                this.eventTimesChanged.emit({
                    type: angularCalendar.CalendarEventTimesChangedEventType.Drop,
                    event: dropEvent.dropData.event,
                    newStart: date,
                    newEnd: null
                });
            }
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.dragStarted = function (eventsContainer, eventContainer, event) {
            var _this = this;
            this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);
            var dragHelper = new calendarDragHelper_provider.CalendarDragHelper(eventsContainer, eventContainer);
            this.validateDrag = function (_a) {
                var x = _a.x, y = _a.y;
                return _this.resizes.size === 0 && dragHelper.validateDrag({ x: x, y: y, snapDraggedEvents: _this.snapDraggedEvents });
            };
            this.dragActive = true;
            this.eventDragEnter = 0;
            if (!this.snapDraggedEvents && event) {
                this.view.days.forEach(function (day) {
                    var linkedEvent = day.events.find(function (ev) { return ev.event === event.event && ev !== event; });
                    // hide any linked events while dragging
                    if (linkedEvent) {
                        linkedEvent.width = 0;
                        linkedEvent.height = 0;
                    }
                });
            }
            this.cdr.markForCheck();
        };
        /**
         * @hidden
         */
        CalendarSchedulerViewComponent.prototype.dragMove = function (event, dragEvent) {
            if (this.snapDraggedEvents) {
                var newEventTimes = this.getDragMovedEventTimes(event, dragEvent, this.dayColumnWidth, true);
                var originalEvent_1 = event.event;
                var adjustedEvent_1 = __assign({}, originalEvent_1, newEventTimes);
                var tempEvents = this.events.map(function (ev) {
                    if (ev === originalEvent_1) {
                        return adjustedEvent_1;
                    }
                    return ev;
                });
                this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent_1, originalEvent_1]]));
            }
        };
        CalendarSchedulerViewComponent.prototype.dragEnded = function (event, dragEndEvent, dayWidth, useY) {
            if (useY === void 0) { useY = false; }
            this.view = this.getSchedulerView(this.events);
            this.dragActive = false;
            var _a = this.getDragMovedEventTimes(event, dragEndEvent, dayWidth, useY), start = _a.start, end = _a.end;
            if (this.eventDragEnter > 0 && isDraggedWithinPeriod(start, end, this.view.period)) {
                this.eventTimesChanged.emit({
                    newStart: start,
                    newEnd: end,
                    event: event.event,
                    type: angularCalendar.CalendarEventTimesChangedEventType.Drag
                });
            }
        };
        CalendarSchedulerViewComponent.prototype.getDragMovedEventTimes = function (event, dragEndEvent, dayWidth, useY) {
            var daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;
            var minutesMoved = useY ?
                getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize)
                : 0;
            var start = this.dateAdapter.addMinutes(this.dateAdapter.addDays(event.event.start, daysDragged), minutesMoved);
            var end;
            if (event.event.end) {
                end = this.dateAdapter.addMinutes(this.dateAdapter.addDays(event.event.end, daysDragged), minutesMoved);
            }
            return { start: start, end: end };
        };
        CalendarSchedulerViewComponent.prototype.restoreOriginalEvents = function (tempEvents, adjustedEvents) {
            this.refreshBody(tempEvents);
            var adjustedEventsArray = tempEvents.filter(function (event) { return adjustedEvents.has(event); });
            this.view.days.forEach(function (day) {
                adjustedEventsArray.forEach(function (adjustedEvent) {
                    var originalEvent = adjustedEvents.get(adjustedEvent);
                    var existingColumnEvent = day.events.find(function (ev) { return ev.event === adjustedEvent; });
                    if (existingColumnEvent) {
                        // restore the original event so trackBy kicks in and the dom isn't changed
                        existingColumnEvent.event = originalEvent;
                    }
                    else {
                        // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early
                        day.events.push({
                            event: originalEvent,
                            left: 0,
                            top: 0,
                            height: 0,
                            width: 0,
                            startsBeforeDay: false,
                            endsAfterDay: false
                        });
                    }
                });
            });
            adjustedEvents.clear();
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Date)
        ], CalendarSchedulerViewComponent.prototype, "viewDate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Array)
        ], CalendarSchedulerViewComponent.prototype, "events", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "hourSegments", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "hourSegmentHeight", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Array)
        ], CalendarSchedulerViewComponent.prototype, "excludeDays", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "startsWithToday", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "showEventContent", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "showEventActions", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "showEventStatus", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "showSegmentHour", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Function)
        ], CalendarSchedulerViewComponent.prototype, "dayModifier", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Function)
        ], CalendarSchedulerViewComponent.prototype, "hourModifier", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Function)
        ], CalendarSchedulerViewComponent.prototype, "segmentModifier", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Function)
        ], CalendarSchedulerViewComponent.prototype, "eventModifier", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", rxjs.Subject)
        ], CalendarSchedulerViewComponent.prototype, "refresh", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerViewComponent.prototype, "locale", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "eventSnapSize", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerViewComponent.prototype, "snapDraggedEvents", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "weekStartsOn", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerViewComponent.prototype, "headerTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerViewComponent.prototype, "cellTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerViewComponent.prototype, "eventTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerViewComponent.prototype, "eventTitleTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerViewComponent.prototype, "allDayEventTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Array)
        ], CalendarSchedulerViewComponent.prototype, "weekendDays", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "dayStartHour", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "dayStartMinute", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "dayEndHour", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "dayEndMinute", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerViewComponent.prototype, "eventWidthPercent", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerViewComponent.prototype, "dayHeaderClicked", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerViewComponent.prototype, "hourClicked", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerViewComponent.prototype, "segmentClicked", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerViewComponent.prototype, "eventClicked", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerViewComponent.prototype, "eventTimesChanged", void 0);
        CalendarSchedulerViewComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-view',
                template: "\n        <div class=\"cal-scheduler-view\">\n            <calendar-scheduler-header\n                [days]=\"days\"\n                [locale]=\"locale\"\n                [customTemplate]=\"headerTemplate\"\n                (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\">\n            </calendar-scheduler-header>\n\n            <div class=\"cal-scheduler\" #calendarContainer>\n                <div class=\"cal-scheduler-hour-rows aside\">\n                    <div class=\"cal-scheduler-hour align-center horizontal\" *ngFor=\"let hour of hours; trackBy:trackByHour\">\n                      <div class=\"cal-scheduler-time\">\n                        <div class=\"cal-scheduler-time-segment\" *ngFor=\"let segment of hour.segments\"\n                            [style.height.px]=\"hourSegmentHeight\">\n                            {{ segment.date | calendarDate:'dayViewHour':locale }}\n                        </div>\n                      </div>\n                    </div>\n                </div>\n\n                <div class=\"cal-scheduler-cols aside\" #dayColumns\n                    [class.cal-resize-active]=\"resizes.size > 0\"\n                    mwlDroppable\n                    (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n                    (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\n                    <div class=\"cal-scheduler-col\"\n                        *ngFor=\"let day of view.days; trackBy:trackByHourColumn\"\n                        [ngClass]=\"day?.cssClass\"\n                        [style.backgroundColor]=\"day.backgroundColor\">\n                        <div #eventContainer\n                            class=\"cal-scheduler-event-container\"\n                            *ngFor=\"let event of day.events; trackBy:trackByDayOrEvent\"\n                            [ngClass]=\"event.event?.cssClass\"\n                            [hidden]=\"event.height === 0 && event.width === 0\"\n                            [style.top.px]=\"event.top\"\n                            [style.height.px]=\"event.height\"\n                            [style.left.%]=\"event.left\"\n                            [style.width.%]=\"event.width\"\n\n                            mwlResizable\n                            [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth, top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\n                            [validateResize]=\"validateResize\"\n                            [allowNegativeResizes]=\"true\"\n                            (resizeStart)=\"resizeStarted(dayColumns, event, $event)\"\n                            (resizing)=\"resizing(event, $event)\"\n                            (resizeEnd)=\"resizeEnded(event)\"\n\n                            mwlDraggable\n                            dragActiveClass=\"cal-drag-active\"\n                            [dropData]=\"{event: event.event, calendarId: calendarId}\"\n                            [dragAxis]=\"{\n                                x: event.event.draggable && resizes.size === 0,\n                                y: event.event.draggable && resizes.size === 0\n                            }\"\n                            [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight} : {}\"\n                            [ghostDragEnabled]=\"!snapDraggedEvents\"\n                            [validateDrag]=\"validateDrag\"\n                            (dragPointerDown)=\"dragStarted(dayColumns, eventContainer, event)\"\n                            (dragging)=\"dragMove(event, $event)\"\n                            (dragEnd)=\"dragEnded(event, $event, dayColumnWidth, true)\">\n\n                            <div *ngIf=\"event.event?.resizable?.beforeStart && !event.startsBeforeDay\"\n                                class=\"cal-resize-handle cal-resize-handle-before-start\"\n                                mwlResizeHandle\n                                [resizeEdges]=\"{\n                                    left: true,\n                                    top: true\n                                }\">\n                            </div>\n                            <calendar-scheduler-event\n                                [day]=\"day\"\n                                [event]=\"event\"\n                                [showContent]=\"showEventContent && event.height >= 75\"\n                                [showActions]=\"showEventActions\"\n                                [showStatus]=\"showEventStatus\"\n                                [customTemplate]=\"eventTemplate\"\n                                [eventTitleTemplate]=\"eventTitleTemplate\"\n                                (eventClicked)=\"eventClicked.emit($event)\">\n                            </calendar-scheduler-event>\n                            <div *ngIf=\"event.event?.resizable?.afterEnd && !event.endsAfterDay\"\n                                class=\"cal-resize-handle cal-resize-handle-after-end\"\n                                mwlResizeHandle\n                                [resizeEdges]=\"{\n                                    right: true,\n                                    bottom: true\n                                }\">\n                            </div>\n                        </div>\n\n                        <div class=\"cal-scheduler-hour\"\n                            *ngFor=\"let hour of day.hours; let i = index; trackBy:trackByHour\"\n                            [class.cal-even]=\"i % 2 === 0\"\n                            [class.cal-odd]=\"i % 2 === 1\"\n                            [ngClass]=\"hour.cssClass\"\n                            [style.backgroundColor]=\"hour.backgroundColor\"\n                            (mwlClick)=\"hourClicked.emit({hour: hour})\"\n                            [class.cal-past]=\"day.isPast\"\n                            [class.cal-today]=\"day.isToday\"\n                            [class.cal-future]=\"day.isFuture\"\n                            [class.cal-weekend]=\"day.isWeekend\"\n                            [class.cal-in-month]=\"day.inMonth\"\n                            [class.cal-out-month]=\"!day.inMonth\">\n                            <div class=\"cal-scheduler-hour-segments\">\n                                <calendar-scheduler-hour-segment\n                                    *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n                                    [day]=\"day\"\n                                    [segment]=\"segment\"\n                                    [locale]=\"locale\"\n                                    [customTemplate]=\"cellTemplate\"\n                                    [hourSegmentHeight]=\"hourSegmentHeight\"\n                                    [showHour]=\"showSegmentHour\"\n                                    (segmentClicked)=\"segmentClicked.emit($event)\"\n                                    mwlDroppable\n                                    [dragOverClass]=\"!dragActive || !snapDraggedEvents ? 'cal-drag-over' : 'null'\"\n                                    dragActiveClass=\"cal-drag-active\"\n                                    (drop)=\"eventDropped($event, segment.date)\">\n                                </calendar-scheduler-hour-segment>\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ",
                encapsulation: core.ViewEncapsulation.None,
                styles: [".cal-scheduler-view *{box-sizing:border-box}.cal-scheduler-view .cal-scheduler-headers{display:flex;flex-flow:row wrap;margin-bottom:3px;border:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler-headers .aside{flex:1 0}.cal-scheduler-view .cal-scheduler-headers .aside.cal-header-clock{max-width:5em}.cal-scheduler-view .cal-scheduler-headers .cal-header{flex:1;text-align:center;padding:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:default}.cal-scheduler-view .cal-scheduler-headers .cal-header:not(:last-child){border-right:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler-headers .cal-header:hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler-headers .cal-header.cal-today{background-color:#e8fde7}.cal-scheduler-view .cal-scheduler-headers .cal-header.cal-weekend span{color:#8b0000}.cal-scheduler-view .cal-scheduler-headers .cal-header span{font-weight:400;opacity:.5}.cal-scheduler-view .cal-scheduler,.cal-scheduler-view .cal-scheduler-headers .cal-header-cols{display:flex;flex-flow:row wrap}.cal-scheduler-view .cal-scheduler .aside{flex:1 0}.cal-scheduler-view .cal-scheduler .aside.cal-scheduler-hour-rows{max-width:5em}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows{width:auto!important;border:1px solid #e1e1e1;overflow:hidden;position:relative}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour{display:flex}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour:nth-child(odd){background-color:#fafafa}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour:not(:last-child){border-bottom:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time{display:flex;flex-flow:column wrap;width:100%;font-weight:700;text-align:center}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-time-segment{cursor:default}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-time-segment:hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler .cal-scheduler-hour-rows .cal-scheduler-hour .cal-scheduler-time .cal-scheduler-time-segment:not(:last-child){border-bottom:thin dashed #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols{display:flex;flex-flow:row wrap;border-top:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols:not(.cal-resize-active) .cal-scheduler-hour-segment:hover{background-color:#ededed}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col{display:flex;flex-flow:column wrap;flex:1 0;position:relative;border-right:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour{display:flex;flex-flow:column wrap;flex:1 0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour.cal-today{background-color:#e8fde7}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour.cal-odd{background:#fff}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour.cal-even{background:#fafafa}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments{display:flex;flex-flow:column wrap;flex:1 0;border-bottom:1px solid #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments.no-border{border-bottom:0!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments.cal-disabled .cal-scheduler-event{filter:opacity(50%);-webkit-filter:opacity(50%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments :not(:last-child) .cal-scheduler-hour-segment{border-bottom:thin dashed #e1e1e1}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments .cal-scheduler-hour-segment{flex:1 0;display:flex;flex-flow:column wrap}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments .cal-scheduler-hour-segment.no-border{border-bottom:0!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments .cal-scheduler-hour-segment.cal-disabled{background-color:#eee;pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments .cal-scheduler-hour-segment.cal-drag-over{background-color:#ededed}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-hour .cal-scheduler-hour-segments .cal-scheduler-hour-segment .cal-scheduler-time{font-weight:700;font-size:.7em;color:#6c757d}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container{flex:1 0;display:-ms-flexbox;flex-flow:column wrap;position:absolute}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event{flex:1 0;display:flex;flex-flow:column wrap;padding:0 10px;font-size:12px;margin:2px;line-height:30px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-radius:.3em;border:1px solid #1e90ff;background-color:#d1e8ff;height:calc(100% - 5px);transition:all ease-out .2s;filter:brightness(100%);-webkit-filter:brightness(100%);-webkit-backface-visibility:hidden}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event.cal-disabled{background-color:gray!important;filter:grayscale(100%);-webkit-filter:grayscale(100%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event.cal-not-clickable{cursor:not-allowed!important}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event:not(.cal-disabled):hover{cursor:pointer;filter:brightness(95%);-webkit-filter:brightness(95%)}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event:not(.cal-disabled).cal-draggable{cursor:move}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event.cal-starts-before-day{border-top-left-radius:0;border-top-right-radius:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event.cal-ends-after-day{border-bottom-left-radius:0;border-bottom-right-radius:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container{width:100%;display:flex;flex-flow:row wrap}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-title{flex:1 0;font-size:16px;font-weight:700;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status{margin:7px 0;width:16px;height:16px;background:grey;border-radius:50px;border:1px solid #000}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.ok{background:green}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.warning{background:orange}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-title-container .cal-scheduler-event-status.danger{background:red}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-content-container{flex:1 auto;width:100%;padding-right:1.5em}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-content-container .cal-scheduler-event-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container{width:100%;position:relative}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container.no-content-actions{flex:1 0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container:not(.no-content-actions) .cal-scheduler-event-actions{position:absolute;bottom:5px;right:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-scheduler-event .cal-scheduler-event-actions-container .cal-scheduler-event-actions .cal-scheduler-event-action{text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.cal-drag-active{pointer-events:none;z-index:999}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.cal-drag-active *{pointer-events:none}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day1{left:5%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day2{left:10%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day3{left:15%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day4{left:20%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day5{left:25%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day6{left:30%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.day7{left:35%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0000{top:0}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0015{top:1.47%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0030{top:2.94%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0045{top:4.41%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0100{top:5.88%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0115{top:7.35%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0130{top:8.82%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0145{top:10.29%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0200{top:11.76%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0215{top:13.23%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0230{top:14.7%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0245{top:16.17%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0300{top:17.64%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0315{top:19.11%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0330{top:20.58%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0345{top:22.05%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0400{top:23.52%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0415{top:24.99%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0430{top:26.46%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0445{top:27.93%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0500{top:29.4%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0515{top:30.87%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0530{top:32.34%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0545{top:33.81%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0600{top:35.28%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0615{top:36.75%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0630{top:38.22%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0645{top:39.69%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0700{top:41.16%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0715{top:42.63%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0730{top:44.1%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0745{top:45.57%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0800{top:47.04%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0815{top:48.51%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0830{top:49.98%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0845{top:51.45%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0900{top:52.92%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0915{top:54.39%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0930{top:55.86%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time0945{top:57.33%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1000{top:58.8%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1015{top:60.27%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1030{top:61.74%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1045{top:63.21%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1100{top:64.68%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1115{top:66.15%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1130{top:67.62%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1145{top:69.09%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1200{top:70.56%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1215{top:72.03%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1230{top:73.5%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1245{top:74.97%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1300{top:76.44%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1315{top:77.91%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1330{top:79.38%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1345{top:80.85%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1400{top:82.32%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1415{top:83.79%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1430{top:85.26%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1445{top:86.73%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1500{top:88.2%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1515{top:89.67%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1530{top:91.14%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1545{top:92.61%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1600{top:94.08%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1615{top:95.55%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1630{top:97.02%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1645{top:98.49%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1700{top:99.96%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1715{top:101.43%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1730{top:102.9%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1745{top:104.37%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1800{top:105.84%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1815{top:107.31%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1830{top:108.78%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1845{top:110.25%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1900{top:111.72%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1915{top:113.19%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1930{top:114.66%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time1945{top:116.13%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2000{top:117.6%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2015{top:119.07%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2030{top:120.54%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2045{top:122.01%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2100{top:123.48%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2115{top:124.95%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2130{top:126.42%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2145{top:127.89%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2200{top:129.36%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2215{top:130.83%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2230{top:132.3%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2245{top:133.77%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2300{top:135.24%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2315{top:136.71%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2330{top:138.18%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2345{top:139.65%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.time2400{top:141.12%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length0{height:0%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length15{height:1.47%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length30{height:2.94%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length45{height:4.41%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length60{height:5.88%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length75{height:7.35%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length90{height:8.82%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length105{height:10.29%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length120{height:11.76%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length135{height:13.23%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length150{height:14.7%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length165{height:16.17%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length180{height:17.64%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length195{height:19.11%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length210{height:20.58%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length225{height:22.05%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length240{height:23.52%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length255{height:24.99%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length270{height:26.46%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length285{height:27.93%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length300{height:29.4%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length315{height:30.87%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length330{height:32.34%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length345{height:33.81%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length360{height:35.28%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length375{height:36.75%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length390{height:38.22%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length405{height:39.69%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length420{height:41.16%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length435{height:42.63%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length450{height:44.1%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length465{height:45.57%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length480{height:47.04%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length495{height:48.51%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length510{height:49.98%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length525{height:51.45%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length540{height:52.92%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length555{height:54.39%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length570{height:55.86%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length585{height:57.33%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length600{height:58.8%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length615{height:60.27%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length630{height:61.74%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length645{height:63.21%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length660{height:64.68%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length675{height:66.15%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length690{height:67.62%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length705{height:69.09%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length720{height:70.56%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length735{height:72.03%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length750{height:73.5%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length765{height:74.97%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length780{height:76.44%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length795{height:77.91%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length810{height:79.38%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length825{height:80.85%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length840{height:82.32%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length855{height:83.79%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length870{height:85.26%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length885{height:86.73%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length900{height:88.2%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length915{height:89.67%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length930{height:91.14%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length945{height:92.61%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length960{height:94.08%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length975{height:95.55%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length990{height:97.02%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1005{height:98.49%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1020{height:99.96%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1035{height:101.43%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1050{height:102.9%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1065{height:104.37%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1080{height:105.84%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1095{height:107.31%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1110{height:108.78%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1125{height:110.25%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1140{height:111.72%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1155{height:113.19%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1170{height:114.66%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1185{height:116.13%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1200{height:117.6%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1215{height:119.07%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1230{height:120.54%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1245{height:122.01%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1260{height:123.48%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1275{height:124.95%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1290{height:126.42%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1305{height:127.89%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1320{height:129.36%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1335{height:130.83%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1350{height:132.3%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1365{height:133.77%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1380{height:135.24%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1395{height:136.71%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1410{height:138.18%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1425{height:139.65%}.cal-scheduler-view .cal-scheduler .cal-scheduler-cols .cal-scheduler-col .cal-scheduler-event-container.length1440{height:141.12%}"]
            }),
            __param(1, core.Inject(core.LOCALE_ID)),
            __metadata("design:paramtypes", [core.ChangeDetectorRef, String, SchedulerConfig,
                CalendarSchedulerUtils, angularCalendar.DateAdapter])
        ], CalendarSchedulerViewComponent);
        return CalendarSchedulerViewComponent;
    }());

    var moment = momentImported;
    var CalendarSchedulerHourSegmentComponent = /** @class */ (function () {
        function CalendarSchedulerHourSegmentComponent() {
            this.hourSegmentHeight = 58;
            this.showHour = false;
            this.segmentClicked = new core.EventEmitter();
        }
        CalendarSchedulerHourSegmentComponent.prototype.ngOnInit = function () {
            this.title = this.title || moment(this.segment.date).format('dddd L, LT');
        };
        /**
         * @hidden
         */
        CalendarSchedulerHourSegmentComponent.prototype.onMouseEnter = function (mouseEvent, segment, event) {
            if (!event.isDisabled && !segment.isDisabled) ;
        };
        /**
         * @hidden
         */
        CalendarSchedulerHourSegmentComponent.prototype.onMouseLeave = function (mouseEvent, segment, event) {
            if (!event.isDisabled && !segment.isDisabled) ;
        };
        /**
         * @hidden
         */
        CalendarSchedulerHourSegmentComponent.prototype.onSegmentClick = function (mouseEvent, segment) {
            if (mouseEvent.stopPropagation) {
                mouseEvent.stopPropagation();
            }
            if (segment.events.length === 0) {
                this.segmentClicked.emit({ segment: segment });
            }
        };
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerHourSegmentComponent.prototype, "title", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerHourSegmentComponent.prototype, "day", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerHourSegmentComponent.prototype, "segment", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerHourSegmentComponent.prototype, "locale", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerHourSegmentComponent.prototype, "customTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Number)
        ], CalendarSchedulerHourSegmentComponent.prototype, "hourSegmentHeight", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerHourSegmentComponent.prototype, "showHour", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerHourSegmentComponent.prototype, "segmentClicked", void 0);
        CalendarSchedulerHourSegmentComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-hour-segment',
                template: "\n        <ng-template #defaultTemplate>\n            <div class=\"cal-scheduler-hour-segment\"\n                [title]=\"title\"\n                [ngClass]=\"segment?.cssClass\"\n                [class.has-events]=\"segment.events.length > 0\"\n                [class.cal-disabled]=\"segment.isDisabled\"\n                [style.backgroundColor]=\"segment.backgroundColor\"\n                [style.height.px]=\"hourSegmentHeight\"\n                (mwlClick)=\"onSegmentClick($event, segment)\">\n                <div class=\"cal-scheduler-time\" *ngIf=\"showHour\">\n                    {{ segment.date | calendarDate:'dayViewHour':locale }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n                title: title,\n                day: day,\n                segment: segment,\n                locale: locale,\n                hourSegmentHeight: hourSegmentHeight,\n                showHour: showHour,\n                segmentClicked: segmentClicked\n            }\">\n        </ng-template>\n    "
            })
        ], CalendarSchedulerHourSegmentComponent);
        return CalendarSchedulerHourSegmentComponent;
    }());

    var CalendarSchedulerHeaderComponent = /** @class */ (function () {
        function CalendarSchedulerHeaderComponent() {
            this.dayHeaderClicked = new core.EventEmitter();
        }
        /**
         * @hidden
         */
        CalendarSchedulerHeaderComponent.prototype.onDayHeaderClick = function (mouseEvent, day) {
            if (mouseEvent.stopPropagation) {
                mouseEvent.stopPropagation();
            }
            this.dayHeaderClicked.emit({ day: day });
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Array)
        ], CalendarSchedulerHeaderComponent.prototype, "days", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerHeaderComponent.prototype, "locale", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerHeaderComponent.prototype, "customTemplate", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerHeaderComponent.prototype, "dayHeaderClicked", void 0);
        CalendarSchedulerHeaderComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-header',
                template: "\n        <ng-template #defaultTemplate>\n            <div class=\"cal-scheduler-headers\">\n                <div class=\"cal-header aside cal-header-clock align-center\">\n                    <i class=\"material-icons md-32\" style=\"margin:auto;\">schedule</i>\n                </div>\n\n                <div class=\"cal-header-cols aside\">\n                    <div\n                        class=\"cal-header\"\n                        *ngFor=\"let day of days\"\n                        [class.cal-past]=\"day.isPast\"\n                        [class.cal-today]=\"day.isToday\"\n                        [class.cal-future]=\"day.isFuture\"\n                        [class.cal-weekend]=\"day.isWeekend\"\n                        (mwlClick)=\"onDayHeaderClick($event, day)\">\n                        <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n                        <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n                days: days,\n                locale: locale,\n                dayHeaderClicked: dayHeaderClicked\n            }\">\n        </ng-template>\n    "
            })
        ], CalendarSchedulerHeaderComponent);
        return CalendarSchedulerHeaderComponent;
    }());

    var moment$1 = momentImported;
    var CalendarSchedulerEventComponent = /** @class */ (function () {
        function CalendarSchedulerEventComponent() {
            this.showContent = true;
            this.showActions = true;
            this.showStatus = true;
            this.eventClicked = new core.EventEmitter();
        }
        CalendarSchedulerEventComponent.prototype.ngOnInit = function () {
            this.title = this.title || this.event.event.title + ", " + moment$1(this.event.event.start).format('dddd L, LT');
        };
        CalendarSchedulerEventComponent.prototype.onMouseEnter = function () {
            // Maybe do something
        };
        CalendarSchedulerEventComponent.prototype.onMouseLeave = function () {
            // Maybe do something
        };
        /**
         * @hidden
         */
        CalendarSchedulerEventComponent.prototype.onEventClick = function (mouseEvent, event) {
            if (mouseEvent.stopPropagation) {
                mouseEvent.stopPropagation();
            }
            if (event.isClickable) {
                this.eventClicked.emit({ event: event });
            }
        };
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerEventComponent.prototype, "title", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerEventComponent.prototype, "day", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerEventComponent.prototype, "event", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventComponent.prototype, "showContent", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventComponent.prototype, "showActions", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventComponent.prototype, "showStatus", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerEventComponent.prototype, "customTemplate", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerEventComponent.prototype, "eventTitleTemplate", void 0);
        __decorate([
            core.Output(),
            __metadata("design:type", core.EventEmitter)
        ], CalendarSchedulerEventComponent.prototype, "eventClicked", void 0);
        CalendarSchedulerEventComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-event',
                template: "\n        <ng-template #defaultTemplate>\n            <div class=\"cal-scheduler-event\"\n                [title]=\"title\"\n                [class.cal-disabled]=\"event.event.isDisabled\"\n                [class.cal-not-clickable]=\"!event.event.isClickable\"\n                [class.cal-draggable]=\"event.event.draggable\"\n                [class.cal-starts-before-day]=\"event.startsBeforeDay\"\n                [class.cal-ends-after-day]=\"event.endsAfterDay\"\n                [style.backgroundColor]=\"event.event.color?.secondary\"\n                [style.borderColor]=\"event.event.color?.primary\"\n                (mwlClick)=\"onEventClick($event, event.event)\"\n                (mouseenter)=\"onMouseEnter()\"\n                (mouseleave)=\"onMouseLeave()\">\n                <calendar-scheduler-event-title\n                    view=\"week\"\n                    [event]=\"event.event\"\n                    [showStatus]=\"showStatus\"\n                    [showContent]=\"showContent\"\n                    [showActions]=\"showActions\"\n                    [customTemplate]=\"eventTitleTemplate\">\n                </calendar-scheduler-event-title>\n                <calendar-scheduler-event-content\n                    *ngIf=\"showContent\"\n                    [event]=\"event.event\">\n                </calendar-scheduler-event-content>\n                <calendar-scheduler-event-actions\n                    *ngIf=\"showActions && showContent && (event.event.isClickable || event.event.isDisabled)\"\n                    [event]=\"event.event\">\n                </calendar-scheduler-event-actions>\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n                title: title,\n                day: day,\n                event: event,\n                showContent: showContent,\n                showActions: showActions,\n                showStatus: showStatus,\n                eventTitleTemplate: eventTitleTemplate,\n                eventClicked: eventClicked\n            }\">\n        </ng-template>\n    ",
                host: {
                    '[style.height.%]': '100'
                }
            }),
            __metadata("design:paramtypes", [])
        ], CalendarSchedulerEventComponent);
        return CalendarSchedulerEventComponent;
    }());

    var CalendarSchedulerEventTitleComponent = /** @class */ (function () {
        function CalendarSchedulerEventTitleComponent() {
            this.showStatus = true;
            this.showContent = true;
            this.showActions = true;
        }
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerEventTitleComponent.prototype, "event", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], CalendarSchedulerEventTitleComponent.prototype, "view", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventTitleComponent.prototype, "showStatus", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventTitleComponent.prototype, "showContent", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Boolean)
        ], CalendarSchedulerEventTitleComponent.prototype, "showActions", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", core.TemplateRef)
        ], CalendarSchedulerEventTitleComponent.prototype, "customTemplate", void 0);
        CalendarSchedulerEventTitleComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-event-title',
                template: "\n        <ng-template #defaultTemplate>\n            <div\n                class=\"cal-scheduler-event-title\"\n                [innerHTML]=\"event.title | schedulerEventTitle:view:event\">\n            </div>\n            <calendar-scheduler-event-actions\n                *ngIf=\"showActions && !showContent && (event.isClickable || event.isDisabled)\"\n                class=\"no-content-actions\"\n                [event]=\"event\">\n            </calendar-scheduler-event-actions>\n            <div *ngIf=\"event.status && showStatus\"\n                class=\"cal-scheduler-event-status\"\n                [class.ok]=\"event.status === 'ok'\"\n                [class.warning]=\"event.status === 'warning'\"\n                [class.danger]=\"event.status === 'danger'\">\n            </div>\n        </ng-template>\n        <ng-template\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n            [ngTemplateOutletContext]=\"{\n                view: view,\n                event: event,\n                showStatus: showStatus,\n                showContent: showContent,\n                showActions: showActions\n            }\">\n        </ng-template>\n    ",
                host: {
                    'class': 'cal-scheduler-event-title-container'
                }
            })
        ], CalendarSchedulerEventTitleComponent);
        return CalendarSchedulerEventTitleComponent;
    }());

    var CalendarSchedulerEventContentComponent = /** @class */ (function () {
        function CalendarSchedulerEventContentComponent() {
        }
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerEventContentComponent.prototype, "event", void 0);
        CalendarSchedulerEventContentComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-event-content',
                template: "\n        <div *ngIf=\"event.content\"\n            class=\"cal-scheduler-event-content\"\n            [innerHTML]=\"event.content\">\n        </div>\n    ",
                host: {
                    'class': 'cal-scheduler-event-content-container'
                }
            })
        ], CalendarSchedulerEventContentComponent);
        return CalendarSchedulerEventContentComponent;
    }());

    var CalendarSchedulerEventActionsComponent = /** @class */ (function () {
        function CalendarSchedulerEventActionsComponent() {
            this.actions = [];
        }
        CalendarSchedulerEventActionsComponent.prototype.ngOnInit = function () {
            this.actions = this.event.isDisabled ?
                this.event.actions.filter(function (a) { return !a.when || a.when === 'disabled'; }) :
                this.event.actions.filter(function (a) { return !a.when || a.when === 'enabled'; });
        };
        /**
         * @hidden
         */
        CalendarSchedulerEventActionsComponent.prototype.onActionClick = function (mouseEvent, action, event) {
            if (mouseEvent.stopPropagation) {
                mouseEvent.stopPropagation();
            }
            action.onClick(event);
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], CalendarSchedulerEventActionsComponent.prototype, "event", void 0);
        CalendarSchedulerEventActionsComponent = __decorate([
            core.Component({
                selector: 'calendar-scheduler-event-actions',
                template: "\n        <span *ngIf=\"event.actions\"\n            class=\"cal-scheduler-event-actions\">\n            <a\n                class=\"cal-scheduler-event-action\"\n                href=\"javascript:;\"\n                *ngFor=\"let action of actions\"\n                (mwlClick)=\"onActionClick($event, action, event)\"\n                [ngClass]=\"action.cssClass\"\n                [innerHtml]=\"action.label\"\n                [title]=\"action.title\">\n            </a>\n        </span>\n    ",
                host: {
                    'class': 'cal-scheduler-event-actions-container'
                }
            })
        ], CalendarSchedulerEventActionsComponent);
        return CalendarSchedulerEventActionsComponent;
    }());

    var SchedulerEventTitleFormatter = /** @class */ (function (_super) {
        __extends(SchedulerEventTitleFormatter, _super);
        function SchedulerEventTitleFormatter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SchedulerEventTitleFormatter;
    }(angularCalendar.CalendarEventTitleFormatter));

    var SchedulerEventTitlePipe = /** @class */ (function () {
        function SchedulerEventTitlePipe(schedulerEventTitle) {
            this.schedulerEventTitle = schedulerEventTitle;
        }
        SchedulerEventTitlePipe.prototype.transform = function (title, titleType, event) {
            return this.schedulerEventTitle[titleType](event);
        };
        SchedulerEventTitlePipe = __decorate([
            core.Pipe({
                name: 'schedulerEventTitle'
            }),
            __metadata("design:paramtypes", [SchedulerEventTitleFormatter])
        ], SchedulerEventTitlePipe);
        return SchedulerEventTitlePipe;
    }());

    var SchedulerDateFormatter = /** @class */ (function (_super) {
        __extends(SchedulerDateFormatter, _super);
        function SchedulerDateFormatter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * The time formatting down the left hand side of the day view
         */
        SchedulerDateFormatter.prototype.dayViewHour = function (_a) {
            var date = _a.date, locale = _a.locale;
            return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);
        };
        SchedulerDateFormatter.prototype.weekViewTitle = function (_a) {
            var date = _a.date, locale = _a.locale;
            // http://generatedcontent.org/post/59403168016/esintlapi
            var year = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);
            var month = new Intl.DateTimeFormat(locale, { month: 'short' }).format(date);
            // var firstDay: number = date.getDate() - date.getDay() + 1; // First day is the day of the month - the day of the week
            var firstDay = date.getDate();
            if (date.getDay() === 0) {
                firstDay += 1;
            }
            var lastDay = firstDay + 6; // last day is the first day + 6
            var firstDayMonth = month;
            var lastDayMonth = month;
            var firstDayYear = year;
            var lastDayYear = year;
            if (firstDay < 1) {
                var prevMonthDate = new Date(date.getFullYear(), date.getMonth() - 1);
                firstDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(prevMonthDate);
                var daysInPrevMonth = this.daysInMonth(prevMonthDate);
                var i = 0;
                var prevMonthDay = daysInPrevMonth;
                for (i = 0; i < Math.abs(firstDay); i++) {
                    prevMonthDay--;
                }
                firstDay = prevMonthDay;
                var prevMonthYear = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(prevMonthDate);
                if (Number(prevMonthYear) < Number(year)) {
                    firstDayYear = prevMonthYear;
                }
            }
            var daysInMonth = this.daysInMonth(date);
            if (lastDay > daysInMonth) {
                var nextMonthDate = new Date(date.getFullYear(), date.getMonth() + 1);
                lastDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(nextMonthDate);
                var i = 0;
                var nextMonthDay = 0;
                for (i = 0; i < (lastDay - daysInMonth); i++) {
                    nextMonthDay++;
                }
                lastDay = nextMonthDay;
                var nextMonthYear = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(nextMonthDate);
                if (Number(nextMonthYear) > Number(year)) {
                    lastDayYear = nextMonthYear;
                }
            }
            return "" + firstDay + (firstDayMonth !== lastDayMonth ? ' ' + firstDayMonth : '') +
                (firstDayYear !== lastDayYear ? ' ' + firstDayYear : '') +
                (" - " + lastDay + " " + lastDayMonth + " " + lastDayYear);
        };
        SchedulerDateFormatter.prototype.daysInMonth = function (anyDateInMonth) {
            return new Date(anyDateInMonth.getFullYear(), anyDateInMonth.getMonth() + 1, 0).getDate();
        };
        return SchedulerDateFormatter;
    }(angularCalendar.CalendarDateFormatter));

    var SCHEDULER_CONFIG = new core.InjectionToken('SchedulerConfig');
    function provideSchedulerConfig(config) {
        return new SchedulerConfig(config);
    }
    var ɵ0 = dateFns.adapterFactory;
    /**
     * The main module of this library. Example usage:
     *
     * ```typescript
     * import { CalenderModule } from 'angular-calendar';
     * import { SchedulerModule } from 'angular-calendar-scheduler';
     *
     * @NgModule({
     *   imports: [
     *     CalenderModule.forRoot(),
     *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })
     *   ]
     * })
     * class MyModule {}
     * ```
     *
     */
    var SchedulerModule = /** @class */ (function () {
        function SchedulerModule() {
        }
        SchedulerModule_1 = SchedulerModule;
        SchedulerModule.forRoot = function (config) {
            return {
                ngModule: SchedulerModule_1,
                providers: [
                    { provide: SCHEDULER_CONFIG, useValue: config },
                    { provide: SchedulerConfig, useFactory: provideSchedulerConfig, deps: [SCHEDULER_CONFIG] }
                ]
            };
        };
        var SchedulerModule_1;
        SchedulerModule = SchedulerModule_1 = __decorate([
            core.NgModule({
                imports: [
                    common.CommonModule,
                    angularCalendar.CalendarModule.forRoot({
                        provide: angularCalendar.DateAdapter,
                        useFactory: ɵ0
                    })
                ],
                declarations: [
                    CalendarSchedulerViewComponent,
                    CalendarSchedulerHourSegmentComponent,
                    CalendarSchedulerHeaderComponent,
                    CalendarSchedulerEventComponent,
                    CalendarSchedulerEventTitleComponent,
                    CalendarSchedulerEventContentComponent,
                    CalendarSchedulerEventActionsComponent,
                    SchedulerEventTitlePipe
                ],
                providers: [
                    CalendarSchedulerUtils,
                    SchedulerEventTitlePipe,
                    SchedulerEventTitleFormatter,
                    SchedulerDateFormatter
                ],
                exports: [
                    CalendarSchedulerViewComponent,
                    CalendarSchedulerHourSegmentComponent,
                    CalendarSchedulerHeaderComponent,
                    CalendarSchedulerEventComponent,
                    CalendarSchedulerEventTitleComponent,
                    CalendarSchedulerEventContentComponent,
                    CalendarSchedulerEventActionsComponent
                ]
            })
        ], SchedulerModule);
        return SchedulerModule;
    }());

    exports.CalendarSchedulerUtils = CalendarSchedulerUtils;
    exports.CalendarSchedulerViewComponent = CalendarSchedulerViewComponent;
    exports.SCHEDULER_CONFIG = SCHEDULER_CONFIG;
    exports.SchedulerDateFormatter = SchedulerDateFormatter;
    exports.SchedulerEventTitleFormatter = SchedulerEventTitleFormatter;
    exports.SchedulerEventTitlePipe = SchedulerEventTitlePipe;
    exports.SchedulerModule = SchedulerModule;
    exports.addPeriod = addPeriod;
    exports.endOfPeriod = endOfPeriod;
    exports.getDefaultEventEnd = getDefaultEventEnd;
    exports.getMinimumEventHeightInMinutes = getMinimumEventHeightInMinutes;
    exports.getMinutesMoved = getMinutesMoved;
    exports.isDraggedWithinPeriod = isDraggedWithinPeriod;
    exports.provideSchedulerConfig = provideSchedulerConfig;
    exports.roundToNearest = roundToNearest;
    exports.shouldFireDroppedEvent = shouldFireDroppedEvent;
    exports.startOfPeriod = startOfPeriod;
    exports.subPeriod = subPeriod;
    exports.trackByDayOrEvent = trackByDayOrEvent;
    exports.trackByHour = trackByHour;
    exports.trackByHourColumn = trackByHourColumn;
    exports.trackByHourSegment = trackByHourSegment;
    exports.ɵ0 = ɵ0;
    exports.ɵa = SchedulerConfig;
    exports.ɵb = CalendarSchedulerHourSegmentComponent;
    exports.ɵc = CalendarSchedulerHeaderComponent;
    exports.ɵd = CalendarSchedulerEventComponent;
    exports.ɵe = CalendarSchedulerEventTitleComponent;
    exports.ɵf = CalendarSchedulerEventContentComponent;
    exports.ɵg = CalendarSchedulerEventActionsComponent;
    exports.ɵh = MINUTES_IN_HOUR;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=angular-calendar-scheduler.umd.js.map
