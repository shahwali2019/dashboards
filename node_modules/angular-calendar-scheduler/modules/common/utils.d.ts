import { SchedulerViewPeriod, SchedulerViewEvent, SchedulerViewDay, CalendarSchedulerEvent, SchedulerViewHour, SchedulerViewHourSegment } from '../scheduler/models';
import { DayViewHour } from 'calendar-utils';
import { CalendarView, DateAdapter } from 'angular-calendar';
export declare function addPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date;
export declare function subPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date;
export declare function startOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date;
export declare function endOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date;
export declare const trackByDayOrEvent: (index: number, event: SchedulerViewEvent) => string | CalendarSchedulerEvent;
export declare const trackByHourColumn: (index: number, day: SchedulerViewDay) => string | SchedulerViewDay;
export declare const trackByHour: (index: number, hour: SchedulerViewHour | DayViewHour) => string;
export declare const trackByHourSegment: (index: number, segment: SchedulerViewHourSegment) => string;
export declare function getMinimumEventHeightInMinutes(hourSegments: number, hourSegmentHeight: number): number;
export declare function getDefaultEventEnd(dateAdapter: DateAdapter, event: CalendarSchedulerEvent, minimumMinutes: number): Date;
export declare function roundToNearest(amount: number, precision: number): number;
export declare function getMinutesMoved(movedY: number, hourSegments: number, hourSegmentHeight: number, eventSnapSize: number): number;
export declare function isDraggedWithinPeriod(newStart: Date, newEnd: Date, period: SchedulerViewPeriod): boolean;
export declare function shouldFireDroppedEvent(dropEvent: {
    dropData?: {
        event?: CalendarSchedulerEvent;
        calendarId?: symbol;
    };
}, date: Date, calendarId: symbol): boolean;
