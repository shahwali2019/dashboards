{"version":3,"file":"angular-calendar-scheduler.js","sources":["ng://angular-calendar-scheduler/modules/scheduler/scheduler-config.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.ts","ng://angular-calendar-scheduler/modules/common/utils.ts","ng://angular-calendar-scheduler/modules/scheduler/utils/calendar-scheduler-utils.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-view.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-hour-segment.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-header.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-title.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-content.component.ts","ng://angular-calendar-scheduler/modules/scheduler/calendar-scheduler-event-actions.component.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-event-title-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/pipes/scheduler-event-title.pipe.ts","ng://angular-calendar-scheduler/modules/scheduler/formatters/scheduler-date-formatter.provider.ts","ng://angular-calendar-scheduler/modules/scheduler/scheduler.module.ts","ng://angular-calendar-scheduler/angular-calendar-scheduler.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Auth configuration.\r\n */\r\n@Injectable()\r\nexport class SchedulerConfig {\r\n    locale?: string = 'en';\r\n    headerDateFormat?: 'weekNumber' | 'daysRange' = 'daysRange';\r\n\r\n    constructor(config: SchedulerConfig = {}) {\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return config && source !== undefined ? source : defaultValue;\r\n        }\r\n\r\n        this.locale = use(config.locale, this.locale);\r\n        this.headerDateFormat = use(config.headerDateFormat, this.headerDateFormat);\r\n    }\r\n}\r\n","import {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewDay,\r\n    SchedulerViewEvent,\r\n    SchedulerViewHourSegment,\r\n    SchedulerView,\r\n    SchedulerViewPeriod\r\n} from '../models';\r\nimport {\r\n    DayViewHour,\r\n    DayViewHourSegment\r\n} from 'calendar-utils';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n\r\nexport enum DAYS_OF_WEEK {\r\n    SUNDAY = 0,\r\n    MONDAY = 1,\r\n    TUESDAY = 2,\r\n    WEDNESDAY = 3,\r\n    THURSDAY = 4,\r\n    FRIDAY = 5,\r\n    SATURDAY = 6\r\n}\r\n\r\nconst DEFAULT_WEEKEND_DAYS: number[] = [\r\n    DAYS_OF_WEEK.SUNDAY,\r\n    DAYS_OF_WEEK.SATURDAY\r\n];\r\n\r\nexport const DAYS_IN_WEEK: number = 7;\r\nexport const HOURS_IN_DAY: number = 24;\r\nexport const MINUTES_IN_HOUR: number = 60;\r\nexport const SECONDS_IN_DAY: number = 60 * 60 * 24;\r\n\r\nexport const DEFAULT_HOUR_SEGMENT_HEIGHT_PX = 40;\r\nexport const DEFAULT_EVENT_WIDTH_PERCENT = 100;\r\nexport const DEFAULT_HOUR_SEGMENTS = 2;\r\n\r\nexport interface GetSchedulerViewHourGridArgs {\r\n    viewDate: Date;\r\n    hourSegments: number;\r\n    dayStart: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    dayEnd: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n}\r\n\r\nexport function getSchedulerViewHourGrid(dateAdapter: DateAdapter, args: GetSchedulerViewHourGridArgs): DayViewHour[] {\r\n    const viewDate: Date = args.viewDate, hourSegments: number = args.hourSegments, dayStart: any = args.dayStart, dayEnd: any = args.dayEnd;\r\n    const hours: DayViewHour[] = [];\r\n\r\n    const startOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(viewDate), dayStart.hour), dayStart.minute);\r\n    const endOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(viewDate)), dayEnd.hour), dayEnd.minute);\r\n    const segmentDuration: number = MINUTES_IN_HOUR / hourSegments;\r\n    const startOfViewDay: Date = dateAdapter.startOfDay(viewDate);\r\n\r\n    const range = (start: number, end: number): number[] => Array.from({ length: ((end + 1) - start) }, (v, k) => k + start);\r\n    const hoursInView: number[] = range(dayStart.hour, dayEnd.hour);\r\n\r\n    hoursInView.forEach((hour: number, i: number) => {\r\n        const segments = [];\r\n        for (let j = 0; j < hourSegments; j++) {\r\n            const date = dateAdapter.addMinutes(dateAdapter.addHours(startOfViewDay, hour), j * segmentDuration);\r\n            if (date >= startOfView && date < endOfView) {\r\n                segments.push({\r\n                    date: date,\r\n                    isStart: j === 0\r\n                });\r\n            }\r\n        }\r\n        if (segments.length > 0) {\r\n            hours.push(<DayViewHour>{ segments: segments });\r\n        }\r\n    });\r\n    return hours;\r\n}\r\n\r\nexport interface GetSchedulerViewArgs {\r\n    events?: CalendarSchedulerEvent[];\r\n    viewDate: Date;\r\n    hourSegments: 1 | 2 | 4 | 6;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    dayStart: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    dayEnd: {\r\n        hour: number;\r\n        minute: number;\r\n    };\r\n    excluded?: number[];\r\n    eventWidth: number;\r\n    hourSegmentHeight: number;\r\n}\r\n\r\nexport function getSchedulerView(dateAdapter: DateAdapter, args: GetSchedulerViewArgs): SchedulerView {\r\n    let events: CalendarSchedulerEvent[] = args.events || [];\r\n    if (!events) { events = []; }\r\n\r\n    const viewDate: Date = args.viewDate;\r\n    const weekStartsOn: number = args.weekStartsOn;\r\n    const startsWithToday: boolean = args.startsWithToday;\r\n    const excluded: number[] = args.excluded || [];\r\n    const hourSegments: number = args.hourSegments || DEFAULT_HOUR_SEGMENTS;\r\n    const hourSegmentHeight: number = args.hourSegmentHeight || DEFAULT_HOUR_SEGMENT_HEIGHT_PX;\r\n    const eventWidth: number = args.eventWidth || DEFAULT_EVENT_WIDTH_PERCENT;\r\n    const dayStart: any = args.dayStart, dayEnd: any = args.dayEnd;\r\n\r\n    const startOfViewWeek: Date = startsWithToday ? dateAdapter.startOfDay(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const endOfViewWeek: Date = startsWithToday ? dateAdapter.addDays(dateAdapter.endOfDay(viewDate), 6) : dateAdapter.endOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n\r\n    const eventsInWeek: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n        events: events,\r\n        periodStart: startOfViewWeek,\r\n        periodEnd: endOfViewWeek\r\n    });\r\n\r\n    const days: SchedulerViewDay[] = getSchedulerViewDays(dateAdapter, {\r\n        viewDate: viewDate,\r\n        weekStartsOn: weekStartsOn,\r\n        startsWithToday: startsWithToday,\r\n        excluded: excluded\r\n    });\r\n    days.forEach((day: SchedulerViewDay) => {\r\n        const startOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfDay(day.date), dayStart.hour), dayStart.minute);\r\n        const endOfView: Date = dateAdapter.setMinutes(dateAdapter.setHours(dateAdapter.startOfMinute(dateAdapter.endOfDay(day.date)), dayEnd.hour), dayEnd.minute);\r\n        const previousDayEvents: SchedulerViewEvent[] = [];\r\n\r\n        const eventsInDay: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n            events: eventsInWeek,\r\n            periodStart: startOfView,\r\n            periodEnd: endOfView\r\n        });\r\n\r\n        day.events = eventsInDay\r\n            .sort((eventA: CalendarSchedulerEvent, eventB: CalendarSchedulerEvent) => eventA.start.valueOf() - eventB.start.valueOf())\r\n            .map((ev: CalendarSchedulerEvent) => {\r\n                const eventStart: Date = ev.start;\r\n                const eventEnd: Date = ev.end || eventStart;\r\n                const startsBeforeDay: boolean = eventStart < startOfView;\r\n                const endsAfterDay: boolean = dateAdapter.addMinutes(eventEnd, -1) > endOfView;\r\n                const hourHeightModifier: number = ((hourSegments * hourSegmentHeight) + 1) / MINUTES_IN_HOUR; // +1 for the 1px segment bottom border\r\n\r\n                let top: number = 0;\r\n                if (eventStart > startOfView) {\r\n                    top += dateAdapter.differenceInMinutes(eventStart, startOfView);\r\n                }\r\n                top *= hourHeightModifier;\r\n\r\n                const startDate: Date = startsBeforeDay ? startOfView : eventStart;\r\n                const endDate: Date = endsAfterDay ? endOfView : eventEnd;\r\n                let height: number = dateAdapter.differenceInMinutes(endDate, startDate);\r\n                if (!ev.end) {\r\n                    height = hourSegmentHeight;\r\n                } else {\r\n                    height *= hourHeightModifier;\r\n                }\r\n\r\n                const bottom: number = top + height;\r\n                const overlappingPreviousEvents = getOverLappingDayViewEvents(\r\n                    previousDayEvents,\r\n                    top,\r\n                    bottom\r\n                );\r\n\r\n                let left: number = 0;\r\n                while (overlappingPreviousEvents.some(previousEvent => previousEvent.left === left)) {\r\n                    left += eventWidth;\r\n                }\r\n\r\n                const event: SchedulerViewEvent =\r\n                <SchedulerViewEvent>{\r\n                    event: ev,\r\n                    top: top,\r\n                    height: height,\r\n                    width: eventWidth,\r\n                    left: left,\r\n                    startsBeforeDay: startsBeforeDay,\r\n                    endsAfterDay: endsAfterDay,\r\n                    isProcessed: false\r\n                };\r\n\r\n                previousDayEvents.push(event);\r\n\r\n                return event;\r\n            });\r\n\r\n        day.hours = getSchedulerViewHourGrid(dateAdapter, {\r\n            viewDate: viewDate,\r\n            hourSegments: hourSegments,\r\n            dayStart: {\r\n                hour: dayStart.hour,\r\n                minute: dayStart.minute\r\n            },\r\n            dayEnd: {\r\n                hour: dayEnd.hour,\r\n                minute: dayEnd.minute\r\n            }\r\n        }).map((hour: DayViewHour) => {\r\n            const date: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n\r\n            const startOfHour: Date = new Date(day.date.getFullYear(), day.date.getMonth(), day.date.getDate(), hour.segments[0].date.getHours());\r\n            const endOfHour: Date = dateAdapter.addMinutes(dateAdapter.addHours(startOfHour, 1), -1);\r\n\r\n            const eventsInHour: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n                events: eventsInDay,\r\n                periodStart: startOfHour,\r\n                periodEnd: endOfHour\r\n            });\r\n\r\n            const segments: SchedulerViewHourSegment[] =\r\n                hour.segments.map((segment: DayViewHourSegment) => {\r\n                    segment.date = dateAdapter.setDate(dateAdapter.setMonth(dateAdapter.setYear(segment.date, day.date.getFullYear()), day.date.getMonth()), day.date.getDate());\r\n\r\n                    const startOfSegment: Date = segment.date;\r\n                    const endOfSegment: Date = dateAdapter.addMinutes(segment.date, MINUTES_IN_HOUR / hourSegments);\r\n\r\n                    const eventsInSegment: CalendarSchedulerEvent[] = getEventsInPeriod(dateAdapter, {\r\n                        events: eventsInHour,\r\n                        periodStart: startOfSegment,\r\n                        periodEnd: endOfSegment\r\n                    });\r\n\r\n                    return <SchedulerViewHourSegment>{\r\n                        segment: segment,\r\n                        date: new Date(segment.date),\r\n                        events: eventsInSegment\r\n                    };\r\n                });\r\n\r\n            return <SchedulerViewHour>{\r\n                hour: hour,\r\n                date: date,\r\n                events: eventsInHour,\r\n                segments: segments\r\n            };\r\n        });\r\n    });\r\n\r\n    return <SchedulerView>{\r\n        days: days,\r\n        period: <SchedulerViewPeriod>{\r\n            events: eventsInWeek,\r\n            start: startOfViewWeek,\r\n            end: endOfViewWeek\r\n        }\r\n    };\r\n}\r\n\r\nexport interface GetSchedulerViewDaysArgs {\r\n    viewDate: Date;\r\n    weekStartsOn: number;\r\n    startsWithToday: boolean;\r\n    excluded?: number[];\r\n    weekendDays?: number[];\r\n}\r\n\r\nexport function getSchedulerViewDays(dateAdapter: DateAdapter, args: GetSchedulerViewDaysArgs): SchedulerViewDay[] {\r\n    const viewDate: Date = args.viewDate;\r\n    const weekStartsOn: number = args.weekStartsOn;\r\n    const startsWithToday: boolean = args.startsWithToday;\r\n    const excluded: number[] = args.excluded || [];\r\n    const weekendDays: number[] = args.weekendDays || DEFAULT_WEEKEND_DAYS;\r\n\r\n    const start = startsWithToday ? new Date(viewDate) : dateAdapter.startOfWeek(viewDate, { weekStartsOn: weekStartsOn });\r\n    const days: SchedulerViewDay[] = [];\r\n    const loop = (i: number) => {\r\n        const date = dateAdapter.addDays(start, i);\r\n        if (!excluded.some((e: number) => date.getDay() === e)) {\r\n            days.push(getSchedulerDay(dateAdapter, { date, weekendDays }));\r\n        }\r\n    };\r\n    for (let i = 0; i < DAYS_IN_WEEK; i++) {\r\n        loop(i);\r\n    }\r\n    return days;\r\n}\r\n\r\nfunction getSchedulerDay(dateAdapter: DateAdapter, args: { date: Date, weekendDays: number[] }): SchedulerViewDay {\r\n    const date: Date = args.date;\r\n    const today: Date = dateAdapter.startOfDay(new Date());\r\n\r\n    return <SchedulerViewDay>{\r\n        date: date,\r\n        isPast: date < today,\r\n        isToday: dateAdapter.isSameDay(date, today),\r\n        isFuture: date >= dateAdapter.addDays(today, 1),\r\n        isWeekend: args.weekendDays.indexOf(dateAdapter.getDay(date)) > -1,\r\n        inMonth: dateAdapter.isSameMonth(date, today),\r\n        hours: []\r\n    };\r\n}\r\n\r\nexport interface GetEventsInPeriodArgs {\r\n    events: CalendarSchedulerEvent[];\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\nfunction getEventsInPeriod(dateAdapter: DateAdapter, args: GetEventsInPeriodArgs): CalendarSchedulerEvent[] {\r\n    const events: CalendarSchedulerEvent[] = args.events, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n    return events.filter((event) => isEventInPeriod(dateAdapter, { event: event, periodStart: periodStart, periodEnd: periodEnd }));\r\n}\r\n\r\ninterface IsEventInPeriodArgs {\r\n    event: CalendarSchedulerEvent;\r\n    periodStart: Date;\r\n    periodEnd: Date;\r\n}\r\n\r\n\r\nfunction isEventInPeriod(dateAdapter: DateAdapter, args: IsEventInPeriodArgs): boolean {\r\n    const { isSameSecond } = dateAdapter;\r\n    const event: CalendarSchedulerEvent = args.event, periodStart: string | number | Date = args.periodStart, periodEnd: string | number | Date = args.periodEnd;\r\n    const eventStart: Date = event.start;\r\n    const eventEnd: Date = event.end || event.start;\r\n\r\n    if (eventStart > periodStart && eventStart < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventEnd > periodStart && eventEnd < periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (eventStart < periodStart && eventEnd > periodEnd) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nfunction getOverLappingDayViewEvents(events: SchedulerViewEvent[], top: number, bottom: number): SchedulerViewEvent[] {\r\n    return events.filter((previousEvent: SchedulerViewEvent) => {\r\n        const previousEventTop: number = previousEvent.top;\r\n        const previousEventBottom: number = previousEvent.top + previousEvent.height;\r\n\r\n        if (top < previousEventBottom && previousEventBottom < bottom) {\r\n            return true;\r\n        } else if (previousEventTop <= top && bottom <= previousEventBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n}\r\n","import {\r\n    SchedulerViewPeriod,\r\n    SchedulerViewEvent,\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment\r\n} from '../scheduler/models';\r\nimport {\r\n    DayViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    CalendarView,\r\n    DateAdapter\r\n} from 'angular-calendar';\r\nimport { MINUTES_IN_HOUR } from '../scheduler/utils/calendar-scheduler-utils';\r\n\r\nexport function addPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.addDays,\r\n        week: dateAdapter.addWeeks,\r\n        month: dateAdapter.addMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function subPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date, amount: number): Date {\r\n    return {\r\n        day: dateAdapter.subDays,\r\n        week: dateAdapter.subWeeks,\r\n        month: dateAdapter.subMonths\r\n    }[period](date, amount);\r\n}\r\n\r\nexport function startOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.startOfDay,\r\n        week: dateAdapter.startOfWeek,\r\n        month: dateAdapter.startOfMonth\r\n    }[period](date);\r\n}\r\n\r\nexport function endOfPeriod(dateAdapter: DateAdapter, period: CalendarView, date: Date): Date {\r\n    return {\r\n        day: dateAdapter.endOfDay,\r\n        week: dateAdapter.endOfWeek,\r\n        month: dateAdapter.endOfMonth\r\n    }[period](date);\r\n}\r\n\r\n\r\nexport const trackByDayOrEvent = (index: number, event: SchedulerViewEvent ) =>\r\n    (event.event.id ? event.event.id : event.event);\r\n\r\nexport const trackByHourColumn = (index: number, day: SchedulerViewDay) =>\r\n    day.hours[0] ? day.hours[0].segments[0].date.toISOString() : day;\r\n\r\nexport const trackByHour = (index: number, hour: DayViewHour | SchedulerViewHour) =>\r\n    hour.segments[0].date.toISOString();\r\n\r\nexport const trackByHourSegment = (index: number, segment: SchedulerViewHourSegment) =>\r\n    segment.date.toISOString();\r\n\r\n\r\nexport function getMinimumEventHeightInMinutes(hourSegments: number, hourSegmentHeight: number) {\r\n    return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * hourSegmentHeight;\r\n}\r\n\r\nexport function getDefaultEventEnd(dateAdapter: DateAdapter, event: CalendarSchedulerEvent, minimumMinutes: number): Date {\r\n    return event.end ? event.end : dateAdapter.addMinutes(event.start, minimumMinutes);\r\n}\r\n\r\nexport function roundToNearest(amount: number, precision: number): number {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\n\r\nexport function getMinutesMoved(movedY: number, hourSegments: number, hourSegmentHeight: number, eventSnapSize: number): number {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\n\r\nexport function isDraggedWithinPeriod(newStart: Date, newEnd: Date, period: SchedulerViewPeriod): boolean {\r\n    const end = newEnd || newStart;\r\n    return (\r\n        (period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end)\r\n    );\r\n}\r\n\r\nexport function shouldFireDroppedEvent(dropEvent: { dropData?: { event?: CalendarSchedulerEvent; calendarId?: symbol } }, date: Date, calendarId: symbol): boolean {\r\n    return (\r\n        dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        dropEvent.dropData.calendarId !== calendarId\r\n    );\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    getSchedulerViewHourGrid,\r\n    GetSchedulerViewHourGridArgs,\r\n    getSchedulerViewDays,\r\n    GetSchedulerViewDaysArgs,\r\n    getSchedulerView,\r\n    GetSchedulerViewArgs\r\n} from './calendar-scheduler-utils';\r\nimport { DayViewHour } from 'calendar-utils';\r\nimport { SchedulerView, SchedulerViewDay } from '../models';\r\nimport { DateAdapter } from 'angular-calendar';\r\n\r\n@Injectable()\r\nexport class CalendarSchedulerUtils {\r\n    constructor(private dateAdapter: DateAdapter) { }\r\n\r\n    getSchedulerViewHourGrid(args: GetSchedulerViewHourGridArgs): DayViewHour[] {\r\n        return getSchedulerViewHourGrid(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerViewDays(args: GetSchedulerViewDaysArgs): SchedulerViewDay[] {\r\n        return getSchedulerViewDays(this.dateAdapter, args);\r\n    }\r\n\r\n    getSchedulerView(args: GetSchedulerViewArgs): SchedulerView {\r\n        return getSchedulerView(this.dateAdapter, args);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ChangeDetectorRef,\r\n    OnChanges,\r\n    OnInit,\r\n    OnDestroy,\r\n    LOCALE_ID,\r\n    Inject,\r\n    TemplateRef,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n    DayViewHour\r\n} from 'calendar-utils';\r\nimport {\r\n    isBefore\r\n} from 'date-fns';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\nimport { CalendarDragHelper } from 'angular-calendar/esm2015/modules/common/calendar-drag-helper.provider';\r\nimport { CalendarResizeHelper } from 'angular-calendar/esm2015/modules/common/calendar-resize-helper.provider';\r\nimport { SchedulerConfig } from './scheduler-config';\r\nimport { CalendarEventTimesChangedEventType, DateAdapter } from 'angular-calendar';\r\nimport { DragMoveEvent, DragEndEvent, DropEvent } from 'angular-draggable-droppable';\r\n\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewDay,\r\n    SchedulerViewHour,\r\n    SchedulerViewHourSegment,\r\n    SchedulerEventTimesChangedEvent,\r\n    SchedulerViewEvent,\r\n    SchedulerView\r\n} from './models';\r\nimport {\r\n    shouldFireDroppedEvent,\r\n    isDraggedWithinPeriod,\r\n    roundToNearest,\r\n    getMinutesMoved,\r\n    trackByHourColumn,\r\n    trackByDayOrEvent,\r\n    trackByHour,\r\n    trackByHourSegment,\r\n    getMinimumEventHeightInMinutes,\r\n    getDefaultEventEnd\r\n} from '../common/utils';\r\nimport {\r\n    DEFAULT_HOUR_SEGMENTS,\r\n    DEFAULT_HOUR_SEGMENT_HEIGHT_PX,\r\n    DEFAULT_EVENT_WIDTH_PERCENT,\r\n    MINUTES_IN_HOUR\r\n} from './utils/calendar-scheduler-utils';\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\n/**\r\n *  [ngClass]=\"getPositioningClasses(event)\"\r\n *\r\n *  [style.top.px]=\"event.top\"\r\n *  [style.height.px]=\"event.height\"\r\n *  [style.left.%]=\"event.left\"\r\n *  [style.width.%]=\"event.width\"\r\n *\r\n *  DRAG & DROP & RESIZE -> https://github.com/mattlewis92/angular-calendar/blob/master/projects/angular-calendar/src/modules/week/calendar-week-view.component.ts\r\n *  FLEXBOX -> https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\n */\r\n@Component({\r\n    selector: 'calendar-scheduler-view',\r\n    template: `\r\n        <div class=\"cal-scheduler-view\">\r\n            <calendar-scheduler-header\r\n                [days]=\"days\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"headerTemplate\"\r\n                (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\">\r\n            </calendar-scheduler-header>\r\n\r\n            <div class=\"cal-scheduler\" #calendarContainer>\r\n                <div class=\"cal-scheduler-hour-rows aside\">\r\n                    <div class=\"cal-scheduler-hour align-center horizontal\" *ngFor=\"let hour of hours; trackBy:trackByHour\">\r\n                      <div class=\"cal-scheduler-time\">\r\n                        <div class=\"cal-scheduler-time-segment\" *ngFor=\"let segment of hour.segments\"\r\n                            [style.height.px]=\"hourSegmentHeight\">\r\n                            {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"cal-scheduler-cols aside\" #dayColumns\r\n                    [class.cal-resize-active]=\"resizes.size > 0\"\r\n                    mwlDroppable\r\n                    (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\r\n                    (dragLeave)=\"eventDragEnter = eventDragEnter - 1\">\r\n                    <div class=\"cal-scheduler-col\"\r\n                        *ngFor=\"let day of view.days; trackBy:trackByHourColumn\"\r\n                        [ngClass]=\"day?.cssClass\"\r\n                        [style.backgroundColor]=\"day.backgroundColor\">\r\n                        <div #eventContainer\r\n                            class=\"cal-scheduler-event-container\"\r\n                            *ngFor=\"let event of day.events; trackBy:trackByDayOrEvent\"\r\n                            [ngClass]=\"event.event?.cssClass\"\r\n                            [hidden]=\"event.height === 0 && event.width === 0\"\r\n                            [style.top.px]=\"event.top\"\r\n                            [style.height.px]=\"event.height\"\r\n                            [style.left.%]=\"event.left\"\r\n                            [style.width.%]=\"event.width\"\r\n\r\n                            mwlResizable\r\n                            [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth, top: eventSnapSize || hourSegmentHeight, bottom: eventSnapSize || hourSegmentHeight}\"\r\n                            [validateResize]=\"validateResize\"\r\n                            [allowNegativeResizes]=\"true\"\r\n                            (resizeStart)=\"resizeStarted(dayColumns, event, $event)\"\r\n                            (resizing)=\"resizing(event, $event)\"\r\n                            (resizeEnd)=\"resizeEnded(event)\"\r\n\r\n                            mwlDraggable\r\n                            dragActiveClass=\"cal-drag-active\"\r\n                            [dropData]=\"{event: event.event, calendarId: calendarId}\"\r\n                            [dragAxis]=\"{\r\n                                x: event.event.draggable && resizes.size === 0,\r\n                                y: event.event.draggable && resizes.size === 0\r\n                            }\"\r\n                            [dragSnapGrid]=\"snapDraggedEvents ? {x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight} : {}\"\r\n                            [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                            [validateDrag]=\"validateDrag\"\r\n                            (dragPointerDown)=\"dragStarted(dayColumns, eventContainer, event)\"\r\n                            (dragging)=\"dragMove(event, $event)\"\r\n                            (dragEnd)=\"dragEnded(event, $event, dayColumnWidth, true)\">\r\n\r\n                            <div *ngIf=\"event.event?.resizable?.beforeStart && !event.startsBeforeDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    left: true,\r\n                                    top: true\r\n                                }\">\r\n                            </div>\r\n                            <calendar-scheduler-event\r\n                                [day]=\"day\"\r\n                                [event]=\"event\"\r\n                                [showContent]=\"showEventContent && event.height >= 75\"\r\n                                [showActions]=\"showEventActions\"\r\n                                [showStatus]=\"showEventStatus\"\r\n                                [customTemplate]=\"eventTemplate\"\r\n                                [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                                (eventClicked)=\"eventClicked.emit($event)\">\r\n                            </calendar-scheduler-event>\r\n                            <div *ngIf=\"event.event?.resizable?.afterEnd && !event.endsAfterDay\"\r\n                                class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                                mwlResizeHandle\r\n                                [resizeEdges]=\"{\r\n                                    right: true,\r\n                                    bottom: true\r\n                                }\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"cal-scheduler-hour\"\r\n                            *ngFor=\"let hour of day.hours; let i = index; trackBy:trackByHour\"\r\n                            [class.cal-even]=\"i % 2 === 0\"\r\n                            [class.cal-odd]=\"i % 2 === 1\"\r\n                            [ngClass]=\"hour.cssClass\"\r\n                            [style.backgroundColor]=\"hour.backgroundColor\"\r\n                            (mwlClick)=\"hourClicked.emit({hour: hour})\"\r\n                            [class.cal-past]=\"day.isPast\"\r\n                            [class.cal-today]=\"day.isToday\"\r\n                            [class.cal-future]=\"day.isFuture\"\r\n                            [class.cal-weekend]=\"day.isWeekend\"\r\n                            [class.cal-in-month]=\"day.inMonth\"\r\n                            [class.cal-out-month]=\"!day.inMonth\">\r\n                            <div class=\"cal-scheduler-hour-segments\">\r\n                                <calendar-scheduler-hour-segment\r\n                                    *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\r\n                                    [day]=\"day\"\r\n                                    [segment]=\"segment\"\r\n                                    [locale]=\"locale\"\r\n                                    [customTemplate]=\"cellTemplate\"\r\n                                    [hourSegmentHeight]=\"hourSegmentHeight\"\r\n                                    [showHour]=\"showSegmentHour\"\r\n                                    (segmentClicked)=\"segmentClicked.emit($event)\"\r\n                                    mwlDroppable\r\n                                    [dragOverClass]=\"!dragActive || !snapDraggedEvents ? 'cal-drag-over' : 'null'\"\r\n                                    dragActiveClass=\"cal-drag-active\"\r\n                                    (drop)=\"eventDropped($event, segment.date)\">\r\n                                </calendar-scheduler-hour-segment>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./calendar-scheduler-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarSchedulerViewComponent implements OnChanges, OnInit, OnDestroy {\r\n    /**\r\n     * The current view date\r\n     */\r\n    @Input() viewDate: Date;\r\n\r\n    /**\r\n     * An array of events to display on view\r\n     */\r\n    @Input() events: CalendarSchedulerEvent[] = [];\r\n\r\n    /**\r\n     * The number of segments in an hour. Must be one of 1, 2, 4, 6\r\n     */\r\n    @Input() hourSegments: 1 | 2 | 4 | 6 = DEFAULT_HOUR_SEGMENTS;\r\n\r\n    /**\r\n    * The height in pixels of each hour segment\r\n    */\r\n    @Input() hourSegmentHeight: number = DEFAULT_HOUR_SEGMENT_HEIGHT_PX;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n     */\r\n    @Input() excludeDays: number[] = [];\r\n\r\n    /**\r\n     * Specify if the first day of current scheduler view has to be today or the first day of the week\r\n     */\r\n    @Input() startsWithToday: boolean = false;\r\n\r\n    /**\r\n     * Specify if content must be shown or not\r\n     */\r\n    @Input() showEventContent: boolean = true;\r\n\r\n    /**\r\n     * Specify if actions must be shown or not\r\n     */\r\n    @Input() showEventActions: boolean = true;\r\n\r\n    /**\r\n     * Specify if status must be shown or not\r\n     */\r\n    @Input() showEventStatus: boolean = true;\r\n\r\n    /**\r\n     * Specify if hour must be shown on segment or not\r\n     */\r\n    @Input() showSegmentHour: boolean = false;\r\n\r\n    /**\r\n     * A function that will be called before each cell is rendered. The first argument will contain the calendar (day, hour or segment) cell.\r\n     * If you add the `cssClass` property to the cell it will add that class to the cell in the template\r\n     */\r\n    @Input() dayModifier: Function;\r\n    @Input() hourModifier: Function;\r\n    @Input() segmentModifier: Function;\r\n    @Input() eventModifier: Function;\r\n\r\n    /**\r\n     * An observable that when emitted on will re-render the current view\r\n     */\r\n    @Input() refresh: Subject<any>;\r\n\r\n    /**\r\n     * The locale used to format dates\r\n     */\r\n    @Input() locale: string;\r\n\r\n    /**\r\n     * The grid size to snap resizing and dragging of events to\r\n     */\r\n    @Input() eventSnapSize: number = this.hourSegmentHeight;\r\n\r\n    /**\r\n    * Whether to snap events to a grid when dragging\r\n    */\r\n    @Input() snapDraggedEvents: boolean = true;\r\n\r\n    /**\r\n     * The start number of the week\r\n     */\r\n    @Input() weekStartsOn: number;\r\n\r\n    /**\r\n     * A custom template to use to replace the header\r\n     */\r\n    @Input() headerTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use to replace the day cell\r\n     */\r\n    @Input() cellTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for week view events\r\n     */\r\n    @Input() eventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for event titles\r\n     */\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * A custom template to use for all day events\r\n     */\r\n    @Input() allDayEventTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\r\n     */\r\n    @Input() weekendDays: number[];\r\n\r\n    /**\r\n     * The day start hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayStartHour: number = 0;\r\n\r\n    /**\r\n     * The day start minutes. Must be 0-59\r\n     */\r\n    @Input() dayStartMinute: number = 0;\r\n\r\n    /**\r\n     * The day end hours in 24 hour time. Must be 0-23\r\n     */\r\n    @Input() dayEndHour: number = 23;\r\n\r\n    /**\r\n     * The day end minutes. Must be 0-59\r\n     */\r\n    @Input() dayEndMinute: number = 59;\r\n\r\n    /**\r\n     * The width in pixels of each event on the view\r\n     */\r\n    @Input() eventWidthPercent: number = DEFAULT_EVENT_WIDTH_PERCENT;\r\n\r\n    /**\r\n     * Called when a header week day is clicked\r\n     */\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * Called when the hour is clicked\r\n     */\r\n    @Output() hourClicked: EventEmitter<{ hour: SchedulerViewHour }> = new EventEmitter<{ hour: SchedulerViewHour }>();\r\n\r\n    /**\r\n     * Called when the segment is clicked\r\n     */\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    /**\r\n     * Called when the event is clicked\r\n     */\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    /**\r\n     * Called when an event is resized or dragged and dropped\r\n     */\r\n    @Output() eventTimesChanged: EventEmitter<SchedulerEventTimesChangedEvent> = new EventEmitter<SchedulerEventTimesChangedEvent>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    view: SchedulerView;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    refreshSubscription: Subscription;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    days: SchedulerViewDay[];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    hours: DayViewHour[] = [];\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    // resizes: Map<CalendarSchedulerEvent, SchedulerResizeEvent> = new Map();\r\n    resizes: Map<CalendarSchedulerEvent, ResizeEvent> = new Map();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDragEnter: number = 0;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragActive: boolean = false;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateResize: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    validateDrag: (args: any) => boolean;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dayColumnWidth: number;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    calendarId: symbol = Symbol('angular calendar scheduler view id');\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourColumn = trackByHourColumn;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByDayOrEvent = trackByDayOrEvent;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHour = trackByHour;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    trackByHourSegment = trackByHourSegment;\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(private cdr: ChangeDetectorRef, @Inject(LOCALE_ID) locale: string, private config: SchedulerConfig,\r\n        private utils: CalendarSchedulerUtils, private dateAdapter: DateAdapter) {\r\n        this.locale = this.config.locale || locale;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\r\n            this.refreshHeader();\r\n        }\r\n\r\n        if (changes.viewDate ||\r\n            changes.events ||\r\n            changes.dayStartHour ||\r\n            changes.dayEndHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndMinute ||\r\n            changes.excludeDays ||\r\n            changes.eventWidth\r\n        ) {\r\n            this.refreshHourGrid();\r\n            this.refreshBody();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getPositioningClasses(day: SchedulerViewDay, event: CalendarSchedulerEvent): string {\r\n        const classes: string[] = [\r\n            this.getDayClass(event.start),\r\n            this.getTimeClass(day.date, event),\r\n            this.getLengthClass(day.date, event)\r\n        ];\r\n        return classes.join(' ');\r\n    }\r\n\r\n    private getDayClass(date: Date): string {\r\n        return '';\r\n    }\r\n\r\n    private getTimeClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            let hours: number = event.start.getHours();\r\n            if (this.dayStartHour > 0) { hours = event.start.getHours() - this.dayStartHour; }\r\n            const hoursString: string = hours < 10 ? `0${hours}` : `${hours}`;\r\n            const minutesString: string = event.start.getMinutes() < 10 ? `0${event.start.getMinutes()}` : `${event.start.getMinutes()}`;\r\n            return `time${hoursString}${minutesString}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            return `time0000`;\r\n        }\r\n    }\r\n\r\n    private getLengthClass(date: Date, event: CalendarSchedulerEvent): string {\r\n        if (this.dateAdapter.isSameDay(date, event.start)) {\r\n            const durationInMinutes: number = this.dateAdapter.differenceInMinutes(event.end, event.start);\r\n            const leftToEndOfDay: number = this.dateAdapter.differenceInMinutes(this.dateAdapter.setMinutes(this.dateAdapter.setHours(event.start, this.dayEndHour + 1), 0), event.start);\r\n            return leftToEndOfDay > durationInMinutes ? `length${durationInMinutes}` : `length${leftToEndOfDay}`;\r\n        } else if (isBefore(event.start, this.dateAdapter.startOfDay(date))) {\r\n            let leftDurationInMinutes: number = 0;\r\n            if (this.dateAdapter.isSameDay(date, event.end)) {\r\n                leftDurationInMinutes = this.dateAdapter.differenceInMinutes(event.end, this.dateAdapter.startOfDay(date));\r\n                if (this.dayStartHour > 0) { leftDurationInMinutes = (event.end.getHours() - this.dayStartHour) * MINUTES_IN_HOUR; }\r\n            } else {\r\n                leftDurationInMinutes = ((this.dayEndHour + 1) - this.dayStartHour) * MINUTES_IN_HOUR;\r\n            }\r\n            return `length${leftDurationInMinutes}`;\r\n        }\r\n    }\r\n\r\n\r\n    private refreshHourGrid(): void {\r\n        this.hours = this.utils.getSchedulerViewHourGrid({\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            }\r\n        });\r\n    }\r\n\r\n    private refreshHeader(): void {\r\n        this.days = this.utils.getSchedulerViewDays({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays\r\n        });\r\n    }\r\n\r\n    private refreshBody(events?: CalendarSchedulerEvent[]): void {\r\n        this.view = this.getSchedulerView(events || this.events);\r\n\r\n        this.view.days.forEach((day: SchedulerViewDay) => {\r\n            day.events.forEach((event: SchedulerViewEvent) => {\r\n                this.scaleOverlappingEvents(event.event.start, event.event.end, day.events);\r\n            });\r\n        });\r\n\r\n        if (this.dayModifier) {\r\n            this.days.forEach(day => this.dayModifier(day));\r\n        }\r\n\r\n        if (this.dayModifier || this.hourModifier || this.segmentModifier) {\r\n            this.view.days.forEach(day => {\r\n                if (this.dayModifier) {\r\n                    this.dayModifier(day);\r\n                }\r\n                day.hours.forEach((hour: SchedulerViewHour) => {\r\n                    if (this.hourModifier) {\r\n                        this.hourModifier(hour);\r\n                    }\r\n                    hour.segments.forEach((segment: SchedulerViewHourSegment) => {\r\n                        if (this.segmentModifier) {\r\n                            this.segmentModifier(segment);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.eventModifier) {\r\n            this.events.forEach(event => this.eventModifier(event));\r\n        }\r\n    }\r\n\r\n    private refreshAll(): void {\r\n        this.refreshHeader();\r\n        this.refreshHourGrid();\r\n        this.refreshBody();\r\n    }\r\n\r\n\r\n    private getSchedulerView(events: CalendarSchedulerEvent[]): SchedulerView {\r\n        return this.utils.getSchedulerView({\r\n            events: events,\r\n            viewDate: this.viewDate,\r\n            hourSegments: this.hourSegments,\r\n            weekStartsOn: this.weekStartsOn,\r\n            startsWithToday: this.startsWithToday,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute\r\n            },\r\n            excluded: this.excludeDays,\r\n            eventWidth: this.eventWidthPercent,\r\n            hourSegmentHeight: this.hourSegmentHeight\r\n        });\r\n    }\r\n\r\n    private scaleOverlappingEvents(startTime: Date, endTime: Date, events: SchedulerViewEvent[]): void {\r\n        let newStartTime: Date = startTime;\r\n        let newEndTime: Date = endTime;\r\n        const overlappingEvents: SchedulerViewEvent[] = [];\r\n        let maxLeft = 0;\r\n        events.forEach((event: SchedulerViewEvent) => {\r\n            if (event.isProcessed) {\r\n                return;\r\n            }\r\n            if (event.event.start < startTime && event.event.end > startTime) {\r\n                newStartTime = event.event.start;\r\n            } else if (event.event.end > endTime && event.event.start < endTime) {\r\n                newEndTime = event.event.end;\r\n            } else if (event.event.end <= endTime && event.event.start >= startTime) {\r\n                // Nothing, but remove condition and add equals to above two for overlapping effect\r\n            } else {\r\n                return;\r\n            }\r\n            if (event.left > maxLeft) {\r\n                maxLeft = event.left;\r\n            }\r\n            overlappingEvents.push(event);\r\n        });\r\n        if (startTime === newStartTime && endTime === newEndTime) {\r\n            const divisorFactor = Math.floor(maxLeft / this.eventWidthPercent) + 1;\r\n            overlappingEvents.forEach((event: SchedulerViewEvent) => {\r\n                event.isProcessed = true;\r\n                event.left /= divisorFactor;\r\n                event.width /= divisorFactor;\r\n            });\r\n        } else {\r\n            this.scaleOverlappingEvents(newStartTime, newEndTime, events);\r\n        }\r\n    }\r\n\r\n\r\n    //#region RESIZE\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeStarted(eventsContainer: HTMLElement, event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n\r\n        const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(eventsContainer);\r\n        this.validateResize = ({ rectangle }) => resizeHelper.validateResize({ rectangle });\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizing(event: SchedulerViewEvent, resizeEvent: ResizeEvent): void {\r\n        this.resizes.set(event.event, resizeEvent);\r\n        const adjustedEvents = new Map<CalendarSchedulerEvent, CalendarSchedulerEvent>();\r\n\r\n        const tempEvents = [...this.events];\r\n\r\n        this.resizes.forEach((lastResizeEvent, ev) => {\r\n            const newEventDates = this.getResizedEventDates(\r\n                ev,\r\n                lastResizeEvent\r\n            );\r\n            const adjustedEvent = { ...ev, ...newEventDates };\r\n            adjustedEvents.set(adjustedEvent, ev);\r\n            const eventIndex = tempEvents.indexOf(ev);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents);\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    resizeEnded(event: SchedulerViewEvent): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        const lastResizeEvent = this.resizes.get(event.event);\r\n        this.resizes.delete(event.event);\r\n        const newEventDates = this.getResizedEventDates(\r\n            event.event,\r\n            lastResizeEvent\r\n        );\r\n        this.eventTimesChanged.emit(\r\n            <SchedulerEventTimesChangedEvent>{\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: event.event,\r\n                type: CalendarEventTimesChangedEventType.Resize\r\n            });\r\n    }\r\n\r\n    private getResizedEventDates(event: CalendarSchedulerEvent, resizeEvent: ResizeEvent): { start: Date, end: Date} {\r\n        const minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);\r\n        const newEventDates = {\r\n            start: event.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, event, minimumEventHeight)\r\n        };\r\n        const { end, ...eventWithoutEnd } = event;\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)\r\n        };\r\n\r\n        if (resizeEvent.edges.left) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.left / this.dayColumnWidth\r\n            );\r\n            const newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.right) {\r\n            const daysDiff = Math.round(\r\n                +resizeEvent.edges.right / this.dayColumnWidth\r\n            );\r\n            const newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n\r\n        if (resizeEvent.edges.top) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.top as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            } else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        } else if (resizeEvent.edges.bottom) {\r\n            const precision: number = this.eventSnapSize || this.hourSegmentHeight;\r\n            const draggedInPixelsSnapSize = Math.round((resizeEvent.edges.bottom as number) / precision) * precision;\r\n\r\n            const pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\r\n            const minutesMoved = draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            } else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region DRAG & DROP\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent: DropEvent<{ event?: CalendarSchedulerEvent; calendarId?: symbol }>, date: Date): void {\r\n        if (shouldFireDroppedEvent(dropEvent, date, this.calendarId)) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    type: CalendarEventTimesChangedEventType.Drop,\r\n                    event: dropEvent.dropData.event,\r\n                    newStart: date,\r\n                    newEnd: null\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainer: HTMLElement, eventContainer: HTMLElement, event?: SchedulerViewEvent): void {\r\n        this.dayColumnWidth = Math.floor(eventsContainer.offsetWidth / this.days.length);\r\n        const dragHelper: CalendarDragHelper = new CalendarDragHelper(\r\n            eventsContainer,\r\n            eventContainer\r\n        );\r\n        this.validateDrag = ({ x, y }) =>\r\n            this.resizes.size === 0 && dragHelper.validateDrag({ x, y, snapDraggedEvents: this.snapDraggedEvents });\r\n            this.dragActive = true;\r\n            this.eventDragEnter = 0;\r\n            if (!this.snapDraggedEvents && event) {\r\n                this.view.days.forEach((day: SchedulerViewDay) => {\r\n                const linkedEvent = day.events.find(ev => ev.event === event.event && ev !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n          }\r\n          this.cdr.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(event: SchedulerViewEvent, dragEvent: DragMoveEvent) {\r\n        if (this.snapDraggedEvents) {\r\n            const newEventTimes = this.getDragMovedEventTimes(\r\n                event,\r\n                dragEvent,\r\n                this.dayColumnWidth,\r\n                true\r\n            );\r\n            const originalEvent = event.event;\r\n            const adjustedEvent = { ...originalEvent, ...newEventTimes };\r\n            const tempEvents = this.events.map(ev => {\r\n                if (ev === originalEvent) {\r\n                    return adjustedEvent;\r\n                }\r\n                return ev;\r\n            });\r\n\r\n            this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]));\r\n        }\r\n    }\r\n\r\n    dragEnded(event: SchedulerViewEvent, dragEndEvent: DragEndEvent, dayWidth: number, useY = false): void {\r\n        this.view = this.getSchedulerView(this.events);\r\n        this.dragActive = false;\r\n        const { start, end } = this.getDragMovedEventTimes(event, dragEndEvent, dayWidth, useY);\r\n        if (this.eventDragEnter > 0 && isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.eventTimesChanged.emit(\r\n                <SchedulerEventTimesChangedEvent>{\r\n                    newStart: start,\r\n                    newEnd: end,\r\n                    event: event.event,\r\n                    type: CalendarEventTimesChangedEventType.Drag\r\n                });\r\n        }\r\n    }\r\n\r\n    private getDragMovedEventTimes(event: SchedulerViewEvent, dragEndEvent: DragEndEvent | DragMoveEvent, dayWidth: number, useY: boolean): { start: Date, end: Date} {\r\n        const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\r\n        const minutesMoved = useY ?\r\n            getMinutesMoved(\r\n                dragEndEvent.y,\r\n                this.hourSegments,\r\n                this.hourSegmentHeight,\r\n                this.eventSnapSize)\r\n            : 0;\r\n\r\n        const start = this.dateAdapter.addMinutes(\r\n            this.dateAdapter.addDays(event.event.start, daysDragged),\r\n            minutesMoved\r\n        );\r\n        let end: Date;\r\n        if (event.event.end) {\r\n            end = this.dateAdapter.addMinutes(\r\n                this.dateAdapter.addDays(event.event.end, daysDragged),\r\n                minutesMoved\r\n            );\r\n        }\r\n\r\n        return { start, end };\r\n    }\r\n\r\n    private restoreOriginalEvents(tempEvents: CalendarSchedulerEvent[], adjustedEvents: Map<CalendarSchedulerEvent, CalendarSchedulerEvent>) {\r\n        this.refreshBody(tempEvents);\r\n        const adjustedEventsArray = tempEvents.filter(event => adjustedEvents.has(event));\r\n        this.view.days.forEach(day => {\r\n            adjustedEventsArray.forEach(adjustedEvent => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = day.events.find(ev => ev.event === adjustedEvent);\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                } else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    day.events.push({\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n      }\r\n\r\n    //#endregion\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    SchedulerViewHourSegment,\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-hour-segment',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-hour-segment\"\r\n                [title]=\"title\"\r\n                [ngClass]=\"segment?.cssClass\"\r\n                [class.has-events]=\"segment.events.length > 0\"\r\n                [class.cal-disabled]=\"segment.isDisabled\"\r\n                [style.backgroundColor]=\"segment.backgroundColor\"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                (mwlClick)=\"onSegmentClick($event, segment)\">\r\n                <div class=\"cal-scheduler-time\" *ngIf=\"showHour\">\r\n                    {{ segment.date | calendarDate:'dayViewHour':locale }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                segment: segment,\r\n                locale: locale,\r\n                hourSegmentHeight: hourSegmentHeight,\r\n                showHour: showHour,\r\n                segmentClicked: segmentClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHourSegmentComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() segment: SchedulerViewHourSegment;\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() hourSegmentHeight: number = 58;\r\n\r\n    @Input() showHour: boolean = false;\r\n\r\n    @Output() segmentClicked: EventEmitter<{ segment: SchedulerViewHourSegment }> = new EventEmitter<{ segment: SchedulerViewHourSegment }>();\r\n\r\n    ngOnInit(): void {\r\n        this.title = this.title || moment(this.segment.date).format('dddd L, LT');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseEnter(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onMouseLeave(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment, event: CalendarSchedulerEvent): void {\r\n        if (!event.isDisabled && !segment.isDisabled) {\r\n            // Maybe do something\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onSegmentClick(mouseEvent: MouseEvent, segment: SchedulerViewHourSegment): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        if (segment.events.length === 0) {\r\n            this.segmentClicked.emit({ segment: segment });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SchedulerViewDay } from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-header',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-headers\">\r\n                <div class=\"cal-header aside cal-header-clock align-center\">\r\n                    <i class=\"material-icons md-32\" style=\"margin:auto;\">schedule</i>\r\n                </div>\r\n\r\n                <div class=\"cal-header-cols aside\">\r\n                    <div\r\n                        class=\"cal-header\"\r\n                        *ngFor=\"let day of days\"\r\n                        [class.cal-past]=\"day.isPast\"\r\n                        [class.cal-today]=\"day.isToday\"\r\n                        [class.cal-future]=\"day.isFuture\"\r\n                        [class.cal-weekend]=\"day.isWeekend\"\r\n                        (mwlClick)=\"onDayHeaderClick($event, day)\">\r\n                        <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\r\n                        <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                days: days,\r\n                locale: locale,\r\n                dayHeaderClicked: dayHeaderClicked\r\n            }\">\r\n        </ng-template>\r\n    `\r\n})\r\nexport class CalendarSchedulerHeaderComponent {\r\n\r\n    @Input() days: SchedulerViewDay[];\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Output() dayHeaderClicked: EventEmitter<{ day: SchedulerViewDay }> = new EventEmitter<{ day: SchedulerViewDay }>();\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onDayHeaderClick(mouseEvent: MouseEvent, day: SchedulerViewDay): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        this.dayHeaderClicked.emit({ day: day });\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, TemplateRef, OnInit } from '@angular/core';\r\nimport {\r\n    SchedulerViewDay,\r\n    CalendarSchedulerEvent,\r\n    SchedulerViewEvent\r\n} from './models';\r\n\r\n// WORKAROUND: https://github.com/dherges/ng-packagr/issues/217#issuecomment-339460255\r\nimport * as momentImported from 'moment';\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div class=\"cal-scheduler-event\"\r\n                [title]=\"title\"\r\n                [class.cal-disabled]=\"event.event.isDisabled\"\r\n                [class.cal-not-clickable]=\"!event.event.isClickable\"\r\n                [class.cal-draggable]=\"event.event.draggable\"\r\n                [class.cal-starts-before-day]=\"event.startsBeforeDay\"\r\n                [class.cal-ends-after-day]=\"event.endsAfterDay\"\r\n                [style.backgroundColor]=\"event.event.color?.secondary\"\r\n                [style.borderColor]=\"event.event.color?.primary\"\r\n                (mwlClick)=\"onEventClick($event, event.event)\"\r\n                (mouseenter)=\"onMouseEnter()\"\r\n                (mouseleave)=\"onMouseLeave()\">\r\n                <calendar-scheduler-event-title\r\n                    view=\"week\"\r\n                    [event]=\"event.event\"\r\n                    [showStatus]=\"showStatus\"\r\n                    [showContent]=\"showContent\"\r\n                    [showActions]=\"showActions\"\r\n                    [customTemplate]=\"eventTitleTemplate\">\r\n                </calendar-scheduler-event-title>\r\n                <calendar-scheduler-event-content\r\n                    *ngIf=\"showContent\"\r\n                    [event]=\"event.event\">\r\n                </calendar-scheduler-event-content>\r\n                <calendar-scheduler-event-actions\r\n                    *ngIf=\"showActions && showContent && (event.event.isClickable || event.event.isDisabled)\"\r\n                    [event]=\"event.event\">\r\n                </calendar-scheduler-event-actions>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                title: title,\r\n                day: day,\r\n                event: event,\r\n                showContent: showContent,\r\n                showActions: showActions,\r\n                showStatus: showStatus,\r\n                eventTitleTemplate: eventTitleTemplate,\r\n                eventClicked: eventClicked\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        '[style.height.%]': '100'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventComponent implements OnInit {\r\n    @Input() title: string;\r\n\r\n    @Input() day: SchedulerViewDay;\r\n\r\n    @Input() event: SchedulerViewEvent;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n\r\n    @Input() eventTitleTemplate: TemplateRef<any>;\r\n\r\n    @Output() eventClicked: EventEmitter<{ event: CalendarSchedulerEvent }> = new EventEmitter<{ event: CalendarSchedulerEvent }>();\r\n\r\n    constructor() {   }\r\n\r\n    public ngOnInit(): void {\r\n        this.title = this.title || `${this.event.event.title}, ${moment(this.event.event.start).format('dddd L, LT')}`;\r\n    }\r\n\r\n    onMouseEnter(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    onMouseLeave(): void {\r\n        // Maybe do something\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onEventClick(mouseEvent: MouseEvent, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n        if (event.isClickable) {\r\n            this.eventClicked.emit({ event: event });\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-title',\r\n    template: `\r\n        <ng-template #defaultTemplate>\r\n            <div\r\n                class=\"cal-scheduler-event-title\"\r\n                [innerHTML]=\"event.title | schedulerEventTitle:view:event\">\r\n            </div>\r\n            <calendar-scheduler-event-actions\r\n                *ngIf=\"showActions && !showContent && (event.isClickable || event.isDisabled)\"\r\n                class=\"no-content-actions\"\r\n                [event]=\"event\">\r\n            </calendar-scheduler-event-actions>\r\n            <div *ngIf=\"event.status && showStatus\"\r\n                class=\"cal-scheduler-event-status\"\r\n                [class.ok]=\"event.status === 'ok'\"\r\n                [class.warning]=\"event.status === 'warning'\"\r\n                [class.danger]=\"event.status === 'danger'\">\r\n            </div>\r\n        </ng-template>\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n            [ngTemplateOutletContext]=\"{\r\n                view: view,\r\n                event: event,\r\n                showStatus: showStatus,\r\n                showContent: showContent,\r\n                showActions: showActions\r\n            }\">\r\n        </ng-template>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-title-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventTitleComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    @Input() view: string;\r\n\r\n    @Input() showStatus: boolean = true;\r\n\r\n    @Input() showContent: boolean = true;\r\n\r\n    @Input() showActions: boolean = true;\r\n\r\n    @Input() customTemplate: TemplateRef<any>;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-content',\r\n    template: `\r\n        <div *ngIf=\"event.content\"\r\n            class=\"cal-scheduler-event-content\"\r\n            [innerHTML]=\"event.content\">\r\n        </div>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-content-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventContentComponent {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n    CalendarSchedulerEvent,\r\n    CalendarSchedulerEventAction\r\n} from './models';\r\n\r\n@Component({\r\n    selector: 'calendar-scheduler-event-actions',\r\n    template: `\r\n        <span *ngIf=\"event.actions\"\r\n            class=\"cal-scheduler-event-actions\">\r\n            <a\r\n                class=\"cal-scheduler-event-action\"\r\n                href=\"javascript:;\"\r\n                *ngFor=\"let action of actions\"\r\n                (mwlClick)=\"onActionClick($event, action, event)\"\r\n                [ngClass]=\"action.cssClass\"\r\n                [innerHtml]=\"action.label\"\r\n                [title]=\"action.title\">\r\n            </a>\r\n        </span>\r\n    `,\r\n    host: {\r\n        'class': 'cal-scheduler-event-actions-container'\r\n    }\r\n})\r\nexport class CalendarSchedulerEventActionsComponent implements OnInit {\r\n\r\n    @Input() event: CalendarSchedulerEvent;\r\n\r\n    public actions: CalendarSchedulerEventAction[] = [];\r\n\r\n    public ngOnInit(): void {\r\n        this.actions = this.event.isDisabled ?\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'disabled') :\r\n            this.event.actions.filter((a: CalendarSchedulerEventAction) => !a.when || a.when === 'enabled');\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     */\r\n    onActionClick(mouseEvent: MouseEvent, action: CalendarSchedulerEventAction, event: CalendarSchedulerEvent): void {\r\n        if (mouseEvent.stopPropagation) {\r\n            mouseEvent.stopPropagation();\r\n        }\r\n\r\n        action.onClick(event);\r\n    }\r\n}\r\n","import { CalendarEventTitleFormatter } from 'angular-calendar';\r\n\r\nexport class SchedulerEventTitleFormatter extends CalendarEventTitleFormatter {\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CalendarSchedulerEvent } from '../models';\r\nimport { SchedulerEventTitleFormatter } from '../formatters/scheduler-event-title-formatter.provider';\r\n\r\n@Pipe({\r\n  name: 'schedulerEventTitle'\r\n})\r\nexport class SchedulerEventTitlePipe implements PipeTransform {\r\n  constructor(private schedulerEventTitle: SchedulerEventTitleFormatter) {}\r\n\r\n  transform(title: string, titleType: string, event: CalendarSchedulerEvent): string {\r\n    return this.schedulerEventTitle[titleType](event);\r\n  }\r\n}\r\n","import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n\r\nexport class SchedulerDateFormatter extends CalendarDateFormatter {\r\n\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    public dayViewHour({ date, locale }: DateFormatterParams): string {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);\r\n    }\r\n\r\n    public weekViewTitle({ date, locale }: DateFormatterParams): string {\r\n        // http://generatedcontent.org/post/59403168016/esintlapi\r\n        const year: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(date);\r\n        const month: string = new Intl.DateTimeFormat(locale, { month: 'short' }).format(date);\r\n\r\n        // var firstDay: number = date.getDate() - date.getDay() + 1; // First day is the day of the month - the day of the week\r\n        let firstDay: number = date.getDate();\r\n        if (date.getDay() === 0) {\r\n            firstDay += 1;\r\n        }\r\n\r\n        let lastDay: number = firstDay + 6; // last day is the first day + 6\r\n\r\n        let firstDayMonth: string = month;\r\n        let lastDayMonth: string = month;\r\n\r\n        let firstDayYear: string = year;\r\n        let lastDayYear: string = year;\r\n\r\n        if (firstDay < 1) {\r\n            const prevMonthDate: Date = new Date(date.getFullYear(), date.getMonth() - 1);\r\n            firstDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(prevMonthDate);\r\n            const daysInPrevMonth: number = this.daysInMonth(prevMonthDate);\r\n\r\n            let i: number = 0;\r\n            let prevMonthDay: number = daysInPrevMonth;\r\n            for (i = 0; i < Math.abs(firstDay); i++) {\r\n                prevMonthDay--;\r\n            }\r\n            firstDay = prevMonthDay;\r\n\r\n            const prevMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(prevMonthDate);\r\n            if (Number(prevMonthYear) < Number(year)) {\r\n                firstDayYear = prevMonthYear;\r\n            }\r\n        }\r\n\r\n        const daysInMonth: number = this.daysInMonth(date);\r\n        if (lastDay > daysInMonth) {\r\n            const nextMonthDate: Date = new Date(date.getFullYear(), date.getMonth() + 1);\r\n            lastDayMonth = new Intl.DateTimeFormat(locale, { month: 'short' }).format(nextMonthDate);\r\n\r\n            let i: number = 0;\r\n            let nextMonthDay: number = 0;\r\n            for (i = 0; i < (lastDay - daysInMonth); i++) {\r\n                nextMonthDay++;\r\n            }\r\n            lastDay = nextMonthDay;\r\n\r\n            const nextMonthYear: string = new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(nextMonthDate);\r\n            if (Number(nextMonthYear) > Number(year)) {\r\n                lastDayYear = nextMonthYear;\r\n            }\r\n        }\r\n\r\n        return `${firstDay}` + (firstDayMonth !== lastDayMonth ? ' ' + firstDayMonth : '') +\r\n            (firstDayYear !== lastDayYear ? ' ' + firstDayYear : '') +\r\n            ` - ${lastDay} ${lastDayMonth} ${lastDayYear}`;\r\n    }\r\n\r\n    private daysInMonth(anyDateInMonth: Date): number {\r\n        return new Date(anyDateInMonth.getFullYear(), anyDateInMonth.getMonth() + 1, 0).getDate();\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { CalendarSchedulerViewComponent } from './calendar-scheduler-view.component';\r\nimport { CalendarSchedulerHourSegmentComponent } from './calendar-scheduler-hour-segment.component';\r\nimport { CalendarSchedulerHeaderComponent } from './calendar-scheduler-header.component';\r\nimport { CalendarSchedulerEventComponent } from './calendar-scheduler-event.component';\r\nimport { CalendarSchedulerEventTitleComponent } from './calendar-scheduler-event-title.component';\r\nimport { CalendarSchedulerEventContentComponent } from './calendar-scheduler-event-content.component';\r\nimport { CalendarSchedulerEventActionsComponent } from './calendar-scheduler-event-actions.component';\r\n\r\nimport { CalendarSchedulerUtils } from './utils/calendar-scheduler-utils.provider';\r\n\r\nimport { SchedulerEventTitlePipe } from './pipes/scheduler-event-title.pipe';\r\n\r\nimport { SchedulerDateFormatter } from './formatters/scheduler-date-formatter.provider';\r\nimport { SchedulerEventTitleFormatter } from './formatters/scheduler-event-title-formatter.provider';\r\n\r\nexport * from './calendar-scheduler-view.component';\r\nexport * from './formatters/scheduler-date-formatter.provider';\r\nexport * from './formatters/scheduler-event-title-formatter.provider';\r\nexport * from './pipes/scheduler-event-title.pipe';\r\nexport * from './utils/calendar-scheduler-utils.provider';\r\nexport * from '../common/utils';\r\nexport * from './models';\r\n\r\nimport { SchedulerConfig } from './scheduler-config';\r\n\r\nexport const SCHEDULER_CONFIG = new InjectionToken('SchedulerConfig');\r\n\r\nexport function provideSchedulerConfig(config: SchedulerConfig) {\r\n    return new SchedulerConfig(config);\r\n}\r\n\r\n/**\r\n * The main module of this library. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalenderModule } from 'angular-calendar';\r\n * import { SchedulerModule } from 'angular-calendar-scheduler';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalenderModule.forRoot(),\r\n *     SchedulerModule.forRoot({ locale: 'en', headerDateFormat: 'daysRange' })\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    })\r\n  ],\r\n  declarations: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent,\r\n    SchedulerEventTitlePipe\r\n  ],\r\n  providers: [\r\n    CalendarSchedulerUtils,\r\n    SchedulerEventTitlePipe,\r\n    SchedulerEventTitleFormatter,\r\n    SchedulerDateFormatter\r\n  ],\r\n  exports: [\r\n    CalendarSchedulerViewComponent,\r\n    CalendarSchedulerHourSegmentComponent,\r\n    CalendarSchedulerHeaderComponent,\r\n    CalendarSchedulerEventComponent,\r\n    CalendarSchedulerEventTitleComponent,\r\n    CalendarSchedulerEventContentComponent,\r\n    CalendarSchedulerEventActionsComponent\r\n  ]\r\n})\r\nexport class SchedulerModule {\r\n  static forRoot(config?: SchedulerConfig): ModuleWithProviders {\r\n    return {\r\n        ngModule: SchedulerModule,\r\n        providers: [\r\n            { provide: SCHEDULER_CONFIG, useValue: config },\r\n            { provide: SchedulerConfig, useFactory: provideSchedulerConfig, deps: [SCHEDULER_CONFIG] }\r\n        ]\r\n    };\r\n}\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CalendarSchedulerEventActionsComponent as Éµg} from './modules/scheduler/calendar-scheduler-event-actions.component';\nexport {CalendarSchedulerEventContentComponent as Éµf} from './modules/scheduler/calendar-scheduler-event-content.component';\nexport {CalendarSchedulerEventTitleComponent as Éµe} from './modules/scheduler/calendar-scheduler-event-title.component';\nexport {CalendarSchedulerEventComponent as Éµd} from './modules/scheduler/calendar-scheduler-event.component';\nexport {CalendarSchedulerHeaderComponent as Éµc} from './modules/scheduler/calendar-scheduler-header.component';\nexport {CalendarSchedulerHourSegmentComponent as Éµb} from './modules/scheduler/calendar-scheduler-hour-segment.component';\nexport {SchedulerConfig as Éµa} from './modules/scheduler/scheduler-config';\nexport {MINUTES_IN_HOUR as Éµh} from './modules/scheduler/utils/calendar-scheduler-utils';"],"names":["tslib_1.__decorate","tslib_1.__param","moment"],"mappings":"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"}